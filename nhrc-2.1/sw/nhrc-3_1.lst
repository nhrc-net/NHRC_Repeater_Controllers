MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         ;; NHRC-3.1 Repeater Controller.
                      00002         ;; Copyright 1996 - 2010 NHRC LLC,
                      00003         ;; as an unpublished proprietry work.
                      00004         ;; All rights reserved.
                      00005         ;; No part of this document may be used or reproduced by any means,
                      00006         ;; for any purpose, without the expressed written consent of NHRC LLC.
                      00007 
                      00008         ;; V 0.01 15 March 2009 Initial port from NHRC-3 Plus code
                      00009         ;; V 0.02 02 January 2010 ISD is working!
                      00010         ;; V 0.03 04 January 2010 simplex working, sort of, serial enabled.
                      00011         ;; V 0.11 28 September 2010 8 message expansion.
                      00012         ;; V 0.20 21 November 2010 two tail messages
                      00013         ;; V 0.90 24 November 2010 functionally complete (I think)
                      00014         ;; V 0.92 05 January 2011 5 saved setups, turn off failsafe clock
                      00015         ;; v 0.93 06 January 2011 simplex message works with timeout timer.
                      00016         ;;                        erase simplex msg on state change to simplex
                      00017         ;;                        CTCSS control op mode works right now.
                      00018         ;; v 0.94 07 January 2011 simplex message length fixed
                      00019         ;; v 0.95 08 January 2011 simplex message in slots 5-9, 90 sec max
                      00020         ;; v 0.96 09 January 2011 normal IDs toggle correctly
                      00021         ;; v 0.97 09 January 2011 euro ID mode end speech ID works now.
                      00022         ;; v 0.98 11 January 2011 reprogram unlock code.
                      00023         ;; v 0.99 11 January 2011 digital outputs port 5 bits 0 and 1
                      00024         ;; v 1.00 02 June 2011 bump version to 1.00
                      00025         ;; v 1.01 15 July 2011 version 1.01 NHRC-2.1 support
                      00026         ;; v 1.02 07 May 2011 Version 1.02 NHRC-2.1 fixes
                      00027 
                      00028         ;; NOTE: when updating the version, search this file for
                      00029         ;; CW version data
                      00030         
  0000003E            00031 VERS1   equ     h'3e'           ; 1
  0000003F            00032 VERS2   equ     h'3f'           ; 0
  0000003C            00033 VERS3   equ     h'3c'           ; 2
                      00034                         
  00000001            00035 LOAD_EE=1
                      00036 ;NHRC3_1=1               ; set in NHRC-3.1 build Project->Build Options->Project->MPASM Macro Definition
                            s
                      00037 
                      00038         ERRORLEVEL 0, -302,-306 ; suppress Argument out of range errors
                      00039 
                      00040         IFDEF __16F886
                      00041         include "p16f886.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F886 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00778         LIST
                      00042 
                      00043         IFDEF __MPLAB_DEBUGGER_ICD2
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044         __CONFIG _CONFIG1, _PWRTE_ON & _FCMEN_OFF & _XT_OSC & _LVP_OFF & _CP_OFF & _WDT_OFF
                      00045         ELSE
2007   27A9           00046         __CONFIG _CONFIG1, _PWRTE_ON & _FCMEN_OFF & _XT_OSC & _LVP_OFF & _CP_ON
                      00047         ENDIF                   ; __MPLAB_DEBUGGER_ICD2
                      00048         ELSE
                      00049         ERROR THIS PROCESSOR IS NOT SUPPORTED
                      00050         ENDIF                   ; __16F886
                      00051         
                      00052         include "eeprom.inc"
                      00001 ; ***********************************
                      00002 ; ** NHRC-3.1 EEPROM Constants     **
                      00003 ; ** Rev 0.99 11 January 2010      **
                      00004 ; ** Copyright 2011, NHRC LLC      **
                      00005 ; ***********************************
                      00006 
                      00007 ; ***********************
                      00008 ; ** EEPROM MEMORY MAP **
                      00009 ; ***********************
                      00010 
                      00011         ;; 16F886 has 256 bytes EEPROM
  00000000            00012 EETMRB  equ     h'00'           ; 0000 Timer Preset values (1 byte each * 16)
  00000000            00013 EETHTL  equ     h'00'           ; 0000 long hang timer.
  00000001            00014 EETHTS  equ     h'01'           ; 0001 hang timer
  00000002            00015 EETID   equ     h'02'           ; 0002 ID timer
  00000003            00016 EETDTA  equ     h'03'           ; 0003 DTMF access timer
  00000004            00017 EETTML  equ     h'04'           ; 0004 long timeout timer
  00000005            00018 EETTMS  equ     h'05'           ; 0005 timeout timer
  00000006            00019 EETFAN  equ     h'06'           ; 0006 fan timer
  00000007            00020 EETTAIL equ     h'07'           ; 0007 tail counter
  00000008            00021 EEALARM equ     h'08'           ; 0008 alarm announce timer
  00000009            00022 EETCWP  equ     h'09'           ; 0009 CW pitch
  0000000A            00023 EETCWS  equ     h'0a'           ; 000A CW speed
  0000000A            00024 LASTTMR equ     h'0A'           ; timers 0-a, 10 timers.
                      00025         
  00000008            00026 EESETSZ equ     h'08'           ; size of both sets.
  00000008            00027 CTLOPS  equ     h'08'           ; 8 bytes of control op data.
                      00028 
                      00029         ;; 0010-001f are the control op data, set 0
  00000010            00030 EE0B    equ     h'10'           ; BASE OF SET 0
                      00031         ;; set 0 ends at 1F
                      00032 
                      00033         ;; 0020-002f are the control op data, set 1
  00000020            00034 EE1B    equ     h'20'           ; BASE OF SET 1
                      00035         ;; set 1 ends at 2F
                      00036 
                      00037         ;; 0030-003f are the control op data, set 2
  00000030            00038 EE2B    equ     h'30'           ; BASE OF SET 2
                      00039         ;; set 2 ends at 3F
                      00040 
                      00041         ;; 0040-004f are the control op data, set 3
  00000040            00042 EE3B    equ     h'40'           ; BASE OF SET 3
                      00043         ;; set 3 ends at 4F
                      00044 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00045         ;; 0050-005f are the control op data, set 4
  00000050            00046 EE4B    equ     h'50'           ; BASE OF SET 4
                      00047         ;; set 4 ends at 5F
                      00048 
  00000060            00049 EECTB   equ     h'60'           ; 0060 Courtesy tone 0    Courtesy Tone 1
                      00050                                 ; 0070 Courtesy tone 2    Courtesy Tone 3
                      00051                                 ; 0080 Courtesy tone 4    Courtesy Tone 5
                      00052                                 ; 0090 Courtesy tone 6    Courtesy Tone 7
                      00053 
  000000A0            00054 EECWID  equ     h'a0'           ; 00a0 CW ID; 15 letters, max
                      00055         
  000000B0            00056 EEPFB   equ     h'b0'           ; 00b0 control prefix 0   control prefix 1
                      00057                                 ; 00c0 control prefix 2   control prefix 3
                      00058                                 ; 00d0 control prefix 4   control prefix 5
                      00059                                 ; 00e0 control prefix 6   control prefix 7
  00000008            00060 EEPFC   equ     d'08'           ; 8 prefixes.
  00000008            00061 EEPFL   equ     d'08'           ; of length 8.
                      00062                                 ; next address is f0
                      00063         
  00000008            00064 EESSC   equ     d'8'            ; save 8 groups
  00000004            00065 EENSS   equ     d'4'            ; last saved set number
                      00066 
  000000EF            00067 EELAST  equ     h'ef'           ; last address to initialize.
                      00068 
  00000007            00069 MAXPFX  equ     d'7'            ; max prefix index.
                      00053 
                      00054 ;macro definitions for ROM paging.
                      00055         
                      00056 PAGE0   macro                   ; select page 0
                      00057         bcf     PCLATH,3
                      00058         bcf     PCLATH,4
                      00059         endm
                      00060 
                      00061 PAGE1   macro                   ; select page 1
                      00062         bsf     PCLATH,3
                      00063         bcf     PCLATH,4
                      00064         endm
                      00065 
                      00066 PAGE2   macro                   ; select page 2
                      00067         bcf     PCLATH,3
                      00068         bsf     PCLATH,4
                      00069         endm
                      00070 
                      00071 PAGE3   macro                   ; select page 3
                      00072         bsf     PCLATH,3
                      00073         bsf     PCLATH,4
                      00074         endm
                      00075 
                      00076         IFDEF DEBUG
                      00077 TEN     equ     D'4'            ; decade counter.
                      00078         ELSE
  0000000A            00079 TEN     equ     D'10'           ; decade counter.
                      00080         ENDIF
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00081 
                      00082         
                      00083         ;; ISD command queue commands
                      00084         ;; bit 7 6 5 4 3 2 1 0
                      00085         ;;     0 0 c c c c c c send command c:
                      00086         ;;     0 1 m m m m m m play message    m
                      00087         ;;     1 0 m m m m m m erase message   m
                      00088         ;;     1 1 m m m m m m record message  m
                      00089         ;;
                      00090         ;;  commands are:
                      00091         ;;     c = 0 0 0 0 0 0  = 0 invalid!
                      00092         ;;     c = 0 0 0 0 0 1  = 1 STOP
                      00093         ;;     c = 0 0 0 0 1 0  = 2 RESET
                      00094         ;;     c = 0 0 0 0 1 1  = 3 CLR_INT (will I need this from here?)
                      00095         ;;     c = 0 0 0 1 0 0  = 4 RD_STATUS
                      00096         ;;     c = 0 0 0 1 0 1  = 5 DEVID read
                      00097         ;;     c = 0 0 0 1 1 0  = 6 G_ERASE
                      00098         ;;     c = 0 0 0 1 1 1  = 7 WR_APC2 (set APC)
                      00099         ;;     c = 0 0 1 0 0 0  = 8 PU
                      00100         ;;     c = 1 d d d d d  = delay d (0-31) * 10 ms before next operation
                      00101 
  00000025            00102 IDLY50  equ     b'00100101'     ; delay 5  =  50 ms
  00000026            00103 IDLY60  equ     b'00100110'     ; delay 6  =  60 ms
  0000002A            00104 IDLY100 equ     b'00101010'     ; delay 10 = 100 ms
  00000034            00105 IDLY200 equ     b'00110100'     ; delay 20 = 200 ms
  00000039            00106 IDLY250 equ     b'00111001'     ; delay 25 = 250 ms
  00000040            00107 ICMDPL  equ     b'01000000'     ; is mask, or in message number
  000000C0            00108 ICMDREC equ     b'11000000'     ; is mask
  00000080            00109 ICMDDEL equ     b'10000000'     ; is mask
  00000000            00110 ICMDBAD equ     b'00000000'     ; invalid! bad!
  00000001            00111 ICMDST  equ     b'00000001'     ; stop
  00000002            00112 ICMDRST equ     b'00000010'     ; reset
  00000003            00113 ICMDCLI equ     b'00000011'     ; clear interrupt
  00000004            00114 ICMDRDS equ     b'00000100'     ; read status
  00000005            00115 ICMDDID equ     b'00000101'     ; read devid
  00000006            00116 ICMDGER equ     b'00000110'     ; G_erase
  00000007            00117 ICMDWAP equ     b'00000111'     ; write APC2 
  00000008            00118 ICMDPU  equ     b'00001000'     ; power up
                      00119         
                      00120         ;; ISD commands, reversed bit patterns
                      00121         ;; LED sets bit4, reversed is bit3
  00000080            00122 ISDPU   equ     b'10000000'     ; PU        - 0x01 - 2 byte command
  00000040            00123 ISDSTOP equ     b'01000000'     ; STOP      - 0x02 - 2 byte command -- int
  000000C0            00124 ISDRST  equ     b'11000000'     ; RESET     - 0x03 - 2 byte command
  00000020            00125 ISDCINT equ     b'00100000'     ; CLR_INT   - 0x04 - 2 byte command
  000000A0            00126 ISDSTS  equ     b'10100000'     ; RD_STATUS - 0x05 - 2 byte command
  000000E0            00127 ISDPD   equ     b'11100000'     ; PD        - 0x07 - 2 byte command
  00000090            00128 ISDDID  equ     b'10010000'     ; DEVID     - 0x09 - 3 byte command
  000000CA            00129 ISDGER  equ     b'11001010'     ; G_ERASE   - 0x43 - 2 byte command -- int
  000000A6            00130 ISDWAPC equ     b'10100110'     ; WR_APC2   - 0x65 - 3 byte command
  00000009            00131 ISDPLAY equ     b'00001001'     ; SET PLAY  - 0x80 - 7 byte command -- int
  00000089            00132 ISDREC  equ     b'10001001'     ; SET REC   - 0x81 - 7 byte command -- int
  00000049            00133 ISDERAS equ     b'01001001'     ; SET ERASE - 0x82 - 7 byte command -- int
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00134 
                      00135         ;; APC values configured for max volume
                      00136         ;; record from analog in
                      00137         ;; analog in always passed
                      00138         ;; analog output in AUX mode (voltage output)
                      00139         ;; pwm speaker disabled
                      00140         ;; analog output powered up
                      00141         ;; vAlert disabled
                      00142         ;; EOM stops playback
  00000015            00143 xPC07   equ     b'00010101'     ; APC register bits 0-7
  0000001F            00144 APC07   equ     b'00011111'     ; APC register bits 0-7
                      00145         ;;        1xxxxxxx      ; D0 VOL0
                      00146         ;;        x1xxxxxx      ; D1 VOL1  -- max is 000
                      00147         ;;        xx1xxxxx      ; D2 VOL2 
                      00148         ;;        xxx1xxxx      ; D3 monitor during recording
                      00149         ;;        xxxx1xxx      ; D4 mix mic input 
                      00150         ;;        xxxxx1xx      ; D5 sound effects disable
                      00151         ;;        xxxxxx1x      ; D6 feed through disable
                      00152         ;;        xxxxxxx1      ; D7 analog outupt AUX mode
  000000B0            00153 APC811  equ     b'10110000'     ; APC register bits 8-11 and 4 fill 0s
                      00154         ;;        1xxxxxxx      ; PWM Speaker power down
                      00155         ;;        x1xxxxxx      ; analog output power down
                      00156         ;;        xx1xxxxx      ; vAlert disable 
                      00157         ;;        xxx1xxxx      ; EOM stops playback enable
                      00158 
                      00159 ; *************************
                      00160 ; ** IO Port Assignments **
                      00161 ; *************************
                      00162 
                      00163 ; PORTA
  00000000            00164 DTMFQ1  equ     0               ; input, DTMF decoder Q1
  00000001            00165 DTMFQ2  equ     1               ; input, DTMF decoder Q2
  00000002            00166 DTMFQ3  equ     2               ; input, DTMF decoder Q3
  00000003            00167 DTMFQ4  equ     3               ; input, DTMF decoder Q4
  00000004            00168 RX0AUD  equ     4               ; output, audio mute, muted when high.
  00000004            00169 INIT    equ     4               ; output, audio mute, muted when high.
  00000005            00170 DTMF_DV equ     5               ; input, DTMF digit valid when high.
                      00171 
                      00172 ; PORTB
  00000000            00173 FANCTL  equ     0               ; output, fan control/digital output.
  00000001            00174 RX0COR  equ     1               ; input, COR
  00000002            00175 ISDSEL  equ     2               ; output, ISD Slave Select not.
  00000003            00176 ISDINT  equ     3               ; input, ISD interrupt.
  00000004            00177 CTSEL1  equ     4               ; input, courtesy tone selection.
  00000005            00178 CTSEL2  equ     5               ; input, courtesy tone selection.
  00000005            00179 ALARMIN equ     5               ; alarm input bit
  00000006            00180 OUT1    equ     6               ; digital output 1.
  00000007            00181 OUT2    equ     7               ; digital output 2.
                      00182 
                      00183 ; PORTC
  00000000            00184 TX0PTT  equ     0               ; output, PTT when high.
  00000001            00185 BEEP    equ     1               ; PWM output, beep tone source.
  00000002            00186 RX0PL   equ     2               ; input, CTCSS present when low.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00187 ;       equ     3               ; SPI clock
                      00188 ;       equ     4               ; MISO
                      00189 ;       equ     5               ; MOSI
                      00190 ;       equ     6               ; serial TX
                      00191 ;       equ     7               ; serial RX
                      00192 
                      00193 
                      00194 ; *******************
                      00195 ; ** Control Flags **
                      00196 ; *******************
                      00197         
                      00198 ;tFlags                         ; timer flags  
  00000000            00199 TICK    equ     0               ; TICK indicator
  00000001            00200 ONEMS   equ     1               ; 1 ms tick flag
  00000002            00201 TENMS   equ     2               ; 10 ms tick flag
  00000003            00202 HUNDMS  equ     3               ; 100 ms tick flag
  00000004            00203 ONESEC  equ     4               ; 1 second tick flag
  00000005            00204 TENSEC  equ     5               ; 10 second flag...
                      00205 ; niy   equ     6               ; NIY
  00000007            00206 CWBEEP  equ     7               ; cw beep is on.
                      00207         
                      00208 ;flags
  00000000            00209 initID  equ     0               ; need to ID now
  00000001            00210 needID  equ     1               ; need to send ID
  00000002            00211 IDNOW   equ     2               ; ID is running now.
  00000003            00212 TXONFLG equ     3               ; last TX state flag
  00000004            00213 CMD_NIB equ     4               ; command interpreter nibble flag for copy
  00000005            00214 DEF_CT  equ     5               ; deferred courtesy tone.
  00000006            00215 DEF_ID  equ     6               ; deferred ID message.
  00000007            00216 LAST_DV equ     7               ; last DTMF digit valid.
                      00217 
                      00218 ;mscFlag                        ; misc flags...
  00000000            00219 DT0ZERO equ     0               ; dtmf-0 last received 0
                      00220 ; NIY   equ     1               ; NIY
  00000002            00221 LITZDT0 equ     2               ; LiTZ on DTMF-0
  00000003            00222 IDTOGL  equ     3               ; ID2 flag.  used to alternate ID messages.
  00000004            00223 TAIL2F  equ     4               ; tail 2 flag1. used to alternate tail messages.
  00000005            00224 ALARMED equ     5               ; alarmed!
  00000006            00225 CTCSS0  equ     6               ; last CTCSS on main receiver
  00000007            00226 SC_RDY  equ     7               ; serial command is ready.
                      00227 
                      00228 ; txFlag
  00000000            00229 RX0OPEN equ     0               ; main receiver repeating
                      00230 ; NIY   equ     1               ; NIY
  00000002            00231 TXHANG  equ     2               ; hang time
                      00232 ; NIY   equ     3               ; NIY
                      00233 ; NIY   equ     4               ; NIY
  00000005            00234 TALKING equ     5               ; ISD playing back
  00000006            00235 BEEPING equ     6               ; beep tone active
  00000007            00236 CWPLAY  equ     7               ; CW playing
                      00237 
                      00238 
  0000003C            00239 CWTBDLY equ     d'60'           ; CW timebase delay for 20 WPM.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00240 
                      00241 ; isdFlag
  00000000            00242 ISDRUNF equ     0               ; isd running flag
  00000001            00243 ISDRECF equ     1               ; isd recording flag.
  00000002            00244 ISDRECR equ     2               ; isd record flag. record next keyup.
  00000003            00245 ISDERS  equ     3               ; isd is erasing
  00000005            00246 ISDTEST equ     5               ; isd test mode
  00000006            00247 ISDZAPS equ     6               ; delete simplex message flag.
  00000007            00248 ISDRECE equ     7               ; isd record ERROR: message overflow
                      00249 
                      00250 ;; ismpcf -- ISD state machine processor control flag
  00000000            00251 ISMWAIT equ     0               ; wait for isdtmr countdown 
  00000001            00252 ISMWINT equ     1               ; wait for ISD interrupt
  00000007            00253 ISMERAS equ     7               ; erase cannot be interrupted!
                      00254         
                      00255 ;; COR debounce time
  00000005            00256 COR1DEB equ     5               ; 5 ms.  COR off to on debounce time
  00000005            00257 COR0DEB equ     5               ; 5 ms.  COR on to off debounce time
  00000050            00258 COR0DBS equ     50              ; 50 ms. COR on to off debounce time, simplex
  00000064            00259 DLY1DEB equ     d'100'          ; 100 ms. COR off->on debounce time, with DAD.
  00000032            00260 DLY0DEB equ     d'50'           ; 50 ms.  COR on->off debounce time, with DAD.
  000000FA            00261 CHNKDEB equ     d'250'          ; 250 ms.
                      00262 
  00000006            00263 IDSOON  equ     D'6'            ; ID soon, polite IDer threshold, 60 sec
  00000014            00264 MUTEDLY equ     D'20'           ; DTMF muting timer = 2.0 sec.
  00000032            00265 DTMFDLY equ     d'50'           ; DTMF activity timer = 5.0 sec.
  00000014            00266 LITZTIM equ     d'20'           ; 5.0-3.0=2.0 time left on DTMF timer for LITZ
  00000078            00267 UNLKDLY equ     d'120'          ; unlocked mode timer.
                      00268         
                      00269 ; dtRFlag -- dtmf sequence received indicator
  00000000            00270 DT0RDY  equ     0               ; some sequence received on DTMF-0
  00000001            00271 DT1RDY  equ     1               ; some sequence received on DTMF-1
  00000002            00272 DT2RDY  equ     2               ; some sequence received on DTMF-2
  00000003            00273 DTUL    equ     3               ; command received from unlocked port.
  00000004            00274 DTSEVAL equ     4               ; dtmf command evaluation in progress.
  00000005            00275 DT0UNLK equ     5               ; unlocked indicator
  00000006            00276 DT1UNLK equ     6               ; unlocked indicator
  00000007            00277 DT2UNLK equ     7               ; unlocked indicator
                      00278                 ;; 
                      00279 ;dtEFlag -- DTMF command evaluator control flag.
                      00280         ;; low order 5 bits indicate next prefix number/user command to scan
  00000005            00281 DT0CMD  equ     5               ; received this command from dtmf0
  00000006            00282 DT1CMD  equ     6               ; received this command from dtmf1
  00000007            00283 DT2CMD  equ     7               ; received this command from dtmf2
                      00284 
                      00285 ; beepCtl -- beeper control flags...
  00000000            00286 B_ADR0  equ     0               ; beep or CW addressing mode indicator
  00000001            00287 B_ADR1  equ     1               ; beep or CW addressing mode indicator
                      00288                                 ;   00 EEPROM
                      00289                                 ;   01 lookup table index, built in messages.
                      00290                                 ;   10 Raw RAM address
                      00291                                 ;   11 Direct from DTMF buffer.
                      00292                                 ; 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            00293 B_BEEP  equ     2               ; beep sequence in progress
  00000003            00294 B_CW    equ     3               ; CW transmission in progress
                      00295 ;NIY    equ     4               ; 
                      00296 ;NIY    equ     5               ; 
  00000006            00297 B_LAST  equ     6               ; last segment of CT tones.
                      00298 ;NIY    equ     7               ; 
                      00299 
                      00300 ; beepCtl preset masks
  00000084            00301 BEEP_CT equ     b'10000100'     ; CT from EEPROM
  00000085            00302 BEEP_CX equ     b'10000101'     ; CT from ROM table
  00000089            00303 CW_ROM  equ     b'10001001'     ; CW from ROM table
  00000088            00304 CW_EE   equ     b'10001000'     ; CW from EEPROM
                      00305 
  00000005            00306 CTPAUSE equ     d'5'            ; 50 msec pause before CT.
                      00307 
  00000032            00308 PULS_TM equ     d'50'           ; 50 x 10 ms = 500 ms.  pulse duration time.
                      00309         
                      00310 ; receiver states
  00000000            00311 RXSOFF  equ     0
  00000001            00312 RXSON   equ     1
  00000002            00313 RXSTMO  equ     2
  00000003            00314 RXSREC  equ     3               ; record with rptr disabled. new for 1.04
  00000004            00315 RXSOFON equ     4               ; receiver is active but repeater disabled,
                      00316                                 ; new feature for 1.12
                      00317          
                      00318 ; cTone Courtesy tone selections
  000000FF            00319 CTNONE  equ     h'ff'           ; no courtesy tone.
  00000000            00320 CT0     equ     0               ; normal courtesy tone
  00000001            00321 CT1     equ     1               ; 
  00000002            00322 CT2     equ     2               ; 
  00000003            00323 CT3     equ     3               ; 
  00000004            00324 CTSP1   equ     4               ; 
  00000005            00325 CTSP2   equ     5               ; unused courtesy tone
  00000006            00326 CTSP3   equ     6               ; unused courtesy tone
  00000007            00327 CTUNLOK equ     7               ; unlocked courtesy tone
                      00328 
                      00329 ; Voice message numbers.
                      00330         IFDEF NHRC3_1
                      00331 VINITID equ     0               ; initial ID.
                      00332 VNORMID equ     1               ; normal ID.
                      00333 VNORMI2 equ     2               ; normal ID.
                      00334 VTIMOUT equ     3               ; timeout message.
                      00335 VTAIL   equ     4               ; tail message.
                      00336 VCTONE  equ     4               ; courtesy tone message.
                      00337 VTAIL2  equ     5               ; tail message.
                      00338 VALARM  equ     6               ; alarm track
                      00339 VTEST   equ     7               ; test track
                      00340 VSIMPLX equ     5               ; simplex message is 5-7 (~90 sec)
                      00341 VLAST   equ     7               ; last valid message number
                      00342         ELSE
  00000000            00343 VINITID equ     0               ; initial ID.
  00000001            00344 VNORMID equ     1               ; normal ID.
  00000002            00345 VTIMOUT equ     2               ; timeout message.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00346 VTAIL   equ     3               ; tail message.
  00000003            00347 VCTONE  equ     3               ; courtesy tone message.
  00000001            00348 VSIMPLX equ     1               ; simplex message is 1-3 (~30 sec)
  00000003            00349 VLAST   equ     3               ; last valid message number
                      00350         ENDIF
                      00351 
                      00352 ; 
                      00353 ; CW Message indexes into table at MesgTabl
                      00354 ;
  00000000            00355 CW_OK   equ     h'00'           ; CW: OK
  00000003            00356 CW_ERR  equ     h'03'           ; CW: ERR
  00000007            00357 CW_TO   equ     h'07'           ; CW: TO
  0000000A            00358 CW_ON   equ     h'0a'           ; CW: ON
  0000000D            00359 CW_OFF  equ     h'0d'           ; CW: OFF
  00000011            00360 CWHELLO equ     h'11'           ; CW: powerup message.
                      00361         
                      00362 ;
                      00363 ; CW sender constants
                      00364 ;
  00000001            00365 CWDIT   equ     1               ; dit length in 100 ms
  00000003            00366 CWDAH   equ     CWDIT * 3       ; dah 
  00000001            00367 CWIESP  equ     CWDIT           ; inter-element space
  00000003            00368 CWILSP  equ     CWDAH           ; inter-letter space
  00000007            00369 CWIWSP  equ     CWDIT * 7       ; inter-word space
                      00370 
  00000025            00371 T0PRE   equ     D'37'           ; timer 0 preset for overflow in 224 counts.
                      00372 
                      00373 ;
                      00374 ; Serial control constants
                      00375 ;
  0000003A            00376 SCATTN  equ     h'3a'           ; attention character, :
                      00377         
  00000052            00378 SCREAD  equ     h'52'           ; read command R
  00000057            00379 SCWRITE equ     h'57'           ; write command W
  0000000D            00380 SCTERM  equ     h'0d'           ; command terminator <CR>
  0000004B            00381 SCACK   equ     h'4b'           ; ACK message K
  0000004E            00382 SCNAK   equ     h'4e'           ; NAK message N
  0000000D            00383 SCCR    equ     h'0d'           ; CR
  0000000A            00384 SCLF    equ     h'0a'           ; LF
                      00385 
                      00386 
                      00387 ; ***************
                      00388 ; ** VARIABLES **
                      00389 ; ***************
                      00390         cblock  h'20'           ; 1st block of RAM at 20h-7fh (96 bytes here)
                      00391         ;; interrupt pseudo-stack to save context during interrupt processing.
  00000020            00392         s_copy                  ; 20 saved STATUS
  00000021            00393         p_copy                  ; 21 saved PCLATH
  00000022            00394         f_copy                  ; 22 saved FSR
  00000023            00395         i_temp                  ; 23 temp for interrupt handler
                      00396         ;; internal timing generation
  00000024            00397         tFlags                  ; 24 Timer Flags
  00000025            00398         oneMsC                  ; 25 one millisecond counter
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            00399         tenMsC                  ; 26 ten milliseconds counter
  00000027            00400         hundMsC                 ; 26 hundred milliseconds counter
  00000028            00401         thouMsC                 ; 28 thousand milliseconds counter (1 sec)
                      00402 
  00000029            00403         temp                    ; 29 working storage. don't use in int handler.
  0000002A            00404         temp2                   ; 2a more working storage
  0000002B            00405         temp3                   ; 2b still more temporary storage
  0000002C            00406         temp4                   ; 2c yet still more temporary storage
  0000002D            00407         temp5                   ; 2d temporary storage...
  0000002E            00408         temp6                   ; 2e temporary storage...
  0000002F            00409         cmdSize                 ; 2f # digits received for current command
                      00410         ;; operating flags
  00000030            00411         flags                   ; 30 operating Flags
  00000031            00412         mscFlag                 ; 31 misc. flags.
  00000032            00413         txFlag                  ; 32 Transmitter control flag
  00000033            00414         rxFlag                  ; 33 Receiver COS valid flags
  00000034            00415         isdFlag                 ; 34 ISD control flag.
                      00416         ;; beep generator control 
  00000035            00417         beepTmr                 ; 35 timer for generating various beeps
  00000036            00418         beepAddr                ; 36 address for various beepings, low byte.
  00000037            00419         beepCtl                 ; 37 beeping control flag
                      00420         ;; debounce timers
  00000038            00421         rx0Dbc                  ; 38 main receiver debounce timer
                      00422         ;; receiver states
  00000039            00423         rx0Stat                 ; 39 main receiver state
                      00424         ;; timers
  0000003A            00425         rx0TOut                 ; 3a main receiver timeout timer, in seconds
  0000003B            00426         idTmr                   ; 3b id timer, in 10 seconds
  0000003C            00427         hangTmr                 ; 3c hang timer, in tenths.
  0000003D            00428         muteTmr                 ; 3d DTMF muting timer, in tenths.
  0000003E            00429         lMutTmr                 ; 3e link muting timer, in tenths.
  0000003F            00430         dtATmr                  ; 3f dtmf access timer
  00000040            00431         fanTmr                  ; 40 fan timer
  00000041            00432         tailCtr                 ; 41 tail message counter.
  00000042            00433         unlkTmr                 ; 42 unlocked mode timer.
  00000043            00434         pulsTmr                 ; 43 pulse timer.
                      00435         ;; timer presets
  00000044            00436         hangDly                 ; 44 hang timer preset, keep it handy.
                      00437         ;; CW generator data
  00000045            00438         cwTmr                   ; 45 CW element timer
  00000046            00439         cwByte                  ; 46 CW current byte (bitmap)
  00000047            00440         cwTbTmr                 ; 47 CW timebase timer
  00000048            00441         cwTone                  ; 48 CW tone
  00000049            00442         cwSpeed                 ; 49 CW Speed
                      00443         
  0000004A            00444         cTone                   ; 4a courtesy tone to play
                      00445 
  0000004B            00446         eeAddr                  ; 4b EEPROM address (low byte) to read/write
  0000004C            00447         eeCount                 ; 4c number of bytes to read/write from EEPROM
                      00448         ;; control operator control flag groups
  0000004D            00449         group0                  ; 4d group 0 flags
  0000004E            00450         group1                  ; 4e group 1 flags
  0000004F            00451         group2                  ; 4f group 2 flags
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000050            00452         group3                  ; 50 group 3 flags
  00000051            00453         group4                  ; 51 group 4 flags
  00000052            00454         group5                  ; 52 group 5 flags
  00000053            00455         group6                  ; 53 group 6 flags
  00000054            00456         group7                  ; 54 group 7 flags
                      00457         ;; ISD control variables
  00000055            00458         isdDly                  ; 55 isd command delay timer...
  00000056            00459         isdMsg                  ; 56 isd message number...
  00000057            00460         isdRMsg                 ; 57 isd RECORD message number...
  00000058            00461         sr0lo                   ; 58 isd SR0 register lo byte
  00000059            00462         sr0hi                   ; 59 isd SR0 register hi byte
  0000005A            00463         sr1lo                   ; 5a isd SR1 register lo byte
  0000005B            00464         isdDvId                 ; 5b isd device ID
  0000005C            00465         isdS1                   ; 5c isd start address first byte
  0000005D            00466         isdS2                   ; 5d isd start address 2nd byte
  0000005E            00467         isdE1                   ; 5e isd end address 1st byte
  0000005F            00468         isdE2                   ; 5f isd end address 2nd byte
  00000060            00469         isdCmd                  ; 60 isd command byte
  00000061            00470         ismpcf                  ; 61 isd state machine process control flags
  00000062            00471         alrmTmr                 ; 62 alarm announce timer.
                      00472 
                      00473         ;; last var at 0x6f there are 14 left in this block...
                      00474         
                      00475         endc                    ; this block ends at 6f
                      00476 
                      00477         cblock  h'70'           ; from 70 to 7f is common to all banks!
  00000070            00478         rICD70                  ; 70 reserved for ICD2
  00000071            00479         w_copy                  ; 71 saved W register for interrupt handler
  00000072            00480         dt0Ptr                  ; 72 DTMF-0 buffer pointer
  00000073            00481         dt0Tmr                  ; 73 DTMF-0 buffer timer
  00000074            00482         dtRFlag                 ; 74 DTMF receive flag...
  00000075            00483         dtEFlag                 ; 75 DTMF command interpreter control flag
  00000076            00484         eebPtr                  ; 76 eebuf write pointer.
  00000077            00485         scratch                 ; 77 scratchpad. (not currently used.)
  00000078            00486         txHead                  ; 78 serial transmitter buffer head.
  00000079            00487         txTail                  ; 79 serial transmitter buffer tail.
  0000007A            00488         rxHead                  ; 7a serial receiver buffer head.
  0000007B            00489         rxTail                  ; 7b serial receiver buffer tail.
  0000007C            00490         isdcbh                  ; 7c isd command buffer head
  0000007D            00491         isdcbt                  ; 7c isd command buffer tail
                      00492         endc                    ; 1st RAM block ends at 7f
                      00493 
                      00494         cblock  h'a0'           ; 2nd block of RAM at a0h-efh (80 bytes here)
                      00495         ;; 32 bytes serial transmit buffer
  000000A0            00496         txBuf00                 ; a0
  000000A1            00497         txBuf01                 ; a1
  000000A2            00498         txBuf02                 ; a2
  000000A3            00499         txBuf03                 ; a3
  000000A4            00500         txBuf04                 ; a4
  000000A5            00501         txBuf05                 ; a5
  000000A6            00502         txBuf06                 ; a6
  000000A7            00503         txBuf07                 ; a7
  000000A8            00504         txBuf08                 ; a8
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000A9            00505         txBuf09                 ; a9
  000000AA            00506         txBuf0a                 ; aa
  000000AB            00507         txBuf0b                 ; ab
  000000AC            00508         txBuf0c                 ; ac
  000000AD            00509         txBuf0d                 ; ad
  000000AE            00510         txBuf0e                 ; ae
  000000AF            00511         txBuf0f                 ; af
  000000B0            00512         txBuf10                 ; b0
  000000B1            00513         txBuf11                 ; b1
  000000B2            00514         txBuf12                 ; b2
  000000B3            00515         txBuf13                 ; b3
  000000B4            00516         txBuf14                 ; b4
  000000B5            00517         txBuf15                 ; b5
  000000B6            00518         txBuf16                 ; b6
  000000B7            00519         txBuf17                 ; b7
  000000B8            00520         txBuf18                 ; b8
  000000B9            00521         txBuf19                 ; b9
  000000BA            00522         txBuf1a                 ; ba
  000000BB            00523         txBuf1b                 ; bb
  000000BC            00524         txBuf1c                 ; bc
  000000BD            00525         txBuf1d                 ; bd
  000000BE            00526         txBuf1e                 ; be
  000000BF            00527         txBuf1f                 ; bf
                      00528         ;; 32 bytes serial receive buffer
  000000C0            00529         rxBuf00                 ; c0
  000000C1            00530         rxBuf01                 ; c1
  000000C2            00531         rxBuf02                 ; c2
  000000C3            00532         rxBuf03                 ; c3
  000000C4            00533         rxBuf04                 ; c4
  000000C5            00534         rxBuf05                 ; c5
  000000C6            00535         rxBuf06                 ; c6
  000000C7            00536         rxBuf07                 ; c7
  000000C8            00537         rxBuf08                 ; c8
  000000C9            00538         rxBuf09                 ; c9
  000000CA            00539         rxBuf0a                 ; ca
  000000CB            00540         rxBuf0b                 ; cb
  000000CC            00541         rxBuf0c                 ; cc
  000000CD            00542         rxBuf0d                 ; cd
  000000CE            00543         rxBuf0e                 ; ce
  000000CF            00544         rxBuf0f                 ; cf
  000000D0            00545         rxBuf10                 ; d0
  000000D1            00546         rxBuf11                 ; d1
  000000D2            00547         rxBuf12                 ; d2
  000000D3            00548         rxBuf13                 ; d3
  000000D4            00549         rxBuf14                 ; d4
  000000D5            00550         rxBuf15                 ; d5
  000000D6            00551         rxBuf16                 ; d6
  000000D7            00552         rxBuf17                 ; d7
  000000D8            00553         rxBuf18                 ; d8
  000000D9            00554         rxBuf19                 ; d9
  000000DA            00555         rxBuf1a                 ; da
  000000DB            00556         rxBuf1b                 ; db
  000000DC            00557         rxBuf1c                 ; dc
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000DD            00558         rxBuf1d                 ; dd
  000000DE            00559         rxBuf1e                 ; de
  000000DF            00560         rxBuf1f                 ; df
                      00561         ;; 8 bytes isd commands queue
  000000E0            00562         isdcb00                 ; e0
  000000E1            00563         isdcb01                 ; e1
  000000E2            00564         isdcb02                 ; e2
  000000E3            00565         isdcb03                 ; e3
  000000E4            00566         isdcb04                 ; e4
  000000E5            00567         isdcb05                 ; e5
  000000E6            00568         isdcb06                 ; e6
  000000E7            00569         isdcb07                 ; e7
                      00570         endc
                      00571         
                      00572         cblock  h'f0'           ; this is really common with 70-7f
  000000F0            00573         rsvdf0                  ; f0  reserve these 16 bytes
  000000F1            00574         rsvdf1                  ; f1  reserve these 16 bytes
  000000F2            00575         rsvdf2                  ; f2  reserve these 16 bytes
  000000F3            00576         rsvdf3                  ; f3  reserve these 16 bytes
  000000F4            00577         rsvdf4                  ; f4  reserve these 16 bytes
  000000F5            00578         rsvdf5                  ; f5  reserve these 16 bytes
  000000F6            00579         rsvdf6                  ; f6  reserve these 16 bytes
  000000F7            00580         rsvdf7                  ; f7  reserve these 16 bytes
  000000F8            00581         rsvdf8                  ; f8  reserve these 16 bytes
  000000F9            00582         rsvdf9                  ; f9  reserve these 16 bytes
  000000FA            00583         rsvdfa                  ; fa  reserve these 16 bytes
  000000FB            00584         rsvdfb                  ; fb  reserve these 16 bytes
  000000FC            00585         rsvdfc                  ; fc  reserve these 16 bytes
  000000FD            00586         rsvdfd                  ; fd  reserve these 16 bytes
  000000FE            00587         rsvdfe                  ; fe  reserve these 16 bytes
  000000FF            00588         rsvdff                  ; ff  reserve these 16 bytes
                      00589         endc                    ; 2nd RAM block ends at ff
                      00590 
                      00591         ;; 16c77 ram blocks continue...
                      00592         cblock  h'110'          ; 16 bytes at 110h-11fh
                      00593         endc
                      00594         
                      00595         cblock  h'120'          ; 80 bytes 120h-16fh
  00000120            00596         dt0buf0                 ; DTMF-0 receiver buffer (16 bytes) @ 120
  00000121            00597         dt0buf1
  00000122            00598         dt0buf2
  00000123            00599         dt0buf3
  00000124            00600         dt0buf4
  00000125            00601         dt0buf5
  00000126            00602         dt0buf6
  00000127            00603         dt0buf7
  00000128            00604         dt0buf8
  00000129            00605         dt0buf9
  0000012A            00606         dt0bufa
  0000012B            00607         dt0bufb
  0000012C            00608         dt0bufc
  0000012D            00609         dt0bufd
  0000012E            00610         dt0bufe
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000012F            00611         dt0buff
                      00612         endc
                      00613 
                      00614         cblock  h'130'          ; eeprom write buffer (16 bytes) @ 130
  00000130            00615         eebuf00                 ; eeprom write buffer (16 bytes) @ 130
  00000131            00616         eebuf01
  00000132            00617         eebuf02
  00000133            00618         eebuf03
  00000134            00619         eebuf04
  00000135            00620         eebuf05
  00000136            00621         eebuf06
  00000137            00622         eebuf07
  00000138            00623         eebuf08
  00000139            00624         eebuf09
  0000013A            00625         eebuf0a
  0000013B            00626         eebuf0b
  0000013C            00627         eebuf0c
  0000013D            00628         eebuf0d
  0000013E            00629         eebuf0e
  0000013F            00630         eebuf0f
                      00631         endc
                      00632 
                      00633         cblock  h'165'          ; reserved for ICD2
  00000165            00634         rICD165                 ; reserved for ICD2
  00000166            00635         rICD166                 ; reserved for ICD2
  00000167            00636         rICD167                 ; reserved for ICD2
  00000168            00637         rICD168                 ; reserved for ICD2
  00000169            00638         rICD169                 ; reserved for ICD2
  0000016A            00639         rICD16a                 ; reserved for ICD2
  0000016B            00640         rICD16b                 ; reserved for ICD2
  0000016C            00641         rICD16c                 ; reserved for ICD2
  0000016D            00642         rICD16d                 ; reserved for ICD2
  0000016E            00643         rICD16e                 ; reserved for ICD2
  0000016F            00644         rICD16f                 ; reserved for ICD2
                      00645         endc
                      00646         
                      00647         cblock  h'170'          ; this is common with 70-7f
  00000170            00648         rsvd170                 ; reserve these 16 bytes
  00000171            00649         rsvd171                 ; reserve these 16 bytes
  00000172            00650         rsvd172                 ; reserve these 16 bytes
  00000173            00651         rsvd173                 ; reserve these 16 bytes
  00000174            00652         rsvd174                 ; reserve these 16 bytes
  00000175            00653         rsvd175                 ; reserve these 16 bytes
  00000176            00654         rsvd176                 ; reserve these 16 bytes
  00000177            00655         rsvd177                 ; reserve these 16 bytes
  00000178            00656         rsvd178                 ; reserve these 16 bytes
  00000179            00657         rsvd179                 ; reserve these 16 bytes
  0000017A            00658         rsvd17a                 ; reserve these 16 bytes
  0000017B            00659         rsvd17b                 ; reserve these 16 bytes
  0000017C            00660         rsvd17c                 ; reserve these 16 bytes
  0000017D            00661         rsvd17d                 ; reserve these 16 bytes
  0000017E            00662         rsvd17e                 ; reserve these 16 bytes
  0000017F            00663         rsvd17f                 ; reserve these 16 bytes
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00664         endc                    ; 3nd RAM block ends at 17f
                      00665         
                      00666         ;; cblock       h'190'  ; 16 bytes at 190h-19fh
                      00667         ;; endc
                      00668         cblock  h'1a0'          ; 80 bytes 1a0h-1efh
  000001A0            00669         cmdbf00                 ; command buffer  @1a0
  000001A1            00670         cmdbf01                 ; command buffer
  000001A2            00671         cmdbf02                 ; command buffer
  000001A3            00672         cmdbf03                 ; command buffer
  000001A4            00673         cmdbf04                 ; command buffer
  000001A5            00674         cmdbf05                 ; command buffer
  000001A6            00675         cmdbf06                 ; command buffer
  000001A7            00676         cmdbf07                 ; command buffer
  000001A8            00677         cmdbf08                 ; command buffer
  000001A9            00678         cmdbf09                 ; command buffer
  000001AA            00679         cmdbf0a                 ; command buffer
  000001AB            00680         cmdbf0b                 ; command buffer
  000001AC            00681         cmdbf0c                 ; command buffer
  000001AD            00682         cmdbf0d                 ; command buffer
  000001AE            00683         cmdbf0e                 ; command buffer
  000001AF            00684         cmdbf0f                 ; command buffer  @1af (16 bytes)
  000001B0            00685         cmdbf10                 ; command buffer  @1b0
  000001B1            00686         cmdbf11                 ; command buffer
  000001B2            00687         cmdbf12                 ; command buffer
  000001B3            00688         cmdbf13                 ; command buffer
  000001B4            00689         cmdbf14                 ; command buffer
  000001B5            00690         cmdbf15                 ; command buffer
  000001B6            00691         cmdbf16                 ; command buffer
  000001B7            00692         cmdbf17                 ; command buffer
  000001B8            00693         cmdbf18                 ; command buffer
  000001B9            00694         cmdbf19                 ; command buffer
  000001BA            00695         cmdbf1a                 ; command buffer
  000001BB            00696         cmdbf1b                 ; command buffer
  000001BC            00697         cmdbf1c                 ; command buffer
  000001BD            00698         cmdbf1d                 ; command buffer
  000001BE            00699         cmdbf1e                 ; command buffer
  000001BF            00700         cmdbf1f                 ; command buffer @1bf (32 bytes)
                      00701         endc                    ; end of block @ 1bf
                      00702 
                      00703 
                      00704         cblock  h'1f0'          ; this is common with 70-7f
  000001F0            00705         rsvd1f0                 ; reserve these 16 bytes
  000001F1            00706         rsvd1f1                 ; reserve these 16 bytes
  000001F2            00707         rsvd1f2                 ; reserve these 16 bytes
  000001F3            00708         rsvd1f3                 ; reserve these 16 bytes
  000001F4            00709         rsvd1f4                 ; reserve these 16 bytes
  000001F5            00710         rsvd1f5                 ; reserve these 16 bytes
  000001F6            00711         rsvd1f6                 ; reserve these 16 bytes
  000001F7            00712         rsvd1f7                 ; reserve these 16 bytes
  000001F8            00713         rsvd1f8                 ; reserve these 16 bytes
  000001F9            00714         rsvd1f9                 ; reserve these 16 bytes
  000001FA            00715         rsvd1fa                 ; reserve these 16 bytes
  000001FB            00716         rsvd1fb                 ; reserve these 16 bytes
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000001FC            00717         rsvd1fc                 ; reserve these 16 bytes
  000001FD            00718         rsvd1fd                 ; reserve these 16 bytes
  000001FE            00719         rsvd1fe                 ; reserve these 16 bytes
  000001FF            00720         rsvd1ff                 ; reserve these 16 bytes
                      00721         endc                    ; 3nd RAM block ends at 1ff
                      00722         
                      00723 ; ********************
                      00724 ; ** STARTUP VECTOR **
                      00725 ; ********************
0000                  00726         org     0               ; startup vector
0000   018A           00727         clrf    PCLATH          ; stay in bank 0
0001   2A00           00728         goto    Start
                      00729 
                      00730 ; ***********************
                      00731 ; ** INTERRUPT HANDLER **
                      00732 ; ***********************
0002                  00733 IntHndlr
0004                  00734         org     4               ; interrupt vector
                      00735         ; preserve registers...
0004   00F1           00736         movwf   w_copy          ; save w register
0005   0E03           00737         swapf   STATUS,w        ; get STATUS
0006   0183           00738         clrf    STATUS          ; force bank 0
0007   00A0           00739         movwf   s_copy          ; save STATUS
0008   080A           00740         movf    PCLATH,w        ; get PCLATH
0009   00A1           00741         movwf   p_copy          ; save PCLATH
000A   018A           00742         clrf    PCLATH          ; force page 0
000B   1783           00743         bsf     STATUS,IRP      ; select RAM bank 1
000C   0804           00744         movf    FSR,w           ; get FSR
000D   00A2           00745         movwf   f_copy          ; save FSR
                      00746         
000E                  00747 TimrInt
000E   1D0B           00748         btfss   INTCON,T0IF     ; is it a timer interrupt?
000F   2814           00749         goto    CompInt         ; no
0010   3025           00750         movlw   T0PRE           ; get timer 0 preset value
0011   0081           00751         movwf   TMR0            ; preset timer 0
0012   1424           00752         bsf     tFlags,TICK     ; set tick indicator flag
0013   110B           00753         bcf     INTCON,T0IF     ; clear RTCC int mask
                      00754 
0014                  00755 CompInt                         ; timer 1 compare match interrupt.
0014   1D0C           00756         btfss   PIR1,CCP1IF     ; is it a compare interrupt?
0015   281E           00757         goto    EEWrInt         ; no.
0016   018E           00758         clrf    TMR1L           ; clear timer 1
0017   018F           00759         clrf    TMR1H           ; clear timer 1
0018   110C           00760         bcf     PIR1,CCP1IF     ; clear compare match interrupt bit.
0019   1C87           00761         btfss   PORTC,BEEP      ; is beep bit hi?
001A   281D           00762         goto    CompInL         ; no.
001B   1087           00763         bcf     PORTC,BEEP      ; lower beep bit.
001C   281E           00764         goto    EEWrInt         ; done.
001D                  00765 CompInL                         ; beep bit was low.
001D   1487           00766         bsf     PORTC,BEEP      ; raise beep bit.
                      00767 
001E                  00768 EEWrInt
001E   1E0C           00769         btfss   PIR1,EEIF       ; EE Write Complete interrupt?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F   2821           00770         goto    SRcvInt         ; no.
0020   120C           00771         bcf     PIR1,EEIF       ; yes, clear interrupt bit.
                      00772 
0021                  00773 SRcvInt                         ; Serial Receive Interrupt.
0021   1E8C           00774         btfss   PIR1,RCIF       ; serial receive interrupt?
0022   2834           00775         goto    SXmtInt         ; no.
                      00776         
0023   087A           00777         movf    rxHead,w        ; get head of buffer pointer.
0024   3EC0           00778         addlw   LOW rxBuf00     ; add to buffer base address.
0025   0084           00779         movwf   FSR             ; set FSR as pointer
0026   081A           00780         movf    RCREG,w         ; get received char.
0027   1383           00781         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
0028   0080           00782         movwf   INDF            ; put char into buffer
                      00783 
0029   0A7A           00784         incf    rxHead,w        ; increment pointer.
002A   391F           00785         andlw   h'1f'           ; mask so result stays in 0-31 range.
002B   00FA           00786         movwf   rxHead          ; save pointer.
                      00787 
002C   0800           00788         movf    INDF,w          ; get received character back.
002D   3C3A           00789         sublw   SCATTN          ; subtract CI-V preamble character.
002E   1903           00790         btfsc   STATUS,Z        ; skip if non-zero.
002F   01FA           00791         clrf    rxHead          ; preamble.  Reset to start of buffer.
                      00792 
0030   0800           00793         movf    INDF,w          ; get received character back.
0031   3C0D           00794         sublw   SCTERM          ; subtract CI-V EOM character.
0032   1903           00795         btfsc   STATUS,Z        ; skip if non-zero.
0033   17B1           00796         bsf     mscFlag,SC_RDY  ; end of message received, ready to process.
                      00797 
0034                  00798 SXmtInt                         ; Serial Transmit Interrupt.
0034   1E0C           00799         btfss   PIR1,TXIF       ; serial transmit Interrupt?
0035   2847           00800         goto    IntExit         ; no.
                      00801 
0036   0879           00802         movf    txTail,w        ; get tail pointer.
0037   0278           00803         subwf   txHead,w        ; subtract from head pointer.
0038   1903           00804         btfsc   STATUS,Z        ; result should be non-zero if buffer no
0039   2844           00805         goto    UTIntD          ; buffer is empty.
003A   0A79           00806         incf    txTail,w        ; get pointer + 1.
003B   391F           00807         andlw   h'1f'           ; mask so result stays in 0-31 range.
003C   00F9           00808         movwf   txTail          ; save it...
003D   3EA0           00809         addlw   LOW txBuf00     ; add to buffer base address.
003E   0084           00810         movwf   FSR             ; set FSR as pointer.
003F   1383           00811         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
0040   0800           00812         movf    INDF,w          ; get char.
0041   1783           00813         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
0042   0099           00814         movwf   TXREG           ; send char.
0043   2847           00815         goto    IntExit         ; done here.
                      00816         
0044                  00817 UTIntD                          ; no more chars to transmit.
                      00818         ;; turn off the transmitter interrupt.
0044   1683           00819         bsf     STATUS,RP0      ; select bank 1
0045   120C           00820         bcf     PIE1,TXIE       ; turn off the transmitter interrupt.
0046   1283           00821         bcf     STATUS,RP0      ; select bank 1
                      00822         ;; goto IntExit         ; done here.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00823         
0047                  00824 IntExit
0047   0821           00825         movf    p_copy,w        ; get PCLATH preserved value
0048   008A           00826         movwf   PCLATH          ; restore PCLATH
0049   0822           00827         movf    f_copy,w        ; get FSR preserved value
004A   0084           00828         movwf   FSR             ; restore FSR
004B   0E20           00829         swapf   s_copy,w        ; get STATUS preserved value
004C   0083           00830         movwf   STATUS          ; restore STATUS
004D   0EF1           00831         swapf   w_copy,f        ; swap W
004E   0E71           00832         swapf   w_copy,w        ; restore W
004F   0009           00833         retfie
                      00834 
                      00835 ;
                      00836 ; Play the appropriate ID message, reset ID timers & flags
                      00837 ;
0050                  00838 DoID
                      00839         ;; euro ID mode change... ID forever, part 1
0050   1850           00840         btfsc   group3,0        ; euro ID mode?
0051   285A           00841         goto    DoIDEu          ; yep.
0052   1AD0           00842         btfsc   group3,5        ; ID Beacon Mode?
0053   285A           00843         goto    DoIDEu          ; yep.
0054   1B30           00844         btfsc   flags,DEF_ID    ; deferred ID wanted?
0055   285A           00845         goto    DoIDEu          ; yes.
0056   1CB0           00846         btfss   flags,needID    ; need to ID?
0057   0008           00847         return                  ; nope--id timer expired without tx since last
                      00848 
0058   1B4E           00849         btfsc   group1,6        ; in simplex mode?
0059   2875           00850         goto    DoIDS           ; yes.
                      00851         
005A                  00852 DoIDEu
                      00853         ;; check to see if ID is currently playing.
005A   1930           00854         btfsc   flags,IDNOW     ; is the ID playing already?
005B   0008           00855         return                  ; yes.  Don't start to ID again.
                      00856         
                      00857         ;; play the ID here.
005C   1C32           00858         btfss   txFlag,RX0OPEN  ; is the receiver active?
005D   2862           00859         goto    DoIDQ           ; no, it is quiet.
005E   1F50           00860         btfss   group3,6        ; is NO CW ID mode selected?
005F   2886           00861         goto    DoIDCW          ; no, and actively repeating, play CW ID.
0060   1730           00862         bsf     flags,DEF_ID    ; set deferred ID flag.
0061   0008           00863         return                  ; bail out for now.
                      00864 
0062                  00865 DoIDQ
                      00866         ;; not actively repeating (nobody talking), ok to play voice ID
0062   1B30           00867         btfsc   flags,DEF_ID    ; deferred ID wanted?
0063   2866           00868         goto    DoIDNor         ; yes.  Play NORMAL voice ID.
                      00869 
0064   1830           00870         btfsc   flags,initID    ; initial ID wanted?
0065   2879           00871         goto    DoIDInt         ; yep.
                      00872         
0066                  00873 DoIDNor
0066   084F           00874         movf    group2,w        ; get group2 flags
0067   3906           00875         andlw   b'00000110'     ; mask, either normal ID
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0068   1D03           00876         btfss   STATUS,Z        ; is result zero?
0069   286C           00877         goto    DoIDNCW         ; 
006A   1F50           00878         btfss   group3,6        ; is NO CW ID mode selected?
006B   2886           00879         goto    DoIDCW          ; yes. do CW ID.
006C                  00880 DoIDNCW                         ; NOT doing CW ID
                      00881         IFDEF NHRC3_1
                      00882         xorlw   b'00000110'     ; are they both on?
                      00883         btfss   STATUS,Z        ; are they both on?
                      00884         goto    IdNoTog         ; no.
                      00885         ;; both ID messages are enabled.  alternate them.
                      00886         btfss   mscFlag,IDTOGL  ; toggle bit set?
                      00887         goto    IdNoAlt         ; nope
                      00888         bcf     mscFlag,IDTOGL  ; clear toggle bit
                      00889         movlw   VNORMI2         ; no.  get normal ID message2.
                      00890         ELSE
006C   1CCF           00891         btfss   group2,1        ; is normal ID 1 enabled?
006D   2886           00892         goto    DoIDCW          ; no.  send CW ID.
006E   3001           00893         movlw   VNORMID         ; NHRC-2.1 -- get normal ID message.
                      00894         ENDIF
006F   287F           00895         goto    DoIDSpc         ; play ID message
                      00896 
0070                  00897 IdNoAlt
0070   15B1           00898         bsf     mscFlag,IDTOGL  
0071   3001           00899         movlw   VNORMID         ; no.  get normal ID message.
0072   287F           00900         goto    DoIDSpc         ; play ID message
                      00901 
0073                  00902 IdNoTog                         ; not alternating IDs.
0073   3001           00903         movlw   VNORMID         ; get normal ID the first
                      00904         IFDEF NHRC3_1
                      00905         btfsc   group2,2        ; normal ID 2 enabled?
                      00906         movlw   VNORMI2         ; get normal ID the second
                      00907         ENDIF
0074   287F           00908         goto    DoIDSpc         ; play it
                      00909 
0075                  00910 DoIDS                           ; simplex mode ID message.
0075   1FCE           00911         btfss   group1,7        ; simplex mode voice ID requested?
0076   2886           00912         goto    DoIDCW          ; no.  Play CW ID.
0077   3000           00913         movlw   VINITID         ; get initial ID
0078   287F           00914         goto    DoIDSpc         ; play speech ID.
                      00915         
0079                  00916 DoIDInt                         ; play initial ID
0079   1B50           00917         btfsc   group3,6        ; is NO CW ID mode selected?
007A   287D           00918         goto    DoIDI1          ; yes.
007B   1C4F           00919         btfss   group2,0        ; is initial speech ID enabled?
007C   2886           00920         goto    DoIDCW          ; not enabled, play CW.
007D                  00921 DoIDI1
007D   3000           00922         movlw   VINITID         ; get initial ID
                      00923         ;; 1.06 changes for improved Euro mode ID
007E   287F           00924         goto    DoIDSpc         ; play speech ID.
                      00925 
                      00926         
007F                  00927 DoIDSpc                         ; play speech ID
                      00928         ;; 1.08 changes for suppressed ID...
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007F   1BD0           00929         btfsc   group3,7        ; is NO ID mode set?
0080   2892           00930         goto    DoIDrst         ; yes.  NO ID mode is set.  Don't ID.
                      00931         ;; end 1.08 changes.
                      00932         ;; 1.06 changes for improved Euro mode ID
0081   1930           00933         btfsc   flags,IDNOW     ; is the ID playing already?
0082   0008           00934         return                  ; yes.  don't do it again
0083   1530           00935         bsf     flags,IDNOW     ; set IDing now flag.
                      00936         ;; end 1.06 changes
0084   2707           00937         call    NewPlay
0085   2892           00938         goto    DoIDrst
                      00939 
0086                  00940 DoIDCW                          ; play CW id.
                      00941         ;; 1.08 changes for suppressed ID...
0086   1BD0           00942         btfsc   group3,7        ; is NO ID mode set?
0087   2892           00943         goto    DoIDrst         ; yes.  NO ID mode is set.  Don't ID.
                      00944         ;; end 1.08 changes.
                      00945         ;; 1.06 changes for improved Euro mode ID
0088   1930           00946         btfsc   flags,IDNOW     ; is the ID playing already?
0089   0008           00947         return                  ; yes.  don't do it again
008A   1530           00948         bsf     flags,IDNOW     ; set IDing now flag.
                      00949         ;; end 1.06 changes
                      00950         PAGE3                   ; select code page 3.
008B   158A               M         bsf     PCLATH,3
008C   160A               M         bsf     PCLATH,4
008D   30A0           00951         movlw   EECWID          ; address of CW ID message in EEPROM.
008E   00CB           00952         movwf   eeAddr          ; save CT base address
008F   200D           00953         call    PlayCWe         ; kick off the CW playback.
                      00954         PAGE0                   ; select code page 0.
0090   118A               M         bcf     PCLATH,3
0091   120A               M         bcf     PCLATH,4
                      00955         
0092                  00956 DoIDrst                         ; reset ID timer & logic.
0092   3002           00957         movlw   EETID           ; get EEPROM address of ID timer preset.
0093   00CB           00958         movwf   eeAddr          ; set EEPROM address low byte.
                      00959         PAGE3                   ; select code page 3.
0094   158A               M         bsf     PCLATH,3
0095   160A               M         bsf     PCLATH,4
0096   20AB           00960         call    ReadEEw         ; read EEPROM.
                      00961         PAGE0                   ; select code page 0.
0097   118A               M         bcf     PCLATH,3
0098   120A               M         bcf     PCLATH,4
0099   00BB           00962         movwf   idTmr           ; store to idTmr down-counter
009A   1030           00963         bcf     flags,initID    ; clear initial ID flag
                      00964         
009B   0832           00965         movf    txFlag,w        ; get tx flags
009C   3901           00966         andlw   h'01'           ; w=w&RX0OPEN, non zero if RX active.
009D   1903           00967         btfsc   STATUS,Z        ; is it zero?
009E   10B0           00968         bcf     flags,needID    ; yes. reset needID flag.
009F   0008           00969         return
                      00970 
00A0                  00971 Rcv0Off                         ; turn off receiver 0
00A0   3000           00972         movlw   RXSOFF          ; get new state #
00A1   00B9           00973         movwf   rx0Stat         ; set new receiver state
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2   1605           00974         bsf     PORTA,RX0AUD    ; mute it...
00A3   1032           00975         bcf     txFlag,RX0OPEN  ; clear main receiver on bit
00A4   01BA           00976         clrf    rx0TOut         ; clear main receiver timeout timer
00A5   0008           00977         return
                      00978         
00A6                  00979 SetHang                         ; start hang timer...
00A6   1DCD           00980         btfss   group0,3        ; is hang timer enabled?
00A7   0008           00981         return                  ; nope.
00A8   3001           00982         movlw   EETHTS          ; get EEPROM address of hang timer short preset
00A9   1A4D           00983         btfsc   group0,4        ; is long hang timer selected?
00AA   3000           00984         movlw   EETHTL          ; get EEPROM address of hang timer long preset
00AB   00CB           00985         movwf   eeAddr          ; set EEPROM address low byte.
                      00986         PAGE3                   ; select code page 3.
00AC   158A               M         bsf     PCLATH,3
00AD   160A               M         bsf     PCLATH,4
00AE   20AB           00987         call    ReadEEw         ; read EEPROM.
                      00988         PAGE0                   ; select code page 0.
00AF   118A               M         bcf     PCLATH,3
00B0   120A               M         bcf     PCLATH,4
00B1   00C4           00989         movwf   hangDly         ; save this in hangDly, used often.
00B2   00BC           00990         movwf   hangTmr         ; preset hang timer
00B3   1D03           00991         btfss   STATUS,Z        ; don't hang if hang timer is 0.
00B4   1532           00992         bsf     txFlag,TXHANG   ; set hang time transmit flag
00B5   0008           00993         return                  ; done.
                      00994 
00B6                  00995 ChkID                           ; call on receiver drop to see if want to ID
00B6   1830           00996         btfsc   flags,initID    ; is the initial ID wanted?
00B7   28BF           00997         goto    ChkID1          ; yes, play the ID
00B8   1B30           00998         btfsc   flags,DEF_ID    ; is the deferred ID wanted?
00B9   28BF           00999         goto    ChkID1          ; yes, play the ID.
00BA   1CB0           01000         btfss   flags,needID    ; need to ID sometime?
00BB   0008           01001         return                  ; nope.
                      01002         ;
                      01003         ;if (idTmr <= IDSOON then goto StartID
                      01004         ;implemented as: if ((IDSOON-idTimer)>=0) then ID
                      01005         ;
00BC   083B           01006         movf    idTmr,w         ; get idTmr into W
00BD   3C06           01007         sublw   IDSOON          ; IDSOON-w ->w
00BE   1803           01008         btfsc   STATUS,C        ; C is clear if result is negative
00BF                  01009 ChkID1
00BF   2050           01010         call    DoID            ; ok to ID now, let's do it.
00C0   0008           01011         return                  ; don't need to ID yet...
                      01012 
                      01013 ; ***************************************************
                      01014 ; ** DoTail -- Play Tail Message and Reset Counter **
                      01015 ; ***************************************************
                      01016 
00C1                  01017 DoTail
                      01018         IFDEF NHRC3_1
                      01019         movf    group1,w        ; get group1 flags
                      01020         andlw   b'00110000'     ; mask, either normal ID
                      01021         btfsc   STATUS,Z        ; is result zero? (none enabled)
                      01022         goto    ResetTC         ; reset the counter
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023         xorlw   b'00110000'     ; are they both on?
                      01024         btfss   STATUS,Z        ; are they both on?
                      01025         goto    TailNTg         ; no.
                      01026         ;; both ID messages are enabled.  alternate them.
                      01027         btfss   mscFlag,TAIL2F  ; toggle bit set?
                      01028         goto    TlNoAlt         ; nope
                      01029         bcf     mscFlag,TAIL2F  ; clear toggle bit
                      01030         movlw   VTAIL2          ; use tail message 2.
                      01031         goto    PlayTl          ; play ID message
                      01032 
                      01033 TlNoAlt
                      01034         bsf     mscFlag,TAIL2F  
                      01035         movlw   VTAIL           ; use tail message 1.
                      01036         goto    PlayTl          ; play ID message
                      01037 
                      01038 TailNTg                         ; not toggling tail messages
                      01039         movlw   VTAIL           ; get tail message 1
                      01040         btfsc   group1,4        ; is tail 1 enabled?
                      01041         goto    PlayTl          ; yes it is.  use it.
                      01042         movlw   VTAIL2          ; get tail message 2
                      01043         btfss   group1,5        ; is tail 2 enabled?
                      01044         goto    ResetTC         ; no.  should never get here.  handle anyway.
                      01045         ELSE
00C1   1E4E           01046         btfss   group1,4        ; is tail 1 enabled?
00C2   28C5           01047         goto    ResetTC         ; it is not.  Don't play a tail message.
00C3   3003           01048         movlw   VTAIL           ; get tail message 1
                      01049         ENDIF
                      01050         
00C4                  01051 PlayTl  
00C4   2707           01052         call    NewPlay         ; play ISD Message
                      01053 
00C5                  01054 ResetTC 
                      01055         ;; now, reset tail message counter.
00C5   3007           01056         movlw   EETTAIL         ; get EEPROM address of tail message counter.
00C6   00CB           01057         movwf   eeAddr          ; set EEPROM address low byte.
                      01058         PAGE3                   ; select code page 3.
00C7   158A               M         bsf     PCLATH,3
00C8   160A               M         bsf     PCLATH,4
00C9   20AB           01059         call    ReadEEw         ; read EEPROM.
                      01060         PAGE0                   ; select code page 0.
00CA   118A               M         bcf     PCLATH,3
00CB   120A               M         bcf     PCLATH,4
00CC   00C1           01061         movwf   tailCtr         ; preset tail message counter.
00CD   0008           01062         return                  ; done with tail message.
                      01063         
                      01064         ;; **************************************************
                      01065         ;; **************************************************
                      01066         ;; **************************************************
                      01067 
                      01068 ; *************
                      01069 ; ** Init256 **
                      01070 ; *************
00CE                  01071 Init256                         ; initialize 256 bytes from the 32 in cmdbuf00
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   3008           01072         movlw   d'8'            ; 8 * 32 = 256. 
00CF   00AA           01073         movwf   temp2           ; store into temp.
00D0   3020           01074         movlw   d'32'           ; 32 bytes to write each cycle.
00D1   00CC           01075         movwf   eeCount         ; save eeCount:  number of bytes to write.
00D2                  01076 I256a                           ; loop through writes of 32 bytes.
00D2   30A0           01077         movlw   low cmdbf00     ; get base of buffer
00D3   0084           01078         movwf   FSR             ; set into FSR.
                      01079         PAGE3                   ; select ROM code page 3.
00D4   158A               M         bsf     PCLATH,3
00D5   160A               M         bsf     PCLATH,4
00D6   20BA           01080         call    WriteEE         ; write into EEPROM.
                      01081         PAGE0                   ; select ROM code page 0.
00D7   118A               M         bcf     PCLATH,3
00D8   120A               M         bcf     PCLATH,4
                      01082         ;; pause while EE operation completes.
00D9   20E0           01083         call    InitPos         ; pause.
00DA   3020           01084         movlw   d'32'           ; get size.
00DB   07CB           01085         addwf   eeAddr,f        ; add to address.
00DC   00CC           01086         movwf   eeCount         ; reset number of bytes to write.
00DD   0BAA           01087         decfsz  temp2,f         ; decrement cycle count.
00DE   28D2           01088         goto    I256a           ; next cycle.
00DF   0008           01089         return                  ; done.
                      01090         
                      01091 ; *************
                      01092 ; ** InitPos **
                      01093 ; *************
00E0                  01094 InitPos                         ; short pause for EEPROM write cycle.
00E0   3014           01095         movlw   d'20'           ; 20 ms.
00E1   20E5           01096         call    InitDly         ; delay.
00E2   3013           01097         movlw   d'19'           ; 19 ms.
00E3   20E5           01098         call    InitDly         ; delay.
00E4   0008           01099         return                  ; done with pause
                      01100 
                      01101 ; *************
                      01102 ; ** InitDly **
                      01103 ; *************
00E5                  01104 InitDly                         ; delay w ms for init code.
00E5   00AE           01105         movwf   temp6           ; counter.
00E6                  01106 InitDl2
00E6   1C24           01107         btfss   tFlags,TICK     ; looking for 1 ms TICK
00E7   28E6           01108         goto    InitDl2         ; loop.
00E8   1024           01109         bcf     tFlags,TICK     ; clear TICK marker.
00E9   0064           01110         clrwdt                  ; reset WDT every ms.
00EA   0BAE           01111         decfsz  temp6,f         ; decrement counter
00EB   28E6           01112         goto    InitDl2         ; counter not zeroed yet.
00EC   0008           01113         return
                      01114         
                      01115 ; *********************
                      01116 ; ** PROGRAM STARTUP **
                      01117 ; *********************
0200                  01118         org     0200
0200                  01119 Start
0200   1683           01120         bsf     STATUS,RP0      ; select bank 1
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01121 
0201   3000           01122         movlw   b'00000000'     ; turn off A/D
0202   009F           01123         movwf   ADCON0
0203   3007           01124         movlw   b'00000111'
0204   009F           01125         movwf   ADCON1
                      01126 
0205   3078           01127         movlw   b'01111000'     ;
0206   008F           01128         movwf   OSCCON          ; set for external clock
0207   3001           01129         movlw   b'00000001'     ; RBPU pull ups 
                      01130                                 ; INTEDG INT on falling edge
                      01131                                 ; T0CS   TMR0 uses instruction clock
                      01132                                 ; T0SE  n/a
                      01133                                 ; PSA TMR0 gets the prescaler 
                      01134                                 ; PS2 \
                      01135                                 ; PS1  > prescaler 4
                      01136                                 ; PS0 /
0208   0081           01137         movwf   OPTION_REG      ; set options
                      01138 
                      01139         ;; SPI setup
0209   30C0           01140         movlw   b'11000000'     ; SMP=1 CKE=1
020A   0094           01141         movwf   SSPSTAT         ; input data on falling edge, output on rising
                      01142 
                      01143         ;; Serial port setup
020B   302E           01144         movlw   d'46'           ; 1200 (1190)  baud at 3.579545 MHz clock.
020C   0099           01145         movwf   SPBRG           ; set baud rate generator.
020D   3020           01146         movlw   b'00100000'     ; transmit enabled, low speed async.
020E   0098           01147         movwf   TXSTA           ; set transmit status and control register.
020F   3024           01148         movlw   b'00100100'     ; RCIE | CCP1IE interrupts enabled.
0210   008C           01149         movwf   PIE1            ; set peripheral interrupts enable register.
                      01150         
0211   30EF           01151         movlw   B'11101111'     ; na/na/in/out/in/in/in/in
0212   0085           01152         movwf   TRISA           ; set port A data direction
                      01153 
0213   303A           01154         movlw   B'00111010'     ; out/out/in/in/in/out/in/out
0214   0086           01155         movwf   TRISB           ; set port B data direction
                      01156 
0215   3030           01157         movlw   B'00110000'     ; CTSEL1 & CTSEL2
0216   0095           01158         movwf   WPUB            ; set port weak pullups
                      01159 
0217   30D4           01160         movlw   B'11010100'     ; na/na/SDO(out)/SDI(in)/SCK(out)/in/out/out
0218   0087           01161         movwf   TRISC           ; set port C data direction
                      01162 
0219   3004           01163         movlw   b'00000100'     ; enable on CCP1 interrupt.
021A   008C           01164         movwf   PIE1            ; set up interrupt control.
                      01165 
021B   1703           01166         bsf     STATUS,RP1      ; select register page 2/3
021C   0188           01167         clrf    ANSEL           ; clear analog select
021D   0189           01168         clrf    ANSELH          ; clear analog select
                      01169 
021E   1303           01170         bcf     STATUS,RP1      ; select register page 0/1
                      01171 
021F   1283           01172         bcf     STATUS,RP0      ; select register page 0/2
                      01173 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01174         ;; SPI setup
0220   3021           01175         movlw   b'00100001'     ; set up spp: on, spi master, clk/16
0221   0094           01176         movwf   SSPCON          ; set up SPP for SPI mode.
                      01177         
                      01178         ;; enable serial port
0222   3090           01179         movlw   b'10010000'     ; serial enabled, etc.
0223   0098           01180         movwf   RCSTA           ; set receive status and control register.
                      01181 
0224   3010           01182         movlw   b'00010000'     ; port a preset muted.
0225   0085           01183         movwf   PORTA           ; preset PORTA
0226   0186           01184         clrf    PORTB           ; preset PORTB
0227   1506           01185         bsf     PORTB,ISDSEL    ; set SPI select high
0228   3018           01186         movlw   b'00011000'     ; presets for PORTC so ISD does not start
0229   0087           01187         movwf   PORTC           ; preset PORTC
                      01188 
022A   0064           01189         clrwdt                  ; give me more time to get up and running.
                      01190 
                      01191         ;; set up timer 1
022B   3000           01192         movlw   b'00000000'     ; set up timer 1.
022C   0090           01193         movwf   T1CON           ; set up timer 1.
022D   300A           01194         movlw   b'00001010'     ; timer 1 compare throws interrupt.
022E   0097           01195         movwf   CCP1CON         ; set up compare mode.
022F   30FF           01196         movlw   h'ff'           ; init compare value.
0230   0095           01197         movwf   CCPR1L          ; set up initial compare (invalid)
0231   0096           01198         movwf   CCPR1H          ; set up initial compare (invalid)
0232   3020           01199         movlw   h'20'           ; first address of RAM.
0233   0084           01200         movwf   FSR             ; set pointer.
                      01201 
0234                  01202 ClrMem
0234   0180           01203         clrf    INDF            ; clear ram byte.
0235   0A84           01204         incf    FSR,f           ; increment FSR.
0236   1F84           01205         btfss   FSR,7           ; cheap test for address 80 and above.
0237   2A34           01206         goto    ClrMem          ; loop some more.
0238   1783           01207         bsf     STATUS,IRP      ; select FSR is in 100-1ff range
                      01208         
0239   300A           01209         movlw   TEN             ; get timebase presets
023A   00A5           01210         movwf   oneMsC
023B   00A6           01211         movwf   tenMsC
023C   00A7           01212         movwf   hundMsC
023D   00A8           01213         movwf   thouMsC
023E   01A4           01214         clrf    tFlags
                      01215 
023F   30FF           01216         movlw   CTNONE          ; no courtesy tone.
0240   00CA           01217         movwf   cTone           ; set courtesy tone selector.
                      01218 
                      01219         ;; preset timer defaults
0241   01C7           01220         clrf    cwTbTmr         ; CW timebase counter.
                      01221         
                      01222         ;; enable interrupts.
0242   30E0           01223         movlw   b'11100000'     ; enable global + peripheral + timer0
0243   008B           01224         movwf   INTCON
                      01225 
                      01226         ;;  power up the ISD
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   3008           01227         movlw   ICMDPU          ; get power up command constant
0245   270F           01228         call    QISDCmd         ; enqueue the PU command.
                      01229 
                      01230         ;;  50 ms T_PU_D power up delay.
0246   3026           01231         movlw   IDLY60          ; 60 ms delay
0247   270F           01232         call    QISDCmd         ; enqueue the delay command
                      01233                 
                      01234         ;; set the MUTE pin to an input to look for init
0248   1683           01235         bsf     STATUS,RP0      ; select bank 1
0249   30FF           01236         movlw   B'11111111'     ; na/na/in/*in*/in/in/in/in
024A   0085           01237         movwf   TRISA           ; set port A data direction
024B   1283           01238         bcf     STATUS,RP0      ; select bank 0
                      01239 
024C   1A05           01240         btfsc   PORTA,INIT      ; skip if init button pressed.
024D   2A61           01241         goto    Start1          ; no initialize request.
                      01242         
                      01243 ; *********************
                      01244 ; * INITIALIZE EEPROM *
                      01245 ; *********************
                      01246                 
024E   01AA           01247         clrf    temp2           ; byte index
024F                  01248 InitLp
024F   082A           01249         movf    temp2,w         ; get last address.
0250   3CEF           01250         sublw   EELAST          ; subtract last init address.
0251   1C03           01251         btfss   STATUS,C        ; c will be clear if result is negative.
0252   2A5E           01252         goto    InitDun         ; done initializing...
0253   082A           01253         movf    temp2,w         ; get init address
0254   00CB           01254         movwf   eeAddr          ; set eeprom address
0255   082A           01255         movf    temp2,w         ; get init address
                      01256         PAGE3                   ; select page 3
0256   158A               M         bsf     PCLATH,3
0257   160A               M         bsf     PCLATH,4
0258   2500           01257         call    InitDat         ; get init byte
0259   20C4           01258         call    WriteEw         ; write byte to EEPROM.
                      01259         PAGE0                   ; select page 0
025A   118A               M         bcf     PCLATH,3
025B   120A               M         bcf     PCLATH,4
025C   0AAA           01260         incf    temp2,f         ; go to next byte
025D   2A4F           01261         goto    InitLp          ; get the next block of 16 or be done.
                      01262         
025E                  01263 InitDun                         ; done with init loop
025E   3006           01264         movlw   ICMDGER         ; get global erase command
025F   270F           01265         call    QISDCmd         ; enqueue the GER command.
0260   0064           01266         clrwdt                  ; get more time to start up.
                      01267         
                      01268 ; ********************************
                      01269 ; ** Ready to really start now. **
                      01270 ; ********************************
0261                  01271 Start1
                      01272         ;; reset the state of the MUTE pin to an output
0261   1683           01273         bsf     STATUS,RP0      ; select bank 1
0262   30EF           01274         movlw   B'11101111'     ; na/na/in/out/in/in/in/in
0263   0085           01275         movwf   TRISA           ; set port A data direction
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0264   1283           01276         bcf     STATUS,RP0      ; select bank 0
                      01277 
0265   3007           01278         movlw   ICMDWAP         ; get the WAPC2 command
0266   270F           01279         call    QISDCmd         ; enqueue the WAPC2 command.
                      01280 
0267   3005           01281         movlw   ICMDDID         ; get the DID command
0268   270F           01282         call    QISDCmd         ; enqueue the DID command.
                      01283         
                      01284         
0269                  01285 Start2  
0269   0103           01286         clrw                    ; select macro set 0.
                      01287         PAGE3                   ; select page 3.
026A   158A               M         bsf     PCLATH,3
026B   160A               M         bsf     PCLATH,4
026C   20E0           01288         call    LoadCtl         ; load control op settings.
026D   26BE           01289         call    CWParms         ; get the CW parameters for pitch and speed.
                      01290         PAGE0                   ; select page 0
026E   118A               M         bcf     PCLATH,3
026F   120A               M         bcf     PCLATH,4
0270   3001           01291         movlw   1               ; 1 = 10 seconds for ID timer in euro mode.
0271   1850           01292         btfsc   group3,0        ; in euro mode?
0272   00BB           01293         movwf   idTmr           ; preload ID timer in euro mode.
0273   1AD0           01294         btfsc   group3,5        ; in ID Beacon mode?
0274   00BB           01295         movwf   idTmr           ; preload ID timer in euro mode.
                      01296                 
                      01297         ;; get tail message counter.
0275   3007           01298         movlw   EETTAIL         ; get EEPROM address of tail message counter.
0276   00CB           01299         movwf   eeAddr          ; set EEPROM address low byte.
                      01300         PAGE3                   ; select page 3.
0277   158A               M         bsf     PCLATH,3
0278   160A               M         bsf     PCLATH,4
0279   20AB           01301         call    ReadEEw         ; read EEPROM.
                      01302         PAGE0                   ; select page 0.
027A   118A               M         bcf     PCLATH,3
027B   120A               M         bcf     PCLATH,4
027C   00C1           01303         movwf   tailCtr         ; preset tail message counter.
                      01304         ;;
                      01305         ;; say hello to all the nice people out there.
                      01306         ;;
027D   1BD0           01307         btfsc   group3,7        ; NO ID set?
027E   2A85           01308         goto    Loop0           ; yes.  NO ID.
                      01309         PAGE3                   ; select code page 3.
027F   158A               M         bsf     PCLATH,3
0280   160A               M         bsf     PCLATH,4
0281   3011           01310         movlw   CWHELLO         ; get HELLO announcement.
0282   2000           01311         call    PlayCW          ; start playback
                      01312         PAGE0                   ; select code page 0.
0283   118A               M         bcf     PCLATH,3
0284   120A               M         bcf     PCLATH,4
                      01313         
                      01314 ; **************************************************************************
                      01315 ; ******************************* MAIN LOOP ********************************
                      01316 ; **************************************************************************
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01317                 
0285                  01318 Loop0
0285   1AA4           01319         btfsc   tFlags,TENSEC   ; is ten second flag set?
0286   12A4           01320         bcf     tFlags,TENSEC   ; reset it if it is...
                      01321 
0287                  01322 Chek1000        
0287   1E24           01323         btfss   tFlags,ONESEC   ; is the 1000 mS flag set?
0288   2A8F           01324         goto    Check100        ; nope...
0289   1224           01325         bcf     tFlags,ONESEC   ; clear 1000 mS flag.
028A   0BA8           01326         decfsz  thouMsC,f       ; decrement hundred millisecond counter.
028B   2A8F           01327         goto    Check100        ; not zero.
028C   300A           01328         movlw   TEN             ; get preset.
028D   00A8           01329         movwf   thouMsC         ; reset down counter.
028E   16A4           01330         bsf     tFlags,TENSEC   ; set ONESEC indicator.
                      01331 
028F                  01332 Check100        
028F   1DA4           01333         btfss   tFlags,HUNDMS   ; is the 100 mS flag set?
0290   2A97           01334         goto    Check10         ; nope...
0291   11A4           01335         bcf     tFlags,HUNDMS   ; clear 100 mS flag.
0292   0BA7           01336         decfsz  hundMsC,f       ; decrement hundred millisecond counter.
0293   2A97           01337         goto    Check10         ; not zero.
0294   300A           01338         movlw   TEN             ; get preset.
0295   00A7           01339         movwf   hundMsC         ; reset down counter.
0296   1624           01340         bsf     tFlags,ONESEC   ; set ONESEC indicator.
                      01341 
0297                  01342 Check10
0297   1D24           01343         btfss   tFlags,TENMS    ; is the 10 mS flag set?
0298   2A9F           01344         goto    Check1          ; nope...
0299   1124           01345         bcf     tFlags,TENMS    ; clear 10 mS flag.
029A   0BA6           01346         decfsz  tenMsC,f        ; decrement ten millisecond counter.
029B   2A9F           01347         goto    Check1          ; not zero.
029C   300A           01348         movlw   TEN             ; get preset.
029D   00A6           01349         movwf   tenMsC          ; reset down counter.
029E   15A4           01350         bsf     tFlags,HUNDMS   ; set HUNDMS indicator.
                      01351 
029F                  01352 Check1
029F   1CA4           01353         btfss   tFlags,ONEMS    ; is the 1 mS flag set?
02A0   2AA7           01354         goto    CheckTic        ; nope...
02A1   10A4           01355         bcf     tFlags,ONEMS    ; clear 1 mS flag.
02A2   0BA5           01356         decfsz  oneMsC,f        ; decrement one millisecond counter.
02A3   2AA7           01357         goto    CheckTic        ; not zero.
02A4   300A           01358         movlw   TEN             ; get preset.
02A5   00A5           01359         movwf   oneMsC          ; reset down counter.
02A6   1524           01360         bsf     tFlags,TENMS    ; set TENMS indicator.
                      01361 
02A7                  01362 CheckTic
                      01363         
02A7   1C24           01364         btfss   tFlags,TICK     ; did a tick occur?
02A8   2AAC           01365         goto    Loop1           ; nope.
02A9   1024           01366         bcf     tFlags,TICK     ; reset TICK indicator.
02AA   14A4           01367         bsf     tFlags,ONEMS    ; set ONEMS indicator.
02AB   0064           01368         clrwdt
                      01369 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AC                  01370 Loop1
                      01371 ; ********************************************
                      01372 ; ** RECEIVER DEBOUNCE AND INPUT VALIDATION **
                      01373 ; ********************************************
02AC                  01374 DebRx
02AC   1CA4           01375         btfss   tFlags,ONEMS    ; one ms tick, check for receiver active
02AD   2AFB           01376         goto    NoDeb           ; nope
02AE                  01377 CkRx0                           ; check COR state receiver 1
02AE   1C86           01378         btfss   PORTB,RX0COR    ; check cor receiver 1
02AF   2AB5           01379         goto    Rx0COR1         ; it's low, COR is present
                      01380                                 ; COR is not present.
02B0   1D4E           01381         btfss   group1,2        ; (NOT) OR PL?
02B1   2AD4           01382         goto    Rx0Off          ; nope...
                      01383         ;; v01.2 change here.
02B2   18CD           01384         btfsc   group0,1        ; is PL required?
02B3   2AD4           01385         goto    Rx0Off          ; yes.
                      01386         ;; end v01.2 change.
02B4   2ABF           01387         goto    Rx0CkPL         ; yes, OR PL mode
02B5                  01388 Rx0COR1
02B5   1CCD           01389         btfss   group0,1        ; AND PL set?
02B6   2AC1           01390         goto    Rx0On           ; no.
                      01391         ;; v01.2  new code.
02B7   1D4E           01392         btfss   group1,2        ; OR PL set?
02B8   2ABF           01393         goto    Rx0CkPL         ; no.
                      01394         ;; AND and OR PL are both set, PL is required to bring up repeater,
                      01395         ;; but not to access it during tail.
02B9   0832           01396         movf    txFlag,w        ; get txFlag.
02BA   3905           01397         andlw   b'00000101'     ; hang time or rx0 is open.
02BB   1D03           01398         btfss   STATUS,Z        ; Z will be set if not hang or rx0.
02BC   2AC1           01399         goto    Rx0On           ; repeater is not idle.  Allow COR access.
                      01400         ;; end v 01.2 new code.
                      01401         ;; 1.06 change.  fix for 1750 mode in timeout...
02BD   1833           01402         btfsc   rxFlag,RX0OPEN  ; already marked active?
02BE   2AC1           01403         goto    Rx0On           ; stay set on.
                      01404         ;; end of 1.06 change...
                      01405 
02BF                  01406 Rx0CkPL                         ; check PL...
02BF   1907           01407         btfsc   PORTC,RX0PL     ; is the PL signal present?
02C0   2AD4           01408         goto    Rx0Off          ; no.
                      01409         
02C1                  01410 Rx0On                           ; the COR and PL requirements have been met
02C1   1833           01411         btfsc   rxFlag,RX0OPEN  ; already marked active?
02C2   2AE9           01412         goto    Rx0NC           ; yes.
02C3   08B8           01413         movf    rx0Dbc,f        ; check for zero
02C4   1D03           01414         btfss   STATUS,Z        ; is it zero?
02C5   2AD0           01415         goto    Rx01Dbc         ; nope...
02C6   3005           01416         movlw   COR1DEB         ; get COR debounce timer value.
02C7   1BCF           01417         btfsc   group2,7        ; is the delay present?
02C8   3064           01418         movlw   DLY1DEB         ; get COR debounce with delay value.
02C9   08B2           01419         movf    txFlag,f        ; check for transmitter already on.
02CA   1D03           01420         btfss   STATUS,Z        ; is the transmitter already on?
02CB   2ACE           01421         goto    Rx0SDeb         ; yep.
02CC   194D           01422         btfsc   group0,2        ; is the kerchunker delay set?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CD   30FA           01423         movlw   CHNKDEB         ; get kerchunker filter delay.
02CE                  01424 Rx0SDeb                         ; set debounce timer.
02CE   00B8           01425         movwf   rx0Dbc          ; set it
02CF   2AEA           01426         goto    Rx0Done         ; done.
02D0                  01427 Rx01Dbc
02D0   0BB8           01428         decfsz  rx0Dbc,f        ; decrement the debounce counter
02D1   2AEA           01429         goto    Rx0Done         ; not zero yet
02D2   1433           01430         bsf     rxFlag,RX0OPEN  ; set receiver active flag
02D3   2AEA           01431         goto    Rx0Done         ; continue...
02D4                  01432 Rx0Off                          ; the COR and PL requirements have not been met
02D4   1C33           01433         btfss   rxFlag,RX0OPEN  ; was the receiver off before?
02D5   2AE9           01434         goto    Rx0NC           ; yes.
02D6   08B8           01435         movf    rx0Dbc,f        ; check for zero
02D7   1D03           01436         btfss   STATUS,Z        ; is it zero?
02D8   2AE0           01437         goto    Rx00Dbc         ; nope...
02D9   3005           01438         movlw   COR0DEB         ; get COR debounce timer value.
02DA   1BCF           01439         btfsc   group2,7        ; is the delay present?
02DB   3032           01440         movlw   DLY0DEB         ; get COR debounce with delay value.
                      01441         ;; 1.06 change; use long debounce in simplex mode
02DC   1B4E           01442         btfsc   group1,6        ; in simplex mode?
02DD   3050           01443         movlw   COR0DBS         ; get COR simplex debounce time.
                      01444         ;; end 1.06 change...
02DE   00B8           01445         movwf   rx0Dbc          ; set it
02DF   2AEA           01446         goto    Rx0Done         ; done.
02E0                  01447 Rx00Dbc
02E0   0BB8           01448         decfsz  rx0Dbc,f        ; decrement the debounce counter
02E1   2AEA           01449         goto    Rx0Done         ; not zero yet
02E2   1033           01450         bcf     rxFlag,RX0OPEN  ; clear receiver active flag
02E3   08F3           01451         movf    dt0Tmr,f        ; test to see if touch-tones received...
02E4   1903           01452         btfsc   STATUS,Z        ; is it zero?
02E5   2AEA           01453         goto    Rx0Done         ; yes. don't need to accellerate execution.
02E6   3002           01454         movlw   d'2'            ; no
02E7   00F3           01455         movwf   dt0Tmr          ; accelerate eval of DTMF command
02E8   2AEA           01456         goto    Rx0Done         ; continue...
02E9                  01457 Rx0NC
02E9   01B8           01458         clrf    rx0Dbc          ; clear debounce counter.
02EA                  01459 Rx0Done
                      01460 
                      01461         ;; check alarm input status
02EA   1F51           01462         btfss   group4,6        ; is the alarm enabled?
02EB   2AF9           01463         goto    AlmOff          ; alarm is not turned on.
02EC   1A86           01464         btfsc   PORTB,ALARMIN   ; is alarm input low?
02ED   2AF4           01465         goto    NoAlm           ; no
02EE   1AB1           01466         btfsc   mscFlag,ALARMED ; was the alarm mode already set?
02EF   2AFB           01467         goto    AlmDone         ; yes.  no need to do more.
02F0   16B1           01468         bsf     mscFlag,ALARMED ; set alarmed flag
02F1   3001           01469         movlw   d'1'            ; play alarm message soon.
02F2   00E2           01470         movwf   alrmTmr         ; set alarm timer 10 seconds hence.
02F3   2AFB           01471         goto    NoDeb
                      01472 
02F4                  01473 NoAlm
02F4   1BD1           01474         btfsc   group4,7        ; latch mode selected?
02F5   2AFB           01475         goto    AlmDone         ; yes.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F6   12B1           01476         bcf     mscFlag,ALARMED ; reset alarmed flag
02F7   01E2           01477         clrf    alrmTmr         ; clear alarm announcement timer
02F8   2AFB           01478         goto    AlmDone
                      01479         
02F9                  01480 AlmOff                          ; alarm is not enabled.
02F9   12B1           01481         bcf     mscFlag,ALARMED ; so make sure the indicator is off.
02FA   01E2           01482         clrf    alrmTmr         ; and timer is zero
                      01483 
02FB                  01484 AlmDone          
02FB                  01485 NoDeb
02FB   1D24           01486         btfss   tFlags,TENMS    ; ten MS flag set?
02FC   2B36           01487         goto    CkDTDone        ; no.
                      01488 
02FD   1E85           01489         btfss   PORTA,DTMF_DV   ; is a DTMF digit being decoded?
02FE   2B28           01490         goto    CkDT0L          ; no
02FF   1BB0           01491         btfsc   flags,LAST_DV   ; was it there last time?
0300   2B36           01492         goto    CkDTDone        ; yes, do nothing.
0301   17B0           01493         bsf     flags,LAST_DV   ; set last DV indicator.
0302   1331           01494         bcf     mscFlag,CTCSS0  ; clear LAST CTCSS flag.
0303   1D07           01495         btfss   PORTC,RX0PL     ; is the PL signal present?
0304   1731           01496         bsf     mscFlag,CTCSS0  ; set LAST CTCSS flag.
                      01497 
0305                  01498 RdDT0
0305   1DCE           01499         btfss   group1,3        ; is muting enabled?
0306   2B0A           01500         goto    RdDT0m          ; nope.
0307   1605           01501         bsf     PORTA,RX0AUD    ; mute receiver 0
0308   3014           01502         movlw   MUTEDLY         ; get mute timer delay
0309   00BD           01503         movwf   muteTmr         ; preset mute timer
030A                  01504 RdDT0m
030A   3032           01505         movlw   DTMFDLY         ; get DTMF activity timer preset.
030B   00F3           01506         movwf   dt0Tmr          ; set dtmf command timer
                      01507         
030C   0872           01508         movf    dt0Ptr,w        ; get index
030D   0084           01509         movwf   FSR             ; put it in FSR
030E   1003           01510         bcf     STATUS,C        ; clear carry (just in case)
030F   0C84           01511         rrf     FSR,f           ; hey! divide by 2.
0310   3020           01512         movlw   LOW dt0buf0     ; get address of buffer
0311   0784           01513         addwf   FSR,f           ; add to index.
                      01514         
0312   300F           01515         movlw   b'00001111'     ; mask bits.
0313   0505           01516         andwf   PORTA,w         ; get masked bits of tone into W.
                      01517         PAGE3                   ; select code page 3.
0314   158A               M         bsf     PCLATH,3
0315   160A               M         bsf     PCLATH,4
0316   26A9           01518         call    MapDTMF         ; remap tone into keystroke value..
                      01519         PAGE0                   ; select code page 0.
0317   118A               M         bcf     PCLATH,3
0318   120A               M         bcf     PCLATH,4
0319   3800           01520         iorlw   h'0'            ; OR with zero to set status bits.
031A   1031           01521         bcf     mscFlag,DT0ZERO ; clear last zero received.
031B   1903           01522         btfsc   STATUS,Z        ; was a zero the last received digit?
031C   1431           01523         bsf     mscFlag,DT0ZERO ; yes...
                      01524         
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031D   1872           01525         btfsc   dt0Ptr,0        ; is this an odd address?
031E   2B23           01526         goto    DT0Odd          ; yes;
031F   0180           01527         clrf    INDF            ; zero both nibbles.
0320   0080           01528         movwf   INDF            ; save tone in indirect register.
0321   0E80           01529         swapf   INDF,f          ; move the tone to the high nibble
0322   2B24           01530         goto    DT0Done         ; done here
0323                  01531 DT0Odd
0323   0480           01532         iorwf   INDF,F          ; save tone in low nibble
0324                  01533 DT0Done 
0324   0AF2           01534         incf    dt0Ptr,f        ; increment index
0325   301F           01535         movlw   h'1f'           ; mask
0326   05F2           01536         andwf   dt0Ptr,f        ; don't let index grow past 1f (31)
                      01537 
0327   2B36           01538         goto    CkDTDone        ; done with DTMF checking.
                      01539 
0328                  01540 CkDT0L                          ; check for end of LITZ...
0328   1FB0           01541         btfss   flags,LAST_DV   ; was it low last time?
0329   2B36           01542         goto    CkDTDone        ; yes.  Done.
032A   13B0           01543         bcf     flags,LAST_DV   ; clear last DV indicator.
032B   1C31           01544         btfss   mscFlag,DT0ZERO ; was zero the last received digit?
032C   2B36           01545         goto    CkDTDone        ; no.
032D   0873           01546         movf    dt0Tmr,w        ; get dtmf command timer
032E   1903           01547         btfsc   STATUS,Z        ; is it already zero?
032F   2B33           01548         goto    CkDT0LZ         ; yes.
0330   3C14           01549         sublw   LITZTIM         ; subtract from litz time.
0331   1C03           01550         btfss   STATUS,C        ; is result positive?
0332   2B36           01551         goto    CkDTDone        ; nope.
                      01552 
0333                  01553 CkDT0LZ                         ; check for LITZ digits.
0333   1531           01554         bsf     mscFlag,LITZDT0 ; set LITZ on main receiver flag.
0334   01F2           01555         clrf    dt0Ptr          ; clear this, throw away received LITZ tone.
0335   01F3           01556         clrf    dt0Tmr          ; clear this, don't process tones normally.
                      01557 
0336                  01558 CkDTDone                        ; done with DTMF scanning.
                      01559 
                      01560 ;;;     ISD State machine.
                      01561 
                      01562         ;; check for "interrupt" from ISD here.
0336   1986           01563         btfsc   PORTB,ISDINT    ; is ISD interrupt low?
0337   2B54           01564         goto    IIDone          ; no interrupt has occurred
                      01565         ;; the interrupt bit is low; have interrupt
0338   12B2           01566         bcf     txFlag,TALKING  ; clear TALKING flag, no matter what
                      01567 
0339   1F4E           01568         btfss   group1,6        ; in simplex mode?
033A   2B3F           01569         goto    CkI2            ; no
033B   18B4           01570         btfsc   isdFlag,ISDRECF ; was it recording?
033C   17B4           01571         bsf     isdFlag,ISDRECE ; yes, set message overflow flag
033D   1834           01572         btfsc   isdFlag,ISDRUNF ; was it in playback mode?
033E   1734           01573         bsf     isdFlag,ISDZAPS ; yes, erase simplex message
                      01574 
033F                  01575 CkI2
033F   1034           01576         bcf     isdFlag,ISDRUNF ; not running any more
0340   10B4           01577         bcf     isdFlag,ISDRECF ; not recording any more
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0341   1930           01578         btfsc   flags,IDNOW     ; was that an ID that was playing?
0342   10B0           01579         bcf     flags,needID    ; don't need to ID again
0343   1130           01580         bcf     flags,IDNOW     ; if this was an ID, clear it
                      01581         PAGE3                   ; select code page 3.
0344   158A               M         bsf     PCLATH,3
0345   160A               M         bsf     PCLATH,4
0346   3020           01582         movlw   ISDCINT         ; ISD clear interrupt command.
0347   213D           01583         call    ISDCmd2         ; clear interrupt.
                      01584         PAGE0                   ; select code page 0.
0348   118A               M         bcf     PCLATH,3
0349   120A               M         bcf     PCLATH,4
034A   10E1           01585         bcf     ismpcf,ISMWINT  ; turn off wait for interrupt flag
034B   13E1           01586         bcf     ismpcf,ISMERAS  ; turn off erase cannot be interrupted flag
                      01587 
034C                  01588 CkI3
034C   1F34           01589         btfss   isdFlag,ISDZAPS ; zap simplex message?
034D   2B54           01590         goto    IIDone          ; nope.
034E   1334           01591         bcf     isdFlag,ISDZAPS ; reset zap simplex message flag
                      01592         
                      01593         ;; erase simplex message after playback
034F   1F4E           01594         btfss   group1,6        ; in simplex mode?
0350   2B54           01595         goto    IIDone          ; no
0351   3001           01596         movlw   VSIMPLX         ; get simplex message
0352   3880           01597         iorlw   ICMDDEL         ; make into erase command
0353   270F           01598         call    QISDCmd         ; enqueue the delay command.
                      01599         
0354                  01600 IIDone  
                      01601         ;; check the state if the ISD Timer
0354   08D5           01602         movf    isdDly,f        ; check for isdDly
0355   1903           01603         btfsc   STATUS,Z        ; is it zero?
0356   2B5A           01604         goto    NIsdTmr         ; isdDly is zero
0357   0BD5           01605         decfsz  isdDly,f        ; decrement isdDly
0358   2B5A           01606         goto    NIsdTmr         ; still not zero.
0359   1061           01607         bcf     ismpcf,ISMWAIT  ; turn off timer flag
                      01608         
035A                  01609 NIsdTmr
                      01610         ;; now process the ISD state machine.
035A   08E1           01611         movf    ismpcf,f        ; check state machine process control flags
035B   1D03           01612         btfss   STATUS,Z        ; skip if ismpcf is zero
035C   2BFD           01613         goto    IQDone          ; not ready for another command
035D   087D           01614         movf    isdcbt,w        ; get tail pointer.
035E   027C           01615         subwf   isdcbh,w        ; subtract from head pointer.
035F   1903           01616         btfsc   STATUS,Z        ; result should be non-zero if buffer no
0360   2BFD           01617         goto    IQDone          ; buffer is empty.
                      01618         ;; there is a command in the queue, dequeue it
0361   0A7D           01619         incf    isdcbt,w        ; get tail pointer + 1.
0362   3907           01620         andlw   h'07'           ; mask so result stays in 0-7 range.
0363   00FD           01621         movwf   isdcbt          ; save it...
0364   3EE0           01622         addlw   LOW isdcb00     ; add to buffer base address.
0365   0084           01623         movwf   FSR             ; set FSR as pointer.
0366   1383           01624         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
0367   0800           01625         movf    INDF,w          ; get char.
0368   0180           01626         clrf    INDF            ; mark as invalid.  aids debugging. 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0369   1783           01627         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
                      01628         ;;  now have dequeued isd command in w
036A   00AD           01629         movwf   temp5           ; save it
036B   1BAD           01630         btfsc   temp5,7         ; is command?
036C   2BDF           01631         goto    ICP7            ; hi bit is set! erase or record
036D   1B2D           01632         btfsc   temp5,6         ; is it playback?
036E   2BD1           01633         goto    ICPplay         ; it is playback.
036F   1AAD           01634         btfsc   temp5,5         ; is it a delay command?
0370   2BC6           01635         goto    ICPdelay
                      01636         
                      01637         ;; has to be a command
0371                  01638 ICPcmd
0371   300F           01639         movlw   b'00001111'     ; command number mask
0372   05AD           01640         andwf   temp5,f         ; mask 0-7
                      01641 
0373   3003           01642         movlw   high ICPtbl     ; set high byte of address
0374   008A           01643         movwf   PCLATH          ; select page
0375   082D           01644         movf    temp5,w         ; get command number
0376   0782           01645         addwf   PCL,f           ; add w to PCL:  computed GOTO
0377                  01646 ICPtbl  ;; computed goto
0377   2B87           01647         goto    ICPcmd0         ; invalid command
0378   2B88           01648         goto    ICPcmd1         ; stop
0379   2B97           01649         goto    ICPcmd2         ; reset
037A   2B99           01650         goto    ICPcmd3         ; clear interrupt
037B   2B9B           01651         goto    ICPcmd4         ; read status
037C   2BA4           01652         goto    ICPcmd5         ; resd devid
037D   2BAF           01653         goto    ICPcmd6         ; global erase
037E   2BB3           01654         goto    ICPcmd7         ; write APC2
037F   2BBE           01655         goto    ICPcmd8         ; PU
0380   2B87           01656         goto    ICPcmd0         ; 9 invalid command
0381   2B87           01657         goto    ICPcmd0         ; A invalid command
0382   2B87           01658         goto    ICPcmd0         ; B invalid command
0383   2B87           01659         goto    ICPcmd0         ; C invalid command
0384   2B87           01660         goto    ICPcmd0         ; D invalid command
0385   2B87           01661         goto    ICPcmd0         ; E invalid command
0386   2B87           01662         goto    ICPcmd0         ; F invalid command
                      01663 
0387                  01664 ICPcmd0                         ; invalid command.
0387   2BFD           01665         goto    IQDone  
                      01666 
0388                  01667 ICPcmd1                         ; stop
0388   01DC           01668         clrf    isdS1           ; clear isd payload byte 1
0389   01DD           01669         clrf    isdS2           ; clear isd payload byte 2
038A   30A0           01670         movlw   ISDSTS          ;
                      01671         PAGE3                   ; select code page 3.
038B   158A               M         bsf     PCLATH,3
038C   160A               M         bsf     PCLATH,4
038D   2145           01672         call    ISDCmd3         ; send the STATUS  command
                      01673         PAGE0                   ; select code page 0.
038E   118A               M         bcf     PCLATH,3
038F   120A               M         bcf     PCLATH,4
0390   085A           01674         movf    sr1lo,w         ; get status 1 byte
0391   3930           01675         andlw   b'00110000'     ; mask out all except REC and PLAY flags
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0392   1903           01676         btfsc   STATUS,Z        ; is it zero?
0393   2BC0           01677         goto    ICP2B           ; it is zero, not gonna send STOP.
0394   14E1           01678         bsf     ismpcf,ISMWINT  ; need to wait for ISD int after this cmd.
0395   3040           01679         movlw   ISDSTOP         ; get the STOP command
0396   2BC0           01680         goto    ICP2B           ; send 2 byte command
                      01681 
0397                  01682 ICPcmd2                         ; reset
0397   30C0           01683         movlw   ISDRST          ; get the RESET command
0398   2BC0           01684         goto    ICP2B           ; send 2 byte command
                      01685 
0399                  01686 ICPcmd3                         ; clear interrupt
0399   3020           01687         movlw   ISDCINT         ; ISD clear interrupt command.
039A   2BFD           01688         goto    IQDone          
                      01689 
039B                  01690 ICPcmd4                         ; read status
039B   01DC           01691         clrf    isdS1           ; clear isd payload byte 1
039C   01DD           01692         clrf    isdS2           ; clear isd payload byte 2
039D   30A0           01693         movlw   ISDSTS          ;
                      01694         PAGE3                   ; select code page 3.
039E   158A               M         bsf     PCLATH,3
039F   160A               M         bsf     PCLATH,4
03A0   2145           01695         call    ISDCmd3         ; send the STATUS  command
                      01696         PAGE0                   ; select code page 0.
03A1   118A               M         bcf     PCLATH,3
03A2   120A               M         bcf     PCLATH,4
03A3   2BFD           01697         goto    IQDone          
                      01698         
03A4                  01699 ICPcmd5                         ; read devid
03A4   01DC           01700         clrf    isdS1           ; clear isd payload byte 1
03A5   01DD           01701         clrf    isdS2           ; clear isd payload byte 2
03A6   3090           01702         movlw   ISDDID          ; read devid commadn
                      01703         PAGE3                   ; select code page 3.
03A7   158A               M         bsf     PCLATH,3
03A8   160A               M         bsf     PCLATH,4
03A9   2145           01704         call    ISDCmd3         ; send the DEVID command
                      01705         PAGE0                   ; select code page 0.
03AA   118A               M         bcf     PCLATH,3
03AB   120A               M         bcf     PCLATH,4
03AC   085A           01706         movf    sr1lo,w         ; get 3rd response byte
03AD   00DB           01707         movwf   isdDvId         ; save ISD device ID.
03AE   2BFD           01708         goto    IQDone          
                      01709 
03AF                  01710 ICPcmd6                         ; G_erase
03AF   14E1           01711         bsf     ismpcf,ISMWINT  ; need to wait for interrupt after this cmd.
03B0   13E1           01712         bcf     ismpcf,ISMERAS  ; erase cannot be interrupted.
03B1   30CA           01713         movlw   ISDGER          ; ISD global erase command
03B2   2BC0           01714         goto    ICP2B           ; send 2 byte command
                      01715 
03B3                  01716 ICPcmd7                         ; write apc2
03B3   301F           01717         movlw   APC07           ; 1st byte of APC register
03B4   00DC           01718         movwf   isdS1           ; save it
03B5   30B0           01719         movlw   APC811          ; 2nd byte of APC register
03B6   00DD           01720         movwf   isdS2           ; save it
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B7   30A6           01721         movlw   ISDWAPC         ; ISD WR_APC2 command
                      01722         PAGE3                   ; select code page 3
03B8   158A               M         bsf     PCLATH,3
03B9   160A               M         bsf     PCLATH,4
03BA   2145           01723         call    ISDCmd3         ; send 3 byte command to ISD
                      01724         PAGE0                   ; select code page 0
03BB   118A               M         bcf     PCLATH,3
03BC   120A               M         bcf     PCLATH,4
03BD   2BFD           01725         goto    IQDone  
                      01726         
03BE                  01727 ICPcmd8                         ; PU
03BE   3080           01728         movlw   ISDPU           ; ISD PU command
03BF   2BC0           01729         goto    ICP2B           ; send 2 byte command
                      01730         
03C0                  01731 ICP2B                           ; send 2 byte command from here
                      01732         PAGE3                   ; select code page 3.
03C0   158A               M         bsf     PCLATH,3
03C1   160A               M         bsf     PCLATH,4
03C2   213D           01733         call    ISDCmd2         ; send the command
                      01734         PAGE0                   ; select code page 0.
03C3   118A               M         bcf     PCLATH,3
03C4   120A               M         bcf     PCLATH,4
03C5   2BFD           01735         goto    IQDone          
                      01736         
03C6                  01737 ICPdelay
03C6   082D           01738         movf    temp5,w         ; get command back
03C7   391F           01739         andlw   b'00011111'     ; mask to delay
                      01740         ;; this uses 7 instructions to make isdDly = 10 * w
03C8   00D5           01741         movwf   isdDly          ; save it  (=A)
03C9   00AD           01742         movwf   temp5           ; save it  (=A)
03CA   0DAD           01743         rlf     temp5,f         ; temp5 = temp5 x 2
03CB   0DAD           01744         rlf     temp5,f         ; temp5 = temp5 x 2
03CC   0D2D           01745         rlf     temp5,w         ; w = temp5 * 2
03CD   0755           01746         addwf   isdDly,w        ; w = w + isdDly
03CE   07D5           01747         addwf   isdDly,f        ; idsDly = w + isdDly
03CF   1461           01748         bsf     ismpcf,ISMWAIT  ; set ISMWAIT condition, wait for timer
03D0   2BFD           01749         goto    IQDone
                      01750         
03D1                  01751 ICPplay
03D1   3009           01752         movlw   ISDPLAY         ; ISD SET_PLAY command
03D2   00E0           01753         movwf   isdCmd          ; save command byte
                      01754         
03D3   16B2           01755         bsf     txFlag,TALKING  ; set TALKING flag.
                      01756                 
03D4   082D           01757         movf    temp5,w         ; get command byte back
03D5   393F           01758         andlw   b'00111111'     ; mask to only reasonable message numbers
                      01759         PAGE3                   ; select code page 3.
03D6   158A               M         bsf     PCLATH,3
03D7   160A               M         bsf     PCLATH,4
03D8   212E           01760         call    MsgNum          ; set up ISD start/stop address
03D9   2150           01761         call    ISDCmd7         ; send 7 byte command to ISD
03DA   2081           01762         call    PTTon           ; turn on tx if not on already.
                      01763         PAGE0                   ; select code page 0
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DB   118A               M         bcf     PCLATH,3
03DC   120A               M         bcf     PCLATH,4
                      01764 
03DD   1434           01765         bsf     isdFlag,ISDRUNF ; set ISD running flag
03DE   2BFB           01766         goto    ICPWINT
                      01767         
03DF                  01768 ICP7
03DF   1F2D           01769         btfss   temp5,6
03E0   2BEE           01770         goto    ICPerase
                      01771         
03E1                  01772 ICPrec
03E1   3089           01773         movlw   ISDREC
03E2   00E0           01774         movwf   isdCmd          ; save command byte
                      01775 
03E3   082D           01776         movf    temp5,w         ; get command byte back
03E4   393F           01777         andlw   b'00111111'     ; mask to only reasonable message numbers
                      01778         PAGE3                   ; select code page 3
03E5   158A               M         bsf     PCLATH,3
03E6   160A               M         bsf     PCLATH,4
03E7   212E           01779         call    MsgNum          ; set up ISD start/stop address
03E8   2150           01780         call    ISDCmd7         ; send 7 byte command to ISD
                      01781         PAGE0                   ; select code page 0
03E9   118A               M         bcf     PCLATH,3
03EA   120A               M         bcf     PCLATH,4
                      01782         
03EB   14B4           01783         bsf     isdFlag,ISDRECF ; set recording flag
03EC   13B4           01784         bcf     isdFlag,ISDRECE ; clear overflow flag
03ED   2BFB           01785         goto    ICPWINT
                      01786 
03EE                  01787 ICPerase
03EE   3049           01788         movlw   ISDERAS         ; ISD SET_ERASE command
03EF   00E0           01789         movwf   isdCmd          ; save command byte
                      01790 
03F0   082D           01791         movf    temp5,w         ; get command byte back
03F1   393F           01792         andlw   b'00111111'     ; mask to only reasonable message numbers
                      01793         PAGE3                   ; select code page 3
03F2   158A               M         bsf     PCLATH,3
03F3   160A               M         bsf     PCLATH,4
03F4   212E           01794         call    MsgNum          ; set up ISD start/stop address
03F5   2150           01795         call    ISDCmd7         ; send 7 byte command to ISD
                      01796         PAGE0                   ; select code page 0
03F6   118A               M         bcf     PCLATH,3
03F7   120A               M         bcf     PCLATH,4
                      01797         
03F8   17E1           01798         bsf     ismpcf,ISMERAS  ; erase cannot be interrupted.
03F9   1B4E           01799         btfsc   group1,6        ; in simplex mode?
03FA   16B2           01800         bsf     txFlag,TALKING  ; set TALKING flag.
                      01801         
03FB                  01802 ICPWINT                         ; set wait for interrupt and continue
03FB   14E1           01803         bsf     ismpcf,ISMWINT  ; wait for interrupt
                      01804         
03FC   2BFD           01805         goto    IQDone
                      01806 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03FD                  01807 IQDone  
                      01808 
03FD   2C00           01809         goto    MainLp          ; crosses 256 byte boundary (to 0400)
0400                  01810         org 0400
                      01811         
                      01812 ; *************************************
                      01813 ; * main loop for repeater controller *
                      01814 ; *************************************
                      01815 
0400                  01816 MainLp
0400   3004           01817         movlw   high MlTbl      ; set high byte of address
0401   008A           01818         movwf   PCLATH          ; select page
0402   0839           01819         movf    rx0Stat,w       ; get main receiver state
0403   0782           01820         addwf   PCL,f           ; add w to PCL:  computed GOTO
0404                  01821 MlTbl
0404   2C09           01822         goto    Main0           ; quiet
0405   2C86           01823         goto    Main1           ; repeat
0406   2CCE           01824         goto    Main2           ; timeout
                      01825         ;; new state for 1.04 
0407   2CE4           01826         goto    Main3           ; RXSREC record with rptr disabled.
                      01827         ;; new state for 1.12
0408   2CF5           01828         goto    Main4           ; receiver active while repeater is off
                      01829         
0409                  01830 Main0                           ; receiver quiet state
0409   1C33           01831         btfss   rxFlag,RX0OPEN  ; is squelch open?
040A   2CFB           01832         goto    ChkTmrs         ; nope, don't turn receiver on
                      01833         ;; receiver is unsquelched; put it on the air
                      01834         ;; receiver inactive --> active transition
                      01835         ;; v 1.04 changes to allow record when repeater disabled...
040B   184D           01836         btfsc   group0,0        ; is repeater enabled?
040C   2C2E           01837         goto    Main0on         ; yes.
                      01838         
                      01839         ;; repeater is not enabled.
040D   1934           01840         btfsc   isdFlag,ISDRECR ; is record mode flag set?
040E   2C1F           01841         goto    Main0R
040F   1ED0           01842         btfss   group3,5        ; ID beacon mode?
0410   2CFB           01843         goto    ChkTmrs         ; nope.
0411   1F50           01844         btfss   group3,6        ; NO CW ID mode?
0412   2CFB           01845         goto    ChkTmrs         ; nope.
                      01846         ;; now in BEACON mode and NO CW ID mode.
0413   3004           01847         movlw   RXSOFON         ; get new state #
0414   00B9           01848         movwf   rx0Stat         ; set new receiver state
                      01849 
                      01850         ;; stomp playing voice messages here.
0415   1C34           01851         btfss   isdFlag,ISDRUNF ; is ISD Running?
0416   2CFB           01852         goto    ChkTmrs         ; no
                      01853         ;; ISD is running.
0417   1D30           01854         btfss   flags,IDNOW     ; is an ID playing now?
0418   2CFB           01855         goto    ChkTmrs         ; no.
0419   3001           01856         movlw   ICMDST          ; get STOP command
041A   270F           01857         call    QISDCmd         ; enqueue the STOP command.
041B   12B2           01858         bcf     txFlag,TALKING  ; clear TALKING flag
041C   1730           01859         bsf     flags,DEF_ID    ; set deferred ID flag.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041D   1130           01860         bcf     flags,IDNOW     ; clear IDing flag.
041E   2CFB           01861         goto    ChkTmrs         ; rptr is disabled, no record.
                      01862         
041F                  01863 Main0R
                      01864         ;; repeater is disabled, but record is set.
                      01865         ;; set state to record...
041F   3003           01866         movlw   RXSREC          ; get new state #.
0420   00B9           01867         movwf   rx0Stat         ; set new receiver state record with rptr off.
0421   1205           01868         bcf     PORTA,RX0AUD    ; unmute receiver
                      01869         
0422   1C34           01870         btfss   isdFlag,ISDRUNF ; is ISD Running?
0423   2C27           01871         goto    M0ORec          ; no
                      01872         ;; ISD is running.
0424   01D5           01873         clrf    isdDly          ; clear this so it can't fire, just in case.
0425   1034           01874         bcf     isdFlag,ISDRUNF ; clear ISD running flag.
0426   12B2           01875         bcf     txFlag,TALKING  ; clear TALKING flag
0427                  01876 M0ORec
                      01877         ;; now set up to start recording...
0427   1134           01878         bcf     isdFlag,ISDRECR ; clear record mode flag.
                      01879         ;; stop the ISD to make sure it is in a known state.
0428   3001           01880         movlw   ICMDST          ; get STOP command
0429   270F           01881         call    QISDCmd         ; enqueue the STOP command.
                      01882         ;; send the record command
042A   0857           01883         movf    isdRMsg,w       ; get message number
042B   38C0           01884         iorlw   ICMDREC         ; make into record command
042C   270F           01885         call    QISDCmd         ; enqueue the command
042D   2CFB           01886         goto    ChkTmrs         ; done here.  continue on.
                      01887                 
042E                  01888 Main0on
042E   1ECD           01889         btfss   group0,5        ; is DTMF access mode enabled?
042F   2C3B           01890         goto    Main00          ; no.
0430   08BF           01891         movf    dtATmr,f        ; check DTMF access mode timer.
0431   1903           01892         btfsc   STATUS,Z        ; is it zero?
0432   2CFB           01893         goto    ChkTmrs         ; yes.  Don't turn receiver on.
                      01894         ;; timer is not zero, reset to initial value.
0433   3003           01895         movlw   EETDTA          ; get EEPROM address of DTMF access timer.
0434   00CB           01896         movwf   eeAddr          ; set EEPROM address low byte.
                      01897         PAGE3                   ; select code page 3.
0435   158A               M         bsf     PCLATH,3
0436   160A               M         bsf     PCLATH,4
0437   20AB           01898         call    ReadEEw         ; read EEPROM.
                      01899         PAGE0                   ; select code page 0.
0438   118A               M         bcf     PCLATH,3
0439   120A               M         bcf     PCLATH,4
043A   00BF           01900         movwf   dtATmr          ; set DTMF access mode timer.
043B                  01901 Main00                          ; receiver inactive --> active transition
043B   3001           01902         movlw   RXSON           ; get new state #
043C   00B9           01903         movwf   rx0Stat         ; set new receiver state
                      01904 
043D   1C50           01905         btfss   group3,0        ; euro ID mode?
043E   2C43           01906         goto    Main00e         ; not in euro mode.
043F   0832           01907         movf    txFlag,w        ; get txFlag.
0440   3904           01908         andlw   b'00000100'     ; mask for HANG 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0441   1903           01909         btfsc   STATUS,Z        ; is result zero?
0442   1430           01910         bsf     flags,initID    ; yes, set init ID mode
                      01911         
0443                  01912 Main00e                         ;
0443   14B0           01913         bsf     flags,needID    ; make sure ID still plays if tail never drops
                      01914         ;; 1.05 change here, fixes extra ID in euro ID mode
0444   1132           01915         bcf     txFlag,TXHANG   ; clear hang flag
0445   01BC           01916         clrf    hangTmr         ; clear hang timer
                      01917         ;; end of 1.05 change
0446   1F4E           01918         btfss   group1,6        ; dont turn on TX if in simplex mode.
0447   1432           01919         bsf     txFlag,RX0OPEN  ; set main receiver on bit
0448   30FF           01920         movlw   CTNONE          ; no courtesy tone.
0449   00CA           01921         movwf   cTone           ; kill off any pending courtesy tone.
044A                  01922 Main00a 
044A   08BD           01923         movf    muteTmr,f       ; check mute timer
044B   1903           01924         btfsc   STATUS,Z        ; if it's non-zero, skip unmute
044C   1205           01925         bcf     PORTA,RX0AUD    ; unmute receiver
                      01926         ;; stomp playing voice messages here.
044D   1C34           01927         btfss   isdFlag,ISDRUNF ; is ISD Running?
044E   2C6B           01928         goto    ChkRec          ; no
                      01929         ;; ISD is running.
044F   1D30           01930         btfss   flags,IDNOW     ; is an ID playing now?
0450   2C53           01931         goto    Stomp           ; nope.
0451   1DCF           01932         btfss   group2,3        ; is stomp allowed?
0452   2C79           01933         goto    MainUM          ; nope.  bypass record check, too.
0453                  01934 Stomp
0453   01D5           01935         clrf    isdDly          ; clear this so it can't fire, just in case.
0454   12B2           01936         bcf     txFlag,TALKING  ; clear TALKING flag
                      01937         ;; stop the ISD
0455   3001           01938         movlw   ICMDST          ; get STOP command
0456   270F           01939         call    QISDCmd         ; enqueue the STOP command.
                      01940 
0457   1F4E           01941         btfss   group1,6        ; in simplex repeat mode?
0458   2C5C           01942         goto    StompNS         ; nope.
                      01943         ;; erase simplex message after playback
0459   3001           01944         movlw   VSIMPLX         ; get simplex message
045A   3880           01945         iorlw   ICMDDEL         ; make into erase command
045B   270F           01946         call    QISDCmd         ; enqueue the erase command.
                      01947 
045C                  01948 StompNS 
045C   1D30           01949         btfss   flags,IDNOW     ; is an ID playing now?
                      01950         ;; hmmmm.  should this be allowed to set record mode now?
045D   2C6B           01951         goto    ChkRec          ; no.
                      01952 
045E   1F50           01953         btfss   group3,6        ; is NO CW ID mode selected?
045F   2C63           01954         goto    Stomp1          ; no, it is not.
0460   1730           01955         bsf     flags,DEF_ID    ; set deferred ID flag.
0461   1130           01956         bcf     flags,IDNOW     ; clear IDing flag.
0462   2C6B           01957         goto    ChkRec          ; continue...
                      01958         
0463                  01959 Stomp1
0463   30A0           01960         movlw   EECWID          ; address of CW ID message in EEPROM.
0464   00CB           01961         movwf   eeAddr          ; save CT base address
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01962         PAGE3                   ; select code page 1.
0465   158A               M         bsf     PCLATH,3
0466   160A               M         bsf     PCLATH,4
0467   200D           01963         call    PlayCWe         ; kick off the CW playback.
                      01964         PAGE0                   ; select code page 0.
0468   118A               M         bcf     PCLATH,3
0469   120A               M         bcf     PCLATH,4
046A   1130           01965         bcf     flags,IDNOW     ; clear IDing flag.
                      01966         
046B                  01967 ChkRec
046B   1934           01968         btfsc   isdFlag,ISDRECR ; is record mode flag set?
046C   2C70           01969         goto    NormRec         ; record normal message.
046D   1B4E           01970         btfsc   group1,6        ; in simplex mode?
046E   2C75           01971         goto    SimRec          ; yes.
046F   2C79           01972         goto    MainUM          ; no continue...
                      01973 
0470                  01974 NormRec                         ; normal, 22.3 second message.
0470   1134           01975         bcf     isdFlag,ISDRECR ; clear record mode flag.
0471   0857           01976         movf    isdRMsg,w       ; get record message slot
0472   38C0           01977         iorlw   ICMDREC         ; make into record command
0473   270F           01978         call    QISDCmd         ; enqueue the command
0474   2C79           01979         goto    MainUM          ; continue
                      01980         
0475                  01981 SimRec
0475   3001           01982         movlw   VSIMPLX         ; get simplex message
0476   38C0           01983         iorlw   ICMDREC         ; make into record command
0477   270F           01984         call    QISDCmd         ; enqueue the command
0478   2C79           01985         goto    MainUM          ; done here.
                      01986         
0479                  01987 MainUM
0479                  01988 Main01
0479   1C4E           01989         btfss   group1,0        ; is time out timer enabled?
047A   2CFB           01990         goto    ChkTmrs         ; nope...
047B   3005           01991         movlw   EETTMS          ; EEPROM address of timeout timer short preset.
047C   18CE           01992         btfsc   group1,1        ; is short timeout selected
047D   3004           01993         movlw   EETTML          ; EEPROM address of timeout timer long preset.
047E   00CB           01994         movwf   eeAddr          ; set EEPROM address low byte.
                      01995         PAGE3                   ; select code page 3.
047F   158A               M         bsf     PCLATH,3
0480   160A               M         bsf     PCLATH,4
0481   20AB           01996         call    ReadEEw         ; read EEPROM.
                      01997         PAGE0                   ; select code page 0.
0482   118A               M         bcf     PCLATH,3
0483   120A               M         bcf     PCLATH,4
0484   00BA           01998         movwf   rx0TOut         ; set timeout counter
0485   2CFB           01999         goto    ChkTmrs         ; done here...
                      02000 
0486                  02001 Main1                           ; receiver active state
0486   1C4D           02002         btfss   group0,0        ; is repeater enabled?
0487   2CA9           02003         goto    Main1Off        ; no.  turn receiver off
0488   1C33           02004         btfss   rxFlag,RX0OPEN  ; is squelch open?
0489   2CA9           02005         goto    Main1Off        ; no, on->off transition
048A   1E24           02006         btfss   tFlags,ONESEC   ; one second tick?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

048B   2CFB           02007         goto    ChkTmrs         ; nope, continue
048C   08BA           02008         movf    rx0TOut,f       ; squelch still open, check timeout timer
048D   1903           02009         btfsc   STATUS,Z        ; skip if not zero
048E   2CFB           02010         goto    ChkTmrs         ; timeout timer is zero, don't decrement
048F   0BBA           02011         decfsz  rx0TOut,f       ; decrement the timeout timer
0490   2CFB           02012         goto    ChkTmrs         ; have not timed out (yet), continue
                      02013         ;; have just timed out!
0491   3002           02014         movlw   RXSTMO          ; get new state, timed out
0492   00B9           02015         movwf   rx0Stat         ; set new receiver state
0493   1032           02016         bcf     txFlag,RX0OPEN  ; clear main receiver on bit
0494   1605           02017         bsf     PORTA,RX0AUD    ; mute
0495   1F4E           02018         btfss   group1,6        ; in simplex mode?
0496   2C9C           02019         goto    Main1X          ; yes.
0497   1CB4           02020         btfss   isdFlag,ISDRECF ; is the ISD recording
0498   2CFB           02021         goto    ChkTmrs         ; no, it has already stopped
0499   3001           02022         movlw   ICMDST          ; get STOP command
049A   270F           02023         call    QISDCmd         ; enqueue the STOP command.
049B   2CFB           02024         goto    ChkTmrs         ; done here
049C                  02025 Main1X  
049C   01BA           02026         clrf    rx0TOut         ; clear main receiver timeout timer
049D   1A4F           02027         btfsc   group2,4        ; is voice timeout message enabled?
049E   2CA6           02028         goto    Main1TO         ; yes...
                      02029         PAGE3                   ; select code page 3.
049F   158A               M         bsf     PCLATH,3
04A0   160A               M         bsf     PCLATH,4
04A1   3007           02030         movlw   CW_TO           ; get CW timeout message.
04A2   2000           02031         call    PlayCW          ; play CW message.
                      02032         PAGE0                   ; select code page 1.
04A3   118A               M         bcf     PCLATH,3
04A4   120A               M         bcf     PCLATH,4
04A5   2CFB           02033         goto    ChkTmrs         ; done here...
04A6                  02034 Main1TO 
04A6   3002           02035         movlw   VTIMOUT         ; time out message
04A7   2707           02036         call    NewPlay
04A8   2CFB           02037         goto    ChkTmrs         ; done here...
                      02038 
04A9                  02039 Main1Off                        ; receiver was active, became inactive
04A9   20A0           02040         call    Rcv0Off         ; turn off receiver
04AA                  02041 Main10
04AA   1B4E           02042         btfsc   group1,6        ; in simplex mode?
04AB   2CB3           02043         goto    Main10m         ; yes.
                      02044 
04AC   1AB4           02045         btfsc   isdFlag,ISDTEST ; test mode?
04AD   2CB3           02046         goto    Main10m         ; yes
                      02047 
04AE   1CB4           02048         btfss   isdFlag,ISDRECF ; is the ISD recording
04AF   2CC4           02049         goto    Main10a         ; nope.
                      02050         ;; the ISD is recording, send the stop command
04B0   3001           02051         movlw   ICMDST          ; get STOP command
04B1   270F           02052         call    QISDCmd         ; enqueue the STOP command.
04B2   2CBB           02053         goto    RecEnd1         ; not in simplex mode.
                      02054 
04B3                  02055 Main10m                         ; receiver dropped, in simplex mode.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04B3   1CB4           02056         btfss   isdFlag,ISDRECF ; is the ISD recording
04B4   2CB7           02057         goto    Main10X         ; nope.
                      02058         ;; the ISD is recording, send the stop command
04B5   3001           02059         movlw   ICMDST          ; get STOP command
04B6   270F           02060         call    QISDCmd         ; enqueue the STOP command.
                      02061 
04B7                  02062 Main10X
04B7   3001           02063         movlw   VSIMPLX         ; normal simplex message.
                      02064         IFDEF NHRC3_1
                      02065         btfsc   isdFlag,ISDTEST ; test message?
                      02066         movlw   VTEST           ; get the test message address
                      02067         ENDIF
04B8   2707           02068         call    NewPlay         ; play it
04B9   12B4           02069         bcf     isdFlag,ISDTEST ; clear this bit regardless of set or not
04BA   2CCD           02070         goto    Main10s         ; done here.
                      02071 
04BB                  02072 RecEnd1
                      02073         ;;  play CW OK message to indicate the record is complete
04BB   3000           02074         movlw   CW_OK           ; get CW OK
04BC   1BB4           02075         btfsc   isdFlag,ISDRECE ; overflow error?
04BD   3003           02076         movlw   CW_ERR          ; yes!
04BE   13B4           02077         bcf     isdFlag,ISDRECE ; clear overflow message bit
                      02078         PAGE3                   ; select code page 3.
04BF   158A               M         bsf     PCLATH,3
04C0   160A               M         bsf     PCLATH,4
04C1   2000           02079         call    PlayCW          ; start playback
                      02080         PAGE0                   ; select ROM page 0.
04C2   118A               M         bcf     PCLATH,3
04C3   120A               M         bcf     PCLATH,4
                      02081         
04C4                  02082 Main10a
                      02083         ;;  set the courtesy tone
04C4   01CA           02084         clrf    cTone           ; start with zero
04C5   1E06           02085         btfss   PORTB,CTSEL1    ; is CTSEL1 high?
04C6   144A           02086         bsf     cTone,0         ; no. set cTone 1s bit.
04C7   1A86           02087         btfsc   PORTB,CTSEL2    ; is CTSEL2 high?
04C8   2CCB           02088         goto    Main10h         ; yes.
04C9   1F51           02089         btfss   group4,6        ; is alarm mode set?
04CA   14CA           02090         bsf     cTone,1         ; no.  set cTone 2s bit.
                      02091 
04CB                  02092 Main10h
04CB   20A6           02093         call    SetHang         ; start/restart the hang timer
04CC   20B6           02094         call    ChkID           ; test if need an ID now
04CD                  02095 Main10s                         ; Simplex mode; no hang, no courtesy tone.
04CD   2CFB           02096         goto    ChkTmrs         ; done here...
                      02097 
04CE                  02098 Main2                           ; receiver timedout state
04CE   1C4D           02099         btfss   group0,0        ; is repeater enabled?
04CF   2CD2           02100         goto    Main2Off        ; no.  turn receiver off
04D0   1833           02101         btfsc   rxFlag,RX0OPEN  ; is squelch still open?
04D1   2CFB           02102         goto    ChkTmrs         ; yes, still timed out
04D2                  02103 Main2Off                        ; end of timeout condition.
04D2   3000           02104         movlw   RXSOFF          ; timeout condition ended, get new state (off)
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04D3   00B9           02105         movwf   rx0Stat         ; set new receiver state
04D4   1B4E           02106         btfsc   group1,6        ; simplex mode?
04D5   2CDF           02107         goto    Main2Sx         ; yes
04D6   1A4F           02108         btfsc   group2,4        ; is voice timeout message enabled?
04D7   2CE1           02109         goto    Main2TO         ; yes...
                      02110         PAGE3                   ; select code page 3.
04D8   158A               M         bsf     PCLATH,3
04D9   160A               M         bsf     PCLATH,4
04DA   3007           02111         movlw   CW_TO           ; get CW timeout message.
04DB   2000           02112         call    PlayCW          ; play CW message.
                      02113         PAGE0                   ; select code page 1.
04DC   118A               M         bcf     PCLATH,3
04DD   120A               M         bcf     PCLATH,4
04DE   2CFB           02114         goto    ChkTmrs         ; done here...
04DF                  02115 Main2Sx
04DF   3001           02116         movlw   VSIMPLX         ; get simplex message
04E0   2CE2           02117         goto    Main2Py         ; play it
04E1                  02118 Main2TO 
04E1   3002           02119         movlw   VTIMOUT         ; time out message
04E2                  02120 Main2Py 
04E2   2707           02121         call    NewPlay         ; play message
04E3   2CFB           02122         goto    ChkTmrs         ; seems redundant, but it ain't
                      02123 
04E4                  02124 Main3                           ; record with rptr disabled state.
04E4   1C33           02125         btfss   rxFlag,RX0OPEN  ; is squelch open?
04E5   2CE7           02126         goto    Main3Off        ; no, on->off transition
04E6   2CFB           02127         goto    ChkTmrs         ; 
                      02128 
04E7                  02129 Main3Off                        ; receiver was active, became inactive
04E7   1605           02130         bsf     PORTA,RX0AUD    ; mute it...
04E8   3000           02131         movlw   RXSOFF          ; get new state (off)
04E9   00B9           02132         movwf   rx0Stat         ; set new receiver state
                      02133 
04EA   1CB4           02134         btfss   isdFlag,ISDRECF ; is the ISD recording?
04EB   2CEE           02135         goto    Main3OK         ; nope. must have timed out.
                      02136         ;; the ISD is recording, send the STOP command
04EC   3001           02137         movlw   ICMDST          ; get STOP command
04ED   270F           02138         call    QISDCmd         ; enqueue the STOP command.
                      02139         
04EE                  02140 Main3OK
                      02141         ;; done recording -- Play the OK message.
                      02142         PAGE3                   ; select ROM page 3.
04EE   158A               M         bsf     PCLATH,3
04EF   160A               M         bsf     PCLATH,4
04F0   3000           02143         movlw   CW_OK           ; get CW OK
04F1   2000           02144         call    PlayCW          ; start playback
                      02145         PAGE0                   ; select ROM page 0.
04F2   118A               M         bcf     PCLATH,3
04F3   120A               M         bcf     PCLATH,4
04F4   2CFB           02146         goto    ChkTmrs         ; seems redundant, but it ain't
                      02147 
04F5                  02148 Main4
                      02149         ;; receiver active with repeater disabled,
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02150         ;; ID BEACON MODE enabled.
                      02151         ;; NO CW ID MODE enabled.
                      02152         ;; 1.12
                      02153 
04F5   1833           02154         btfsc   rxFlag,RX0OPEN  ; is squelch open?
04F6   2CFB           02155         goto    ChkTmrs         ; yes, still open.
                      02156         ;; COR has gone away.
04F7   3000           02157         movlw   RXSOFF          ; COR on to off transition, get new state (off)
04F8   00B9           02158         movwf   rx0Stat         ; set new receiver state
04F9   20B6           02159         call    ChkID           ; test if need an ID now
04FA   2CFB           02160         goto    ChkTmrs         ; done here.
                      02161         
04FB                  02162 ChkTmrs                         ; check timers here.
04FB   2CFE           02163         goto    Ck10mS          ; skip one ms timer.
                      02164         ;; start with one-millisecond timers
04FC   1CA4           02165         btfss   tFlags,ONEMS    ; is one-millisecond bit set?
04FD   2CFE           02166         goto    Ck10mS          ; nope.
                      02167         ;; one-millisecond tick active.
                      02168         
04FE                  02169 Ck10mS                          ; check 10 millisecond timers
04FE   1D24           02170         btfss   tFlags,TENMS    ; is ten-millisecond bit set?
04FF   2D0E           02171         goto    Ck100mS         ; nope.
                      02172         ;; ten millisecond tick active.
0500   08C3           02173         movf    pulsTmr,f       ; check for pulsed output
0501   1903           02174         btfsc   STATUS,Z        ; is it zero?
0502   2D0E           02175         goto    PulsEnd         ; yep.
0503   0BC3           02176         decfsz  pulsTmr,f       ; decrement and check for zero.
0504   2D0E           02177         goto    PulsEnd         ; not zero yet.
                      02178         
0505   0851           02179         movf    group4,w        ; get digout pulse control.
0506   3903           02180         andlw   b'00000011'     ; mask leaves 2 digital output control bits.
0507   3AFF           02181         xorlw   h'ff'           ; invert.
0508   05D2           02182         andwf   group5,f        ; update the port.
                      02183         PAGE2                   ; select page 2
0509   118A               M         bcf     PCLATH,3
050A   160A               M         bsf     PCLATH,4
050B   2093           02184         call    SetDig          ; set the digital outputs themselves
                      02185         PAGE0                   ; select code page 0.
050C   118A               M         bcf     PCLATH,3
050D   120A               M         bcf     PCLATH,4
050E                  02186 PulsEnd                         ; done with IO output pulse logic
                      02187 
050E                  02188 Ck100mS                         ; check 100 millisecond tick.
050E   1DA4           02189         btfss   tFlags,HUNDMS   ; is 100 millisecond bit set?
050F   2D49           02190         goto    Ck1S            ; nope.
                      02191         ;; 100 millisecond tick active.
                      02192         ;; check hang timer.
0510   08BC           02193         movf    hangTmr,f       ; check hang timer
0511   1903           02194         btfsc   STATUS,Z        ; is it zero?
0512   2D42           02195         goto    NoHang          ; yes, not hang active, continue
                      02196 
                      02197         ;; 1.03 change here.
                      02198         ;; don't decrement hang timer if ID is running.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0513   0832           02199         movf    txFlag,w        ; get txFlag.
0514   39A0           02200         andlw   b'10100000'     ; mask CWPLAY TALKING
0515   1D03           02201         btfss   STATUS,Z        ; is result zero?
0516   2D42           02202         goto    NoHang          ; no.  One of the sources is active.
                      02203         ;; end of 1.03 change
                      02204 
0517   083C           02205         movf    hangTmr,w       ; get hang timer
0518   0244           02206         subwf   hangDly,w       ; w = hangDly - hangTmr(w) (amount hang used)
0519   3C05           02207         sublw   d'05'           ; subtract .5 seconds
051A   1D03           02208         btfss   STATUS,Z        ; skip if result is 0
051B   2D2F           02209         goto    HangNob         ; not 0...don't beep.
                      02210         ;; check to see if there is something already playing
051C   0832           02211         movf    txFlag,w        ; get txFlag
051D   39B0           02212         andlw   b'10110000'     ; and txFlag with (CW or ISD or DTMF)
051E   1903           02213         btfsc   STATUS,Z        ; is the result zero?
051F   2D22           02214         goto    HangCT          ; yes, ok to play CT.
0520   16B0           02215         bsf     flags,DEF_CT    ; set defer CT flag.
0521   2D2F           02216         goto    HangNob         ; don't beep now.
                      02217         
                      02218         ;;  bag the beep, CW, ISD or DTMF is playing.
                      02219 
                      02220         ;; select courtesy tone here.
0522                  02221 HangCT
0522   0A4A           02222         incf    cTone,w         ; check cTone for FF
0523   1903           02223         btfsc   STATUS,Z        ; is result 0?
0524   2D2F           02224         goto    HangNob         ; yes, cTone was FF.
0525   1F4D           02225         btfss   group0,6        ; is courtesy tone enabled?
0526   2D2F           02226         goto    HangNob         ; courtesy tone disabled.
0527   3007           02227         movlw   CTUNLOK         ; get unlocked mode courtesy tone.
0528   1AF4           02228         btfsc   dtRFlag,DT0UNLK ; is this port (main receiver) unlocked?
0529   00CA           02229         movwf   cTone           ; yep. set unlocked courtesy tone.
                      02230 
                      02231         PAGE3                   ; select code page 3.
052A   158A               M         bsf     PCLATH,3
052B   160A               M         bsf     PCLATH,4
052C   2029           02232         call    PlayCT          ; play courtesy tone #w
                      02233         PAGE0                   ; select code page 0.
052D   118A               M         bcf     PCLATH,3
052E   120A               M         bcf     PCLATH,4
                      02234 
052F                  02235 HangNob                         ; hanging without a beep
052F   0BBC           02236         decfsz  hangTmr,f       ; decrement and check if now zero
0530   2D42           02237         goto    NoHang          ; not zero
                      02238         ;; end of hang time. hang timer timed out.
0531   1132           02239         bcf     txFlag,TXHANG   ; turn off hang time flag
                      02240         ;; euro mode check
0532   1C50           02241         btfss   group3,0        ; in European mode?
0533   2D39           02242         goto    USMode          ; nope.
                      02243         ;; euro mode ID playing
                      02244         ;; 1.06 euro ID mode test...
0534   1CD0           02245         btfss   group3,1        ; Euro Mode Tail Drop Normal Speech ID set?
0535   2086           02246         call    DoIDCW          ; no.  Play CW ID.
0536   18D0           02247         btfsc   group3,1        ; Euro Mode Tail Drop Normal Speech ID set?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0537   2066           02248         call    DoIDNor         ; yep.  Play speech ID.
                      02249         ;; end of 1.06 change
0538   2D42           02250         goto    NoHang          ; end of euro mode change
                      02251 
0539                  02252 USMode
0539   08B2           02253         movf    txFlag,f        ; check tXflag for zero.
053A   1D03           02254         btfss   STATUS,Z        ; is it zero?
053B   2D42           02255         goto    NoHang          ; no.  txFlag is not zero
                      02256 
                      02257         ;; check tail message
053C   08C1           02258         movf    tailCtr,f       ; check.
053D   1903           02259         btfsc   STATUS,Z        ; skip if tailCtr not zero.
053E   2D42           02260         goto    NoHang          ; tailCtr is zero.
053F   0BC1           02261         decfsz  tailCtr,f       ; decrement tailCtr, skip if now zero.
0540   2D42           02262         goto    NoHang          ; not zero
                      02263         ;; tail message time.
0541   20C1           02264         call    DoTail          ; play tail message.
                      02265         
0542                  02266 NoHang                          ; done with hang timer...
                      02267         ;; process DTMF muting timer...
0542   08BD           02268         movf    muteTmr,f       ; test mute timer
0543   1903           02269         btfsc   STATUS,Z        ; Z is set if not DTMF muting
0544   2D49           02270         goto    NoMutTm         ; muteTmr is zero.
0545   0BBD           02271         decfsz  muteTmr,f       ; decrement muteTmr
0546   2D49           02272         goto    NoMutTm         ; have not reached the end of the mute time
0547   1832           02273         btfsc   txFlag,RX0OPEN  ; is receiver 0 unsquelched
0548   1205           02274         bcf     PORTA,RX0AUD    ; unmute it...
                      02275 
0549                  02276 NoMutTm                         ; done with muting timer...
0549                  02277 Ck1S                            ; check 1-second flag bit.
0549   1E24           02278         btfss   tFlags,ONESEC   ; is one-second flag bit set?
054A   2D52           02279         goto    Ck10S           ; nope.
                      02280         ;; 1-second tick active.
054B   08C2           02281         movf    unlkTmr,f       ; check unlkTmr
054C   1903           02282         btfsc   STATUS,Z        ; is it zero?
054D   2D52           02283         goto    NoULTmr         ; yes, don't worry about it.
054E   0BC2           02284         decfsz  unlkTmr,f       ; no, decrement it.
054F   2D52           02285         goto    NoULTmr         ; still not zero.
                      02286         ;; unlkTmr counted down to zero, lock controller.
0550   301F           02287         movlw   b'00011111'     ; mask:  clear unlocked bits.
0551   05F4           02288         andwf   dtRFlag,f       ; and with dtRFlag: clear unlocked bits.
                      02289 
0552                  02290 NoULTmr                         ; unlocked timer is zero.
                      02291         
0552                  02292 Ck10S                           ; check 10-second tick flag bit.
0552   1EA4           02293         btfss   tFlags,TENSEC   ; is ten-second flag bit set?
0553   2D67           02294         goto    NoTimr          ; nope.  no more timers to test.
0554   08BB           02295         movf    idTmr,f
0555   1903           02296         btfsc   STATUS,Z        ; is idTmr 0
0556   2D5A           02297         goto    NoIDTmr         ; yes...
0557   0BBB           02298         decfsz  idTmr,f         ; decrement ID timer
0558   2D5A           02299         goto    NoIDTmr         ; not zero yet...
0559   2050           02300         call    DoID            ; id timer decremented to zero, play the ID
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

055A                  02301 NoIDTmr                         ; process more 10 second timers here...
055A   08C0           02302         movf    fanTmr,f        ; check fan timer
055B   1903           02303         btfsc   STATUS,Z        ; is it zero?
055C   2D62           02304         goto    NoFanTm         ; yes.
055D   1ECF           02305         btfss   group2,5        ; fan mode configured?
055E   2D62           02306         goto    NoFanTm         ; no
055F   0BC0           02307         decfsz  fanTmr,f        ; decrement fan timer
0560   2D62           02308         goto    NoFanTm         ; not zero yet
0561   1006           02309         bcf     PORTB,FANCTL    ; turn off fan
0562                  02310 NoFanTm
                      02311         ;; 
0562   08BF           02312         movf    dtATmr,f        ; check DTMF access timer.
0563   1903           02313         btfsc   STATUS,Z        ; is it zero?
0564   2D67           02314         goto    NoDTATm         ; yes
0565   0BBF           02315         decfsz  dtATmr,f        ; decrement DTMF access timer
0566   2D67           02316         goto    NoDTATm         ; not zero yet.
                      02317         ;;  
                      02318         
0567                  02319 NoDTATm
                      02320                 IFDEF NHRC3_1
                      02321         movf    alrmTmr,f       ; check alarm announce timer
                      02322         btfsc   STATUS,Z        ; is it zero?
                      02323         goto    NoAlTmr         ; yes.
                      02324         decfsz  alrmTmr,f       ; decrement the alarm announce timer.
                      02325         goto    NoAlTmr         ; still not zero
                      02326         movlw   VALARM          ; get alarm announce message.
                      02327         call    NewPlay         ; play the alarm message.
                      02328 
                      02329         ;; now, reset alarm announce timer
                      02330         movlw   EEALARM         ; get EEPROM address of alarm timer.
                      02331         movwf   eeAddr          ; set EEPROM address low byte.
                      02332         PAGE3                   ; select code page 3.
                      02333         call    ReadEEw         ; read EEPROM.
                      02334         PAGE0                   ; select code page 0.
                      02335         movwf   alrmTmr         ; preset tail message counter.
                      02336                 ENDIF
0567                  02337 NoAlTmr 
                      02338         
0567                  02339 NoTimr                          ; no more timers to test.
                      02340         
                      02341 
0567                  02342 ChkTx                           ; check if transmitter should be on
0567   08B2           02343         movf    txFlag,f        ; check txFlag
0568   1903           02344         btfsc   STATUS,Z        ; skip if not zero
0569   2D72           02345         goto    ChkTx0          ; it's zero, turn off transmitter
056A   19B0           02346         btfsc   flags,TXONFLG   ; skip if not already on
056B   2D79           02347         goto    ChkTxE          ; done here
                      02348         PAGE3                   ; select code page 1.
056C   158A               M         bsf     PCLATH,3
056D   160A               M         bsf     PCLATH,4
056E   2081           02349         call    PTTon           ; turn on transmitter (will set TXONFLG)
                      02350         PAGE0                   ; select code page 0.
056F   118A               M         bcf     PCLATH,3
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0570   120A               M         bcf     PCLATH,4
0571   2D79           02351         goto    ChkTxE          ; now done here.
                      02352         
0572                  02353 ChkTx0
0572   1DB0           02354         btfss   flags,TXONFLG   ; skip if tx is on
0573   2D79           02355         goto    ChkTxE          ; was already off
                      02356         PAGE3                   ; select code page 1.
0574   158A               M         bsf     PCLATH,3
0575   160A               M         bsf     PCLATH,4
0576   2096           02357         call    PTToff          ; turn off PTT
                      02358         PAGE0                   ; select code page 0.
0577   118A               M         bcf     PCLATH,3
0578   120A               M         bcf     PCLATH,4
0579                  02359 ChkTxE                          ; end of ChkTx
                      02360 
                      02361 ; ***************
                      02362 ; ** CW SENDER ** 
                      02363 ; ***************
0579                  02364 CWSendr
0579   1FB2           02365         btfss   txFlag,CWPLAY   ; sending CW?
057A   2DBF           02366         goto    NoCW            ; nope
                      02367 
057B   1CA4           02368         btfss   tFlags,ONEMS    ; is this a one-ms tick?
057C   2DBF           02369         goto    NoCW            ; nope.
                      02370 
057D   0BC7           02371         decfsz  cwTbTmr,f       ; decrement CW timebase counter
057E   2DBF           02372         goto    NoCW            ; not zero yet.
                      02373 
057F   0849           02374         movf    cwSpeed,w       ; get CW timebase preset.
0580   00C7           02375         movwf   cwTbTmr         ; preset CW timebase.
                      02376 
0581   0BC5           02377         decfsz  cwTmr,f         ; decrement CW element timer
0582   2DBF           02378         goto    NoCW            ; not zero
                      02379 
0583   1FA4           02380         btfss   tFlags,CWBEEP   ; was "key" down? 
0584   2DA3           02381         goto    CWKeyUp         ; nope
                      02382                                 ; key was down
0585   13A4           02383         bcf     tFlags,CWBEEP   ; 
                      02384         ; turn off beep here.
0586   0103           02385         clrw                    ; clear W.
                      02386         PAGE3                   ; select code page 3.
0587   158A               M         bsf     PCLATH,3
0588   160A               M         bsf     PCLATH,4
0589   262C           02387         call    SetTone         ; set the beep tone up.
                      02388         PAGE0                   ; select code page 0.
058A   118A               M         bcf     PCLATH,3
058B   120A               M         bcf     PCLATH,4
058C   0346           02389         decf    cwByte,w        ; test CW byte to see if 1
058D   1903           02390         btfsc   STATUS,Z        ; was it 1 (Z set if cwByte == 1)
058E   2D92           02391         goto    CWNext          ; it was 1...
058F   3001           02392         movlw   CWIESP          ; get cw inter-element space
0590   00C5           02393         movwf   cwTmr           ; preset cw timer
0591   2DBF           02394         goto    NoCW            ; done with this pass...
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02395 
0592                  02396 CWNext                          ; get next character of message
                      02397         PAGE3                   ; select code page 1.
0592   158A               M         bsf     PCLATH,3
0593   160A               M         bsf     PCLATH,4
0594   2066           02398         call    GtBeep          ; get the next cw character
                      02399         PAGE0                   ; select code page 0.
0595   118A               M         bcf     PCLATH,3
0596   120A               M         bcf     PCLATH,4
0597   00C6           02400         movwf   cwByte          ; store character bitmap
0598   1903           02401         btfsc   STATUS,Z        ; is this a space (zero)
0599   2DA0           02402         goto    CWWord          ; yes, it is 00
059A   0A46           02403         incf    cwByte,w        ; check to see if it is FF
059B   1903           02404         btfsc   STATUS,Z        ; if this bitmap was FF then Z will be set
059C   2DB8           02405         goto    CWDone          ; yes, it is FF
059D   3003           02406         movlw   CWILSP          ; no, not 00 or FF, inter letter space
059E   00C5           02407         movwf   cwTmr           ; preset cw timer
059F   2DBF           02408         goto    NoCW            ; done with this pass...
                      02409 
05A0                  02410 CWWord                          ; word space
05A0   3007           02411         movlw   CWIWSP          ; get word space
05A1   00C5           02412         movwf   cwTmr           ; preset cw timer
05A2   2DBF           02413         goto    NoCW            ; done with this pass...
                      02414 
05A3                  02415 CWKeyUp                         ; key was up, key again...
05A3   0A46           02416         incf    cwByte,w        ; is cwByte == ff?
05A4   1903           02417         btfsc   STATUS,Z        ; Z is set if cwByte == ff
05A5   2DB8           02418         goto    CWDone          ; got EOM
                      02419 
05A6   08C6           02420         movf    cwByte,f        ; check for zero/word space
05A7   1D03           02421         btfss   STATUS,Z        ; is it zero
05A8   2DAA           02422         goto    CWTest          ; no...
05A9   2D92           02423         goto    CWNext          ; is 00, word space...
                      02424 
05AA                  02425 CWTest
05AA   3001           02426         movlw   CWDIT           ; get dit length
05AB   1846           02427         btfsc   cwByte,0        ; check low bit
05AC   3003           02428         movlw   CWDAH           ; get DAH length
05AD   00C5           02429         movwf   cwTmr           ; preset cw timer
05AE   17A4           02430         bsf     tFlags,CWBEEP   ; turn key->down
05AF   0848           02431         movf    cwTone,w        ; get CW tone
                      02432         ;; turn on beep here.
                      02433         PAGE3                   ; select code page 3.
05B0   158A               M         bsf     PCLATH,3
05B1   160A               M         bsf     PCLATH,4
05B2   262C           02434         call    SetTone         ; set the beep tone up.
                      02435         PAGE0                   ; select code page 0.
05B3   118A               M         bcf     PCLATH,3
05B4   120A               M         bcf     PCLATH,4
05B5   0CC6           02436         rrf     cwByte,f        ; rotate cw bitmap
05B6   13C6           02437         bcf     cwByte,7        ; clear the MSB
05B7   2DBF           02438         goto    NoCW            ; done with this pass...
                      02439 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05B8                  02440 CWDone                          ; done sending CW
05B8   13B2           02441         bcf     txFlag,CWPLAY   ; turn off CW flag
05B9   1D30           02442         btfss   flags,IDNOW     ; was this an ID message?
05BA   2DBE           02443         goto    CWDone1         ; no
05BB   10B0           02444         bcf     flags,needID    ; don't need to ID now.
05BC   1130           02445         bcf     flags,IDNOW     ; not sending ID any more, either.
05BD   1330           02446         bcf     flags,DEF_ID    ; clear deferred ID flag
                      02447         
05BE                  02448 CWDone1
05BE   01B7           02449         clrf    beepCtl         ; clear beep control flags
                      02450 
05BF                  02451 NoCW
05BF                  02452 CasEnd
05BF                  02453 CkTone
05BF   1DA4           02454         btfss   tFlags,HUNDMS   ; check the DTMF timers every 100 msec.
05C0   2DC7           02455         goto    TonDone         ; not 100 MS tick.
05C1                  02456 CkDt0   
05C1   08F3           02457         movf    dt0Tmr,f        ; check for zero...
05C2   1903           02458         btfsc   STATUS,Z        ; is it zero
05C3   2DC7           02459         goto    TonDone         ; yes
05C4   0BF3           02460         decfsz  dt0Tmr,f        ; decrement timer
05C5   2DC7           02461         goto    TonDone         ; not zero yet
05C6   1474           02462         bsf     dtRFlag,DT0RDY  ; ready to evaluate command.
05C7                  02463 TonDone
                      02464         ;; manage beep timer 
05C7   1D24           02465         btfss   tFlags,TENMS    ; is this a 10 ms tick?
05C8   2DDF           02466         goto    NoTime          ; nope.
05C9   08B5           02467         movf    beepTmr,f       ; check beep timer
05CA   1903           02468         btfsc   STATUS,Z        ; is it zero?
05CB   2DD4           02469         goto    NBeep           ; yes.
                      02470         ;goto    NoTime         ; yes.
05CC                  02471 BeepTic                         ; a valid beep tick.
05CC   0BB5           02472         decfsz  beepTmr,f       ; decrement beepTmr
05CD   2DDF           02473         goto    NoTime          ; not zero yet.
                      02474         PAGE3                   ; select code page 3.
05CE   158A               M         bsf     PCLATH,3
05CF   160A               M         bsf     PCLATH,4
05D0   2052           02475         call    GetBeep         ; get the next beep tone...
                      02476         PAGE0                   ; select code page 0.
05D1   118A               M         bcf     PCLATH,3
05D2   120A               M         bcf     PCLATH,4
05D3   2DDF           02477         goto    NoTime          ; done here.
05D4                  02478 NBeep                           ; verify that beeping is really over. HACK.
05D4   08C5           02479         movf    cwTmr,f         ; check cwTmr.
05D5   1D03           02480         btfss   STATUS,Z        ; is it zero?
05D6   2DDF           02481         goto    NoTime          ; no.
05D7   08B7           02482         movf    beepCtl,f       ; check this.
05D8   1903           02483         btfsc   STATUS,Z        ; is it zero?
05D9   2DDF           02484         goto    NoTime          ; yes.
                      02485         PAGE3                   ; select code page 3.
05DA   158A               M         bsf     PCLATH,3
05DB   160A               M         bsf     PCLATH,4
05DC   2052           02486         call    GetBeep         ; get the next beep tone...
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02487         PAGE0                   ; select code page 0.
05DD   118A               M         bcf     PCLATH,3
05DE   120A               M         bcf     PCLATH,4
                      02488 
05DF                  02489 NoTime
05DF   08A4           02490         movf    tFlags,f        ; evaluate tFlags
05E0   1D03           02491         btfss   STATUS,Z        ; skip if ZERO
05E1   2E33           02492         goto    LoopEnd
                      02493         ;; no timing flags were set...
                      02494         ;; likely some excess, available CPU cycles here.
                      02495         ;; evaluate DTMF buffers...
05E2                  02496 PfxDT0
                      02497         ;; evaluate DTMF 0 buffer for command
05E2   1A74           02498         btfsc   dtRFlag,DTSEVAL ; is a command being interpreted now?
05E3   2DF6           02499         goto    DTEval          ; yes, don't look at the DTMF buffers right now
05E4   1C74           02500         btfss   dtRFlag,DT0RDY  ; is a command ready to evaluate?
05E5   2DF5           02501         goto    XPfxDT          ; no command waiting.
                      02502         ;; copy command from dtmf rx buf to command interpreter input buffer.
05E6   3020           02503         movlw   low dt0buf0     ; get address of this dtmf receiver's buffer
05E7   0084           02504         movwf   FSR             ; store.
05E8   0872           02505         movf    dt0Ptr,w        ; get command size...
05E9   00AF           02506         movwf   cmdSize         ; save it.
05EA   263C           02507         call    CpyDTMF         ; copy the command...
05EB   0872           02508         movf    dt0Ptr,w        ; get command size back, CpyDTMF clobbers.
05EC   00AF           02509         movwf   cmdSize         ; save it.
05ED   01F2           02510         clrf    dt0Ptr          ; make ready to receive again.
05EE   01F5           02511         clrf    dtEFlag         ; start evaluating from first prefix.
05EF   16F5           02512         bsf     dtEFlag,DT0CMD  ; command from DTMF-0.
05F0   1674           02513         bsf     dtRFlag,DTSEVAL ; set evaluate DTMF bit.
05F1   1AF4           02514         btfsc   dtRFlag,DT0UNLK ; port 0 unlocked?
05F2   15F4           02515         bsf     dtRFlag,DTUL    ; this port is unlocked.
05F3   1074           02516         bcf     dtRFlag,DT0RDY  ; reset DTMF ready bit.
05F4   2DF6           02517         goto    DTEval          ; go and evaluate the command right now.
                      02518 
05F5                  02519 XPfxDT
05F5   2E33           02520         goto    LoopEnd
                      02521         
05F6                  02522 DTEval                          ; evaluate DTMF command in command buffer
05F6   19F4           02523         btfsc   dtRFlag,DTUL    ; is this command from an unlocked port?
05F7   2E2A           02524         goto    DTEvalU         ; yep.
                      02525 
                      02526         ;; evaluate the command in the buffer against the contents of eeprom.
05F8   30A0           02527         movlw   low cmdbf00     ; get command buffer address
05F9   0084           02528         movwf   FSR             ; set pointer
05FA   0875           02529         movf    dtEFlag,w       ; get dtEFlag.
05FB   391F           02530         andlw   b'00011111'     ; mask out control bits.
05FC   00A9           02531         movwf   temp            ; set prefix index.
05FD   3008           02532         movlw   EEPFL           ; max number of digits in prefix.
05FE   00AA           02533         movwf   temp2           ; save max number of digits to look at.
05FF   0829           02534         movf    temp,w          ; get prefix index.
0600   00CB           02535         movwf   eeAddr          ; set EEPROM address low byte
0601   1003           02536         bcf     STATUS,C        ; clear carry bit
0602   0DCB           02537         rlf     eeAddr,f        ; rotate (x2)
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0603   0DCB           02538         rlf     eeAddr,f        ; rotate (x4 this time)
0604   0DCB           02539         rlf     eeAddr,f        ; rotate (x8 now)
0605   30B0           02540         movlw   EEPFB           ; get EEPROM base address for prefix 0
0606   07CB           02541         addwf   eeAddr,f        ; add to offset.
                      02542         ;; now have address of base of selected prefix.
0607                  02543 DTEval1
                      02544         PAGE3                   ; select code page 3.
0607   158A               M         bsf     PCLATH,3
0608   160A               M         bsf     PCLATH,4
0609   20AB           02545         call    ReadEEw         ; read EEPROM.
                      02546         PAGE0                   ; select code page 0.
060A   118A               M         bcf     PCLATH,3
060B   120A               M         bcf     PCLATH,4
060C   00AB           02547         movwf   temp3           ; save retrieved byte
060D   3CFF           02548         sublw   h'ff'           ; subtract FF.
060E   1903           02549         btfsc   STATUS,Z        ; skip if temp3 was NOT FF.
060F   2E21           02550         goto    DTEvalY         ; value was FF, end of valid prefix. process.
0610   082B           02551         movf    temp3,w         ; get back real value for retrieved byte.
0611   0200           02552         subwf   INDF,w          ; subtract bytes.
0612   1D03           02553         btfss   STATUS,Z        ; skip if they were the same.
0613   2E1A           02554         goto    DTEvalN         ; them bytes were not equal.
0614   0BAA           02555         decfsz  temp2,f         ; decrease number of bytes to scan
0615   2E17           02556         goto    DTEnext         ; go evaluate next byte.
0616   2E1A           02557         goto    DTEvalN         ; go on to next prefix.
0617                  02558 DTEnext                         ; evaluate next byte.
0617   0ACB           02559         incf    eeAddr,f        ; move to the next EEPROM byte.
0618   0A84           02560         incf    FSR,f           ; move to the next cmdbuf byte.
0619   2E07           02561         goto    DTEval1         ; look at the next prefix
                      02562         
061A                  02563 DTEvalN                         ; was not this prefix.
061A   0AF5           02564         incf    dtEFlag,f       ; move to next prefix
061B   0875           02565         movf    dtEFlag,w       ; get dtEFlag.
061C   391F           02566         andlw   b'00011111'     ; mask out control bits.
061D   3C08           02567         sublw   EEPFC           ; subtract number of last prefix.
061E   1903           02568         btfsc   STATUS,Z        ; is result 0? (all prefixes checked)
061F   2E30           02569         goto    DTEdone         ; it's zero, done evaluating.
0620   2E33           02570         goto    LoopEnd         ; continue.
                      02571 
0621                  02572 DTEvalY                         ; HEY! it is this prefix!
                      02573         ;; temp has the prefix number.
                      02574         ;; EEPFL - temp2 is the index of the first byte after the prefix.
0621   082A           02575         movf    temp2,w         ; get temp2 value.
0622   3C08           02576         sublw   EEPFL           ; w = EEPFL - w
0623   02AF           02577         subwf   cmdSize,f       ; get corrected cmdSize
                      02578         ;; cmdSize has the number of bytes left in the command.
                      02579         PAGE1                   ; select code page 1.
0624   158A               M         bsf     PCLATH,3
0625   120A               M         bcf     PCLATH,4
0626   2000           02580         call    LCmd            ; process the locked command
                      02581         PAGE0                   ; select code page 0.
0627   118A               M         bcf     PCLATH,3
0628   120A               M         bcf     PCLATH,4
0629   2E30           02582         goto    DTEdone         ; done evaluating.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02583         
062A                  02584 DTEvalU                         ; evaluate unlocked DTMF command.
                      02585         PAGE2                   ; select code page 2.
062A   118A               M         bcf     PCLATH,3
062B   160A               M         bsf     PCLATH,4
062C   2000           02586         call    UlCmd           ; evaluate the unlocked command.
                      02587         PAGE0                   ; select code page 0.
062D   118A               M         bcf     PCLATH,3
062E   120A               M         bcf     PCLATH,4
062F   2E30           02588         goto    DTEdone         ; done evaluating.
                      02589 
0630                  02590 DTEdone                         ; done evaluating DTMF commands.
0630   01F5           02591         clrf    dtEFlag         ; yes.  reset evaluate DTMF flags.
0631   1274           02592         bcf     dtRFlag,DTSEVAL ; done evaluating.
0632   11F4           02593         bcf     dtRFlag,DTUL    ; so we don't care about unlocked anymore.
                      02594         
0633                  02595 LoopEnd
0633   1BB1           02596         btfsc   mscFlag,SC_RDY  ; is serial command ready?
0634   2658           02597         call    SCProc          ; yes. Process Serial Command.
                      02598 
0635                  02599 FanCtl
                      02600         ;; fan/control output control.
0635   1ACF           02601         btfsc   group2,5        ; is fan control enabled?
0636   2E3B           02602         goto    LoopE1          ; yes.
0637   1B4F           02603         btfsc   group2,6        ; is digital output on?
0638   1406           02604         bsf     PORTB,FANCTL    ; yes, turn on control output.
0639   1F4F           02605         btfss   group2,6        ; is digital output off?
063A   1006           02606         bcf     PORTB,FANCTL    ; yes, turn off control output.
063B                  02607 LoopE1
063B   2A85           02608         goto    Loop0
                      02609 
                      02610 ; *************
                      02611 ; ** CpyDTMF **
                      02612 ; *************
                      02613         ;; copy a DTMF command from the DTMF receive buffer
                      02614         ;; pointed at by FSR into the DTMF command interpreter buffer.
                      02615         ;; terminate the DTMF command interpreter buffer with FF.
063C                  02616 CpyDTMF                         ; copy DTMF from cmd buffer to xmit buffer
063C   1630           02617         bsf     flags,CMD_NIB   ; start with high nibble of DTMF buffer.
063D   0804           02618         movf    FSR,w           ; get FSR
063E   00A9           02619         movwf   temp            ; preserve this
063F   30A0           02620         movlw   low cmdbf00     ; get address of command buffer
0640   00AB           02621         movwf   temp3           ; set buffer pointer
0641                  02622 CpyDtLp
0641   0829           02623         movf    temp,w          ; get address of RX byte
0642   0084           02624         movwf   FSR             ; set rx buffer pointer
0643   0800           02625         movf    INDF,w          ; get byte
0644   00AA           02626         movwf   temp2           ; save byte
0645   082B           02627         movf    temp3,w         ; get xmit buffer address pointer
0646   0084           02628         movwf   FSR             ; set pointer
0647   1E30           02629         btfss   flags,CMD_NIB   ; is high nibble next victim
0648   2E4C           02630         goto    CpyDLow         ; low nibble is victim
0649   0E2A           02631         swapf   temp2,w         ; get high nibble
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064A   1230           02632         bcf     flags,CMD_NIB   ; select low nibble next
064B   2E4F           02633         goto    CpyDBth         ; keep copying...
064C                  02634 CpyDLow
064C   1630           02635         bsf     flags,CMD_NIB   ; high nibble is next
064D   0AA9           02636         incf    temp,f          ; increment DTMF rx address
064E   082A           02637         movf    temp2,w         ; get low nibble
064F                  02638 CpyDBth
064F   390F           02639         andlw   b'00001111'     ; mask low nibble
0650   0080           02640         movwf   INDF            ; save digit
0651   0AAB           02641         incf    temp3,f         ; increment pointer (for next time)
0652   0BAF           02642         decfsz  cmdSize,f       ; decrement cmdSize
0653   2E41           02643         goto    CpyDtLp         ; not zero yet...
0654   0A84           02644         incf    FSR,f           ; zero, write the FF at the end
0655   30FF           02645         movlw   h'ff'           ; end of DTMF message
0656   0080           02646         movwf   INDF            ; mark end of DTMF
0657   0008           02647         return                  ;
                      02648 
                      02649 
                      02650         
                      02651 ; ************
                      02652 ; ** SCProc **
                      02653 ; ************
                      02654         ;; process a serial command.
0658                  02655 SCProc                          ; process serial command
0658   01AA           02656         clrf    temp2           ; clear checksum.
0659   30C0           02657         movlw   rxBuf00         ; get address of receive buffer.
065A   0084           02658         movwf   FSR             ; set pointer.
065B   1383           02659         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
065C   0800           02660         movf    INDF,w          ; get byte from buffer
065D   07AA           02661         addwf   temp2,f         ; add to checksum.
065E   3A52           02662         xorlw   SCREAD          ; compare to read character.
065F   1903           02663         btfsc   STATUS,Z        ; is result zero?
0660   2E91           02664         goto    SCRead          ; yes.
0661   0800           02665         movf    INDF,w          ; get byte from buffer
0662   3A57           02666         xorlw   SCWRITE         ; compare to read character.
0663   1D03           02667         btfss   STATUS,Z        ; is result zero?
0664   2EB5           02668         goto    SCEnd           ; no.
                      02669 
0665                  02670 SCWrite                         ; write data into EEPROM
0665   26B8           02671         call    CIVGetB         ; get a byte value from 2 chars in buffer
0666   00CB           02672         movwf   eeAddr          ; save the address.
                      02673 
0667   3008           02674         movlw   h'8'            ; transfer size
0668   00CC           02675         movwf   eeCount         ; save number of bytes to write.
0669   00AE           02676         movwf   temp6           ; save to counter.
                      02677 
066A   3030           02678         movlw   low eebuf00     ; get address of eeprom write buffer.
066B   00AD           02679         movwf   temp5           ; save it.
                      02680 
066C                  02681 SCWLoop
066C   26B8           02682         call    CIVGetB         ; get byte from CI-V.
066D   26E5           02683         call    CIVPutB         ; save the byte.
066E   0BAE           02684         decfsz  temp6,f         ; decrement byte counter.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

066F   2E6C           02685         goto    SCWLoop         ; loop some more.
0670   082A           02686         movf    temp2,w         ; get checksum.
0671   00AC           02687         movwf   temp4           ; save in temp4...
                      02688 
0672   26B8           02689         call    CIVGetB         ; get checksum byte.
0673   022C           02690         subwf   temp4,w         ; compare checksum byte to calculated.
0674   1D03           02691         btfss   STATUS,Z        ; is the checksum good?
0675   2E88           02692         goto    SCSNAK          ; nope.
                      02693 
0676   1783           02694         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
                      02695 
0677   3030           02696         movlw   low eebuf00     ; get base of buffer.
0678   0084           02697         movwf   FSR             ; set into FSR.
                      02698         PAGE3                   ; select code page 3.
0679   158A               M         bsf     PCLATH,3
067A   160A               M         bsf     PCLATH,4
067B   20BA           02699         call    WriteEE         ; save the data into the EEPROM.
                      02700         PAGE0                   ; select code page 0.
067C   118A               M         bcf     PCLATH,3
067D   120A               M         bcf     PCLATH,4
                      02701 
067E   1383           02702         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
067F   304B           02703         movlw   SCACK           ; ACK message
0680   26F1           02704         call    SerOut          ; send it.
0681   300D           02705         movlw   SCCR            ; <CR>
0682   26F1           02706         call    SerOut          ; send it.
0683   300A           02707         movlw   SCLF            ; <LF>
0684   26F1           02708         call    SerOut          ; send it.
0685   1783           02709         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
0686   13B1           02710         bcf     mscFlag,SC_RDY  ; clear serial data ready flag.
0687   0008           02711         return                  ; done.
                      02712         
0688                  02713 SCSNAK                          ; send NAK message.
0688   304E           02714         movlw   SCNAK           ; NAK message
0689   26F1           02715         call    SerOut          ; send it.
068A   300D           02716         movlw   SCCR            ; <CR>
068B   26F1           02717         call    SerOut          ; send it.
068C   300A           02718         movlw   SCLF            ; <LF>
068D   26F1           02719         call    SerOut          ; send it.
068E   1783           02720         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
068F   13B1           02721         bcf     mscFlag,SC_RDY  ; clear serial data ready flag.
0690   0008           02722         return                  ; done.
                      02723                 
0691                  02724 SCRead                          ; read EEPROM data...
0691   26B8           02725         call    CIVGetB         ; read the address.
0692   00CB           02726         movwf   eeAddr          ; save the address.
0693   0A84           02727         incf    FSR,F           ; move pointer.
0694   0800           02728         movf    INDF,w          ; get next byte
0695   3A0D           02729         xorlw   SCTERM          ; compare to command terminator
0696   1D03           02730         btfss   STATUS,Z        ; is it a zero?
0697   2EB5           02731         goto    SCEnd           ; nope.  not a valid command.
0698   0829           02732         movf    temp,w          ; get address back.
0699   3903           02733         andlw   h'03'           ; low 3 bits should all be zero.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

069A   1D03           02734         btfss   STATUS,Z        ; is result zero?
069B   2EB5           02735         goto    SCEnd           ; no.
                      02736         
069C   3008           02737         movlw   d'8'            ; number of bytes to transfer.
069D   00AB           02738         movwf   temp3           ; save counter.
069E   01AA           02739         clrf    temp2           ; clear checksum counter.
                      02740 
069F   303A           02741         movlw   SCATTN          ; get attention character.
06A0   26F1           02742         call    SerOut          ; send it.
06A1   3057           02743         movlw   SCWRITE         ; get WRITE command character.
06A2   07AA           02744         addwf   temp2,f         ; add to checksum.
06A3   26F1           02745         call    SerOut          ; send it.
                      02746 
06A4   0829           02747         movf    temp,w          ; get address back.
06A5   26CF           02748         call    SndByte         ; send the address byte.
                      02749 
06A6                  02750 SCReadL
                      02751         PAGE3                   ; select code page 3.
06A6   158A               M         bsf     PCLATH,3
06A7   160A               M         bsf     PCLATH,4
06A8   20AB           02752         call    ReadEEw         ; read EEPROM.
                      02753         PAGE0                   ; select code page 0.
06A9   118A               M         bcf     PCLATH,3
06AA   120A               M         bcf     PCLATH,4
                      02754 
06AB   26CF           02755         call    SndByte         ; send it.
06AC   0ACB           02756         incf    eeAddr,f        ; move to next eeprom address.
06AD   0BAB           02757         decfsz  temp3,f         ; decrement counter.
06AE   2EA6           02758         goto    SCReadL         ; loop around.
                      02759 
06AF   082A           02760         movf    temp2,w         ; get checksum.
06B0   26CF           02761         call    SndByte         ; send checksum.
                      02762 
06B1   300D           02763         movlw   h'0d'           ; <CR>
06B2   26F1           02764         call    SerOut          ; send it
06B3   300A           02765         movlw   h'0a'           ; <LF>
06B4   26F1           02766         call    SerOut          ; send it
                      02767         ;; fall through to SCEnd.
                      02768 
06B5                  02769 SCEnd                           ; done looking at serial command.
06B5   1783           02770         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
06B6   13B1           02771         bcf     mscFlag,SC_RDY  ; clear serial data ready flag.
06B7   0008           02772         return
                      02773 
                      02774 ; *************
                      02775 ; ** CIVGetB **
                      02776 ; *************
06B8                  02777 CIVGetB                         ; get byte from 2 nibbles in CIV buffer.
                      02778         ;; modifies checksum in temp2
                      02779         ;; uses temp.  returns with result in temp and in W.
06B8   0A84           02780         incf    FSR,f           ; move to next byte.
06B9   0800           02781         movf    INDF,w          ; get byte.
06BA   07AA           02782         addwf   temp2,f         ; add to checksum.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06BB   26C5           02783         call    DeHex           ; convert from printable.
06BC   00A9           02784         movwf   temp            ; save hi nibble.
06BD   0EA9           02785         swapf   temp,f          ; swap bytes.
                      02786         
06BE   0A84           02787         incf    FSR,f           ; move to next byte.
06BF   0800           02788         movf    INDF,w          ; get byte.
06C0   07AA           02789         addwf   temp2,f         ; add to checksum
06C1   26C5           02790         call    DeHex           ; convert from printable
06C2   04A9           02791         iorwf   temp,f          ; save lo nibble.
06C3   0829           02792         movf    temp,w          ; put into w for convenience.
06C4   0008           02793         return                  ; done.
                      02794 
                      02795 ; ***********
                      02796 ; ** DeHex **
                      02797 ; ***********
06C5                  02798 DeHex                           ; convert from printable to actual
06C5   397F           02799         andlw   h'7f'           ; make semi-reasonable.
06C6   00AB           02800         movwf   temp3           ; save.
06C7   1B2B           02801         btfsc   temp3,6         ; is it a letter?
06C8   2ECB           02802         goto    DeHexL          ; yes.
06C9   390F           02803         andlw   h'0f'           ; not a letter.
06CA   0008           02804         return                  ; done
06CB                  02805 DeHexL                          ; it is a letter.
06CB   3907           02806         andlw   h'07'           ; mask.
06CC   3E09           02807         addlw   h'09'           ; add.
06CD   390F           02808         andlw   h'0f'           ; mask to valid.
06CE   0008           02809         return
                      02810 
                      02811 ; *************
                      02812 ; ** SndByte **
                      02813 ; *************
06CF                  02814 SndByte                         ; send byte in w as 2 hex digits.
06CF   00A9           02815         movwf   temp            ; save it.
06D0   0E29           02816         swapf   temp,w          ; swap nibbles.
06D1   390F           02817         andlw   h'0f'           ; mask.
06D2   26DB           02818         call    GetHex          ; get hex digit.
06D3   07AA           02819         addwf   temp2,f         ; add to checksum.
06D4   26F1           02820         call    SerOut          ; send it.
06D5   0829           02821         movf    temp,w          ; get back byte.
06D6   390F           02822         andlw   h'0f'           ; mask.
06D7   26DB           02823         call    GetHex          ; get hex digit. 
06D8   07AA           02824         addwf   temp2,f         ; add to checksum.
06D9   26F1           02825         call    SerOut          ; send it.
06DA   0008           02826         return                  ; done.
                      02827 
                      02828 ; ************
                      02829 ; ** GetHex **
                      02830 ; ************
06DB                  02831 GetHex                          ; get a hex digit for a number in w.
06DB   00AC           02832         movwf   temp4           ; save it.
06DC   3C09           02833         sublw   d'9'            ; w = 9 - w.
06DD   1C03           02834         btfss   STATUS,C        ; is result negative?
06DE   2EE2           02835         goto    GetHex1         ; yes
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06DF   082C           02836         movf    temp4,w         ; get number back.
06E0   3E30           02837         addlw   h'30'           ; make into printable digit.
06E1   0008           02838         return                  ; done.
06E2                  02839 GetHex1
06E2   082C           02840         movf    temp4,w         ; get number back.
06E3   3E37           02841         addlw   d'55'           ; make into printable digit.
06E4   0008           02842         return                  ; done.
                      02843 
                      02844                 
                      02845 ; *************
                      02846 ; ** CIVPutB **
                      02847 ; *************
06E5                  02848 CIVPutB                         ; put byte in temp into the EEPROM write buffer.
06E5   0804           02849         movf    FSR,w           ; get FSR for CI-V receive buffer.
06E6   00AC           02850         movwf   temp4           ; save CIV RX buffer FSR.
06E7   1783           02851         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
06E8   082D           02852         movf    temp5,w         ; get FSR for EEPROM write buffer.
06E9   0084           02853         movwf   FSR             ; set FSR.
06EA   0829           02854         movf    temp,w          ; get data byte.
06EB   0080           02855         movwf   INDF            ; save data byte to EEPROM write buffer.
06EC   0AAD           02856         incf    temp5,f         ; increment EEPROM write buffer address.
06ED   1383           02857         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
06EE   082C           02858         movf    temp4,w         ; get back old FSR
06EF   0084           02859         movwf   FSR             ; restore old FSR
06F0   0008           02860         return                  ; done.
                      02861 
                      02862 ; ************
                      02863 ; ** SerOut **
                      02864 ; ************
06F1                  02865 SerOut                          ; send the character in w out the serial port.
                      02866         ;; uses temp5, temp6
                      02867         ;; first, disable interrupts.
06F1   138B           02868         bcf     INTCON,GIE      ; disable interrupts
06F2   1B8B           02869         btfsc   INTCON,GIE      ; test interrupts still enabled?
06F3   2EF1           02870         goto    SerOut          ; still enabled, retry disable.
                      02871         ;; next put the character into the buffer.
06F4   00AD           02872         movwf   temp5           ; save character.
06F5   0804           02873         movf    FSR,w           ; get old FSR.
06F6   00AE           02874         movwf   temp6           ; save old FSR.
06F7   0A78           02875         incf    txHead,w        ; get pointer + 1.
06F8   391F           02876         andlw   h'1f'           ; mask so result stays in 0-31 range.
06F9   00F8           02877         movwf   txHead          ; save it...
06FA   3EA0           02878         addlw   LOW txBuf00     ; add to buffer base address.
06FB   0084           02879         movwf   FSR             ; set FSR as pointer
06FC   082D           02880         movf    temp5,w         ; get word back
06FD   1383           02881         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
06FE   0080           02882         movwf   INDF            ; save byte into buffer
06FF   1783           02883         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
0700   082E           02884         movf    temp6,w         ; get back old FSR
0701   0084           02885         movwf   FSR             ; restore old FSR
                      02886         ;; then, turn on the serial port transmitter.
0702   1683           02887         bsf     STATUS,RP0      ; select bank 1
0703   160C           02888         bsf     PIE1,TXIE       ; turn off the transmitter interrupt.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0704   1283           02889         bcf     STATUS,RP0      ; select bank 0
                      02890         ;; last, turn interrupts back on so character gets sent.
0705   178B           02891         bsf     INTCON,GIE      ; turn interrupts on.
0706   0008           02892         return
                      02893         
                      02894 ; ************
                      02895 ; ** NewPlay **
                      02896 ; ************
0707                  02897 NewPlay 
0707   3840           02898         iorlw   ICMDPL          ; or in play command.
0708   00AC           02899         movwf   temp4           ; save this
0709   3025           02900         movlw   IDLY50          ; 50 ms delay
070A   270F           02901         call    QISDCmd         ; enqueue the delay command.
070B   082C           02902         movf    temp4,w         ; get temp back
070C   270F           02903         call    QISDCmd         ; enqueue the play command.
070D   16B2           02904         bsf     txFlag,TALKING  ; set talking state
070E   0008           02905         return
                      02906 
                      02907 ; *************
                      02908 ; ** QISDCmd **
                      02909 ; *************
070F                  02910 QISDCmd                         ; enqueue isd command from W
070F   00AD           02911         movwf   temp5           ; save character.
0710   3A01           02912         xorlw   ICMDST          ; compare with STOP command
0711   1D03           02913         btfss   STATUS,Z        ; it result zero?
0712   2F18           02914         goto    QISDC2          ; no.
                      02915         ;; this is a special case for the STOP command.
                      02916         ;; never mind waiting for an interrupt or time delay. just stop.
0713   01D5           02917         clrf    isdDly          ; clear the delay timer
0714   10E1           02918         bcf     ismpcf,ISMWINT  ; turn off wait for interrupt flag
0715   1061           02919         bcf     ismpcf,ISMWAIT  ; turn off wait for delay timer flag
                      02920         ;; empty the queue by resetting the head and tail indices
0716   01FC           02921         clrf    isdcbh          ; reset tail to zero
0717   01FD           02922         clrf    isdcbt          ; reset head to zero
0718                  02923 QISDC2
0718   0804           02924         movf    FSR,w           ; get old FSR.
0719   00AE           02925         movwf   temp6           ; save old FSR.
071A   0A7C           02926         incf    isdcbh,w        ; get head pointer + 1.
071B   3907           02927         andlw   h'07'           ; mask so result stays in 0-7 range.
071C   00FC           02928         movwf   isdcbh          ; save it...
071D   3EE0           02929         addlw   LOW isdcb00     ; add to buffer base address.
071E   0084           02930         movwf   FSR             ; set FSR as pointer
071F   082D           02931         movf    temp5,w         ; get word back
0720   1383           02932         bcf     STATUS,IRP      ; select 00-FF range for FSR/INDF
0721   0080           02933         movwf   INDF            ; save byte into buffer
0722   1783           02934         bsf     STATUS,IRP      ; select 100-1FF range for FSR/INDF
0723   082E           02935         movf    temp6,w         ; get back old FSR
0724   0084           02936         movwf   FSR             ; restore old FSR
0725   0008           02937         return
                      02938 
                      02939         
                      02940 ; ************************************************************************
                      02941 ; ****************************** ROM PAGE 1 ******************************
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02942 ; ************************************************************************
0800                  02943         org     0800            ; page 1
                      02944 
0800                  02945 LCmd
0800   3008           02946         movlw   high LTable     ; set high byte of address
0801   008A           02947         movwf   PCLATH          ; select page
0802   0829           02948         movf    temp,w          ; get prefix index number.
0803   3907           02949         andlw   h'07'           ; restrict to reasonable range
0804   0782           02950         addwf   PCL,f           ; add w to PCL
                      02951 
0805                  02952 LTable                          ; jump table for locked commands.
0805   280D           02953         goto    LCmd0           ; prefix 00 -- control operator
0806   2833           02954         goto    LCmd1           ; prefix 01 -- DTMF access
0807   284A           02955         goto    LCmd2           ; prefix 02 -- digital output control
0808   285C           02956         goto    LCmd3           ; prefix 03 -- load saved setup
0809   2869           02957         goto    LCmd4           ; prefix 04 -- audio test -- NHRC-3.1 only
080A   286A           02958         goto    LCmd5           ; prefix 05 -- reset alarm -- NHRC-3.1 only
080B   286B           02959         goto    LCmd6           ; prefix 06 -- reserved
080C   286C           02960         goto    LCmd7           ; prefix 07 -- unlock
                      02961 
                      02962 ; ***********
                      02963 ; ** LCmd0 **
                      02964 ; ***********
080D                  02965 LCmd0                           ; control operator switches
080D   1FCD           02966         btfss   group0,7        ; CTCSS required?
080E   2811           02967         goto    LCmd0x          ; no.
080F   1F31           02968         btfss   mscFlag,CTCSS0  ; was CTCSS on?
0810   0008           02969         return                  ; do nothing quietly.
                      02970 
0811                  02971 LCmd0x                          ; actually do it.
0811   3002           02972         movlw   d'2'            ; minimum command length
0812   022F           02973         subwf   cmdSize,w       ; w = cmdSize - w
0813   1C03           02974         btfss   STATUS,C        ; skip if result is non-negative (cmdsize >= 2)
0814   0008           02975         return                  ; not enough command digits. fail quietly.
0815   082F           02976         movf    cmdSize,w       ; get command size
0816   3C03           02977         sublw   d'3'            ; get max command length
0817   1C03           02978         btfss   STATUS,C        ; skip if result is non-negative (cmdSize <= 3)
0818   0008           02979         return                  ; too many command digits. Fail quietly.
                      02980 
0819   0800           02981         movf    INDF,w          ; get Group byte
081A   00AA           02982         movwf   temp2           ; save group byte.
081B   3C05           02983         sublw   d'5'            ; w = 7-w.
081C   1C03           02984         btfss   STATUS,C        ; skip if w is not negative
081D   0008           02985         return                  ; bad, bad user tried to enter invalid group.
                      02986         ;; check access to change that group.
081E   082A           02987         movf    temp2,w         ; get group number 0-7.
                      02988         PAGE3
081F   158A               M         bsf     PCLATH,3
0820   160A               M         bsf     PCLATH,4
0821   2600           02989         call    GetMask         ; get bitmask for that group.
                      02990         PAGE1
0822   158A               M         bsf     PCLATH,3
0823   120A               M         bcf     PCLATH,4
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02991         ;; now have bit representing group number in w.
0824   0554           02992         andwf   group7,w        ; and with enabled groups mask.
0825   1903           02993         btfsc   STATUS,Z        ; zero if group is disabled.
0826   0008           02994         return                  ; quietly do nothing.
0827   0A84           02995         incf    FSR,f           ; move to next byte (bit #)
0828   03AF           02996         decf    cmdSize,f       ; decrement command size.
0829   0800           02997         movf    INDF,w          ; get Item byte (bit #)
082A   00A9           02998         movwf   temp            ; save it.
082B   0A84           02999         incf    FSR,f           ; move to next byte (state)
082C   03AF           03000         decf    cmdSize,f       ; decrement command size.
                      03001 
082D   3C07           03002         sublw   d'7'            ; w = 7-w.
082E   1C03           03003         btfss   STATUS,C        ; skip if w is not negative
082F   0008           03004         return                  ; bad, bad user tried to enter invalid item.
                      03005         PAGE2                   ; select code page 2.
0830   118A               M         bcf     PCLATH,3
0831   160A               M         bsf     PCLATH,4
0832   2848           03006         goto    CtlOpC          ; execute control op command
                      03007 
                      03008 ; ***********
                      03009 ; ** LCmd1 **
                      03010 ; ***********
0833                  03011 LCmd1                           ; DTMF access mode
0833   1ECD           03012         btfss   group0,5        ; check to see if DTMF access mode is enabled.
0834   0008           03013         return                  ; it's not.
0835   0B2F           03014         decfsz  cmdSize,w       ; check for one command digit.
0836   0008           03015         return                  ; not one command digit.
0837   0880           03016         movf    INDF,f          ; get command digit.
0838   1903           03017         btfsc   STATUS,Z        ; is it zero?
0839   2845           03018         goto    LCmd10          ; yes.
083A   0B00           03019         decfsz  INDF,w          ; check for one.
083B   0008           03020         return                  ; it's not one.
                      03021 
083C   3003           03022         movlw   EETDTA          ; get EEPROM address of DTMF access timer.
083D   00CB           03023         movwf   eeAddr          ; set EEPROM address low byte.
                      03024         PAGE3                   ; select code page 3.
083E   158A               M         bsf     PCLATH,3
083F   160A               M         bsf     PCLATH,4
0840   20AB           03025         call    ReadEEw         ; read EEPROM.
0841   00BF           03026         movwf   dtATmr          ; set DTMF access mode timer.
                      03027         PAGE1                   ; select code page 1.
0842   158A               M         bsf     PCLATH,3
0843   120A               M         bcf     PCLATH,4
0844   0008           03028         return
                      03029 
0845                  03030 LCmd10                          ; turn off DTMF access mode.
0845   08BF           03031         movf    dtATmr,f        ; check for zero.
0846   1903           03032         btfsc   STATUS,Z        ; is it zero.
0847   0008           03033         return                  ; it is zero, do nothing.
0848   01BF           03034         clrf    dtATmr          ; make it zero.
0849   0008           03035         return
                      03036 
                      03037 ; ***********
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03038 ; ** LCmd2 **
                      03039 ; ***********
084A                  03040 LCmd2
084A   082F           03041         movf    cmdSize,w       ; get command size
084B   1903           03042         btfsc   STATUS,Z        ; skip if not zero.
084C   0008           03043         return                  ; fail quietly.
084D   0800           03044         movf    INDF,w          ; get command digit.
084E   0A84           03045         incf    FSR,f           ; move to next byte (bit #)
084F   00AA           03046         movwf   temp2           ; save command digit.
0850   1903           03047         btfsc   STATUS,Z        ; skip if not zero.
0851   2875           03048         goto    LCmdErr         ; zero is not allowed.
0852   3C04           03049         sublw   d'4'            ; highest value.
0853   1C03           03050         btfss   STATUS,C        ; skip if result is non-negative.
0854   2875           03051         goto    LCmdErr         ; was bigger than 4.
0855   082A           03052         movf    temp2,w         ; get value back.
                      03053         ;addlw  d'3'            ; get bit number.
0856   00A9           03054         movwf   temp            ; temp now has actual bit number.
0857   3005           03055         movlw   d'5'            ; ctl op group of digital outputs.
0858   00AA           03056         movwf   temp2           ; save group # in temp 2.
                      03057         PAGE2                   ; select code page 2.
0859   118A               M         bcf     PCLATH,3
085A   160A               M         bsf     PCLATH,4
085B   2848           03058         goto    CtlOpC          ; execute control op command
                      03059                         
                      03060 ; ***********
                      03061 ; ** LCmd3 **
                      03062 ; ***********
085C                  03063 LCmd3                           ; load saved state.
085C   0B2F           03064         decfsz  cmdSize,w       ; is this 1?
085D   0008           03065         return                  ; nope.
085E   0800           03066         movf    INDF,w          ; get command digit.
085F   3C04           03067         sublw   EENSS           ; subtract 4
0860   1C03           03068         btfss   STATUS,C        ; was result negative?
0861   0008           03069         return                  ; yes.
0862   0800           03070         movf    INDF,w          ; get command digit.
                      03071         PAGE3                   ; select page 3.
0863   158A               M         bsf     PCLATH,3
0864   160A               M         bsf     PCLATH,4
0865   20E0           03072         call    LoadCtl         ; load control op settings.
                      03073         PAGE1                   ; select code page 1.
0866   158A               M         bsf     PCLATH,3
0867   120A               M         bcf     PCLATH,4
0868   287C           03074         goto    LCmdOK
                      03075 
                      03076 ; ***********
                      03077 ; ** LCmd4 **
                      03078 ; ***********
0869                  03079 LCmd4                           ; audio test
                      03080         IFDEF NHRC3_1
                      03081         bsf     isdFlag,ISDTEST ; set the ISDTEST bit
                      03082         movlw   VTEST           ; get test message number.
                      03083         movwf   isdRMsg         ; save message number.
                      03084 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03085         PAGE0                   ; select code page 3
                      03086         iorlw   ICMDDEL         ; make into erase command
                      03087         call    QISDCmd         ; enqueue the erase command.
                      03088         PAGE1                   ; select code page 2
                      03089         
                      03090         bsf     isdFlag,ISDRECR ; set record mode flag
                      03091         goto    LCmdOK          ; send the OK message
                      03092         ELSE
0869   0008           03093         return                  ; do nothing
                      03094         ENDIF
                      03095 
                      03096 ; ***********
                      03097 ; ** LCmd5 **
                      03098 ; ***********
086A                  03099 LCmd5                           ; reset alarm -- NHRC-3.1 only
                      03100         IFDEF NHRC3_1
                      03101         bcf     mscFlag,ALARMED ; reset alarmed flag
                      03102         clrf    alrmTmr         ; clear alarm announcement timer
                      03103         goto    LCmdOK
                      03104         ELSE
086A   0008           03105         return                  ; do nothing
                      03106         ENDIF
                      03107 
                      03108 ; ***********
                      03109 ; ** LCmd6 **
                      03110 ; ***********
086B                  03111 LCmd6                           ; Not Implemented
086B   0008           03112         return                  ; do nothing.
                      03113 
                      03114 ; ***********
                      03115 ; ** LCmd7 **
                      03116 ; ***********
086C                  03117 LCmd7                           ; unlock
086C   0875           03118         movf    dtEFlag,w       ; get eval flags
086D   39E0           03119         andlw   b'11100000'     ; mask all except command source indicators.
086E   04F4           03120         iorwf   dtRFlag,f       ; IOR with dtRFlag: set unlocked bit.
086F   3078           03121         movlw   UNLKDLY         ; get unlocked mode timer.
0870   00C2           03122         movwf   unlkTmr         ; set unlocked mode timer.
0871   3007           03123         movlw   CTUNLOK         ; get unlocked mode courtesy tone.
0872   00CA           03124         movwf   cTone           ; yep. set unlocked courtesy tone.
0873   287C           03125         goto    LCmdOK          ; send OK.
0874   0008           03126         return                  ; do nothing.
                      03127 
                      03128 ; *************
                      03129 ; ** LCmdErr **
                      03130 ; *************
0875                  03131 LCmdErr
                      03132         PAGE3                   ; select code page 3.
0875   158A               M         bsf     PCLATH,3
0876   160A               M         bsf     PCLATH,4
0877   3003           03133         movlw   CW_ERR          ; get CW ERR
0878   2000           03134         call    PlayCW          ; start playback
                      03135         PAGE1                   ; select code page 1.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0879   158A               M         bsf     PCLATH,3
087A   120A               M         bcf     PCLATH,4
087B   0008           03136         return
                      03137 
                      03138 ; ************
                      03139 ; ** LCmdOK **
                      03140 ; ************
087C                  03141 LCmdOK
                      03142         PAGE3                   ; select code page 3.
087C   158A               M         bsf     PCLATH,3
087D   160A               M         bsf     PCLATH,4
087E   3000           03143         movlw   CW_OK           ; get CW OK
087F   2000           03144         call    PlayCW          ; start playback
                      03145         PAGE1                   ; select code page 1.
0880   158A               M         bsf     PCLATH,3
0881   120A               M         bcf     PCLATH,4
0882   0008           03146         return
                      03147 
                      03148 ; ************************************************************************
                      03149 ; ****************************** ROM PAGE 2 ******************************
                      03150 ; ************************************************************************
1000                  03151         org     1000            ; page 2
                      03152         
                      03153 ; ***********
                      03154 ; ** UlCmd **
                      03155 ; ***********
1000                  03156 UlCmd                           ; process an Unlocked Command!
1000   3078           03157         movlw   UNLKDLY         ; get unlocked mode timeout time.
1001   00C2           03158         movwf   unlkTmr         ; set unlocked mode timer.
1002   3007           03159         movlw   CTUNLOK         ; get the unlocked courtesy tone.
1003   00CA           03160         movwf   cTone           ; save the courtesy tone.
1004   30A0           03161         movlw   low cmdbf00     ; get command buffer address
1005   0084           03162         movwf   FSR             ; set pointer
1006   0800           03163         movf    INDF,w          ; get cmd byte
1007   3C0E           03164         sublw   h'0e'           ; subtract e (* key)
1008   1903           03165         btfsc   STATUS,Z        ; is result zero? (* is first tone)
1009   2817           03166         goto    UlStar          ; yes.
                      03167 
100A   0800           03168         movf    INDF,w          ; get cmd byte
100B   3C0F           03169         sublw   h'0f'           ; subtract f (# key)
100C   1D03           03170         btfss   STATUS,Z        ; is result zero? (# is first tone)
100D   29D8           03171         goto    UlCmdNG         ; nope.
                      03172         ;; lock command.
100E   0875           03173         movf    dtEFlag,w       ; get eval flags
100F   39E0           03174         andlw   b'11100000'     ; mask all except command source indicators.
1010   3AFF           03175         xorlw   b'11111111'     ; invert bitmask
1011   05F4           03176         andwf   dtRFlag,f       ; and with dtRFlag: clear unlocked bit.
1012   01C2           03177         clrf    unlkTmr         ; reset unlocked mode timer.
1013   30FF           03178         movlw   CTNONE          ; select no courtesy tone.
1014   00CA           03179         movwf   cTone           ; set courtesy tone.
1015   29D4           03180         goto    UlCmdOK         ; play OK message.
1016   0008           03181         return                  ; done.
                      03182         
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1017                  03183 UlStar                          ; process '*' command.
1017   0A84           03184         incf    FSR,f           ; increment cmd pointer
1018   0800           03185         movf    INDF,w          ; 2nd byte
1019   00A9           03186         movwf   temp            ; save it.
101A   0A84           03187         incf    FSR,f           ; increment cmd pointer
101B   03AF           03188         decf    cmdSize,f       ; decrement command size
101C   03AF           03189         decf    cmdSize,f       ; decrement command size again (-2) 
101D   3010           03190         movlw   high ULTable    ; set high byte of address
101E   008A           03191         movwf   PCLATH          ; select page
101F   0829           03192         movf    temp,w          ; get command byte.
1020   390F           03193         andlw   h'0f'           ; restrict to reasonable range
1021   0782           03194         addwf   PCL,f           ; add w to PCL
                      03195         ;; jump table goes here...
1022                  03196 ULTable
1022   2832           03197         goto    UlCmd0          ; command *0 -- control op group
1023   28AD           03198         goto    UlCmd1          ; command *1 -- save setup
1024   28C7           03199         goto    UlCmd2          ; command *2 -- program prefixes
1025   28FC           03200         goto    UlCmd3          ; command *3 -- program timers
1026   292B           03201         goto    UlCmd4          ; command *4 -- patch setup
1027   292C           03202         goto    UlCmd5          ; command *5 -- autodial setup
1028   292D           03203         goto    UlCmd6          ; command *6 -- user commands setup
1029   292E           03204         goto    UlCmd7          ; command *7 -- program/play CW/Tones
102A   29A7           03205         goto    UlCmd8          ; command *8 -- play/record voice message
102B   29D1           03206         goto    UlCmd9          ; command *9 -- reserved (program ee byte)
102C   29D1           03207         goto    UlCmdA          ; command *a -- invalid command
102D   29D1           03208         goto    UlCmdB          ; command *b -- invalid command
102E   29D1           03209         goto    UlCmdC          ; command *c -- invalid command
102F   29D1           03210         goto    UlCmdD          ; command *d -- invalid command
1030   29D2           03211         goto    UlCmdE          ; command *e -- crash and burn
1031   29D3           03212         goto    UlCmdF          ; command *f -- invalid command
                      03213 
                      03214 ; ************
                      03215 ; ** UlCmd0 **
                      03216 ; ************
                      03217         ;; set a control operator Group/Item to a specified state.
1032                  03218 UlCmd0                          ; Control Op Group command
1032   3002           03219         movlw   d'2'            ; minimum command length
1033   022F           03220         subwf   cmdSize,w       ; w = cmdSize - w
1034   1C03           03221         btfss   STATUS,C        ; skip if result is non-negative (cmdsize >= 2)
1035   29D8           03222         goto    UlCmdNG         ; not enough command digits.
1036   082F           03223         movf    cmdSize,w       ; get command size
1037   3C03           03224         sublw   d'3'            ; get max command length
1038   1C03           03225         btfss   STATUS,C        ; skip if result is non-negative (cmdSize <= 3)
1039   29D8           03226         goto    UlCmdNG         ; too many command digits.
                      03227 
103A   0800           03228         movf    INDF,w          ; get Group byte
103B   00AA           03229         movwf   temp2           ; save group byte.
103C   3C09           03230         sublw   d'9'            ; w = 9-w.
103D   1C03           03231         btfss   STATUS,C        ; skip if w is not negative
103E   29D8           03232         goto    UlCmdNG         ; bad, bad user tried to enter invalid group.
103F   0A84           03233         incf    FSR,f           ; move to next byte (bit #)
1040   03AF           03234         decf    cmdSize,f       ; decrement command size.
1041   0800           03235         movf    INDF,w          ; get Item byte (bit #)
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1042   00A9           03236         movwf   temp            ; save it.
1043   0A84           03237         incf    FSR,f           ; move to next byte (state)
1044   03AF           03238         decf    cmdSize,f       ; decrement command size.
                      03239 
1045   3C07           03240         sublw   d'7'            ; w = 7-w.
1046   1C03           03241         btfss   STATUS,C        ; skip if w is not negative
1047   29D8           03242         goto    UlCmdNG         ; bad, bad user tried to enter invalid item.
                      03243 
1048                  03244 CtlOpC
                      03245         PAGE3                   ; select page 3
1048   158A               M         bsf     PCLATH,3
1049   160A               M         bsf     PCLATH,4
104A   0829           03246         movf    temp,w          ; get Item byte
104B   2600           03247         call    GetMask         ; get bit mask for selected item
                      03248         PAGE2                   ; select page 2
104C   118A               M         bcf     PCLATH,3
104D   160A               M         bsf     PCLATH,4
104E   00A9           03249         movwf   temp            ; save mask
                      03250 
104F   08AF           03251         movf    cmdSize,f       ; test this for zero (inquiry)
1050   1903           03252         btfsc   STATUS,Z        ; skip if not 0.
1051   289C           03253         goto    UlCmd0I         ; it's an inquiry.
                      03254         
1052   0800           03255         movf    INDF,w          ; get state byte
1053   39FE           03256         andlw   b'11111110'     ; only 0 and 1 permitted.
1054   1D03           03257         btfss   STATUS,Z        ; should be zero of 0 or 1 entered
1055   29D8           03258         goto    UlCmdNG         ; not zero, bad command.
1056   0880           03259         movf    INDF,f          ; get state byte
1057   1D03           03260         btfss   STATUS,Z        ; skip if state is zero
1058   286D           03261         goto    UlCmd01         ; not zero, must be 1, go do the set.
                      03262         ;; clear a bit.
1059   304D           03263         movlw   low group0      ; get address of 1st group.
105A   0084           03264         movwf   FSR             ; set FSR to point there.
105B   082A           03265         movf    temp2,w         ; get group number
105C   0784           03266         addwf   FSR,f           ; add to address.
105D   1383           03267         bcf     STATUS,IRP      ; set indirect back to page 0
105E   0829           03268         movf    temp,w          ; get mask
105F   3AFF           03269         xorlw   h'ff'           ; invert mask to clear selected bit
1060   0580           03270         andwf   INDF,f          ; apply inverted mask
1061   1783           03271         bsf     STATUS,IRP      ; set indirect pointer into page 1
                      03272 
1062   082A           03273         movf    temp2,w         ; get index.
1063   3C05           03274         sublw   d'5'            ; check for group5
1064   1903           03275         btfsc   STATUS,Z        ; is it group5?
1065   2093           03276         call    SetDig          ; set the digital outputs.
                      03277                         
1066   300D           03278         movlw   CW_OFF          ; get CW OFF message
                      03279         PAGE3                   ; select code page 3.
1067   158A               M         bsf     PCLATH,3
1068   160A               M         bsf     PCLATH,4
1069   2000           03280         call    PlayCW          ; send the announcement.
                      03281         PAGE2                   ; select code page 2.
106A   118A               M         bcf     PCLATH,3
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

106B   160A               M         bsf     PCLATH,4
106C   0008           03282         return                  ; done.
                      03283 
106D                  03284 UlCmd01                         ; set a bit.
106D   304D           03285         movlw   low group0      ; get address of ist group.
106E   0084           03286         movwf   FSR             ; set FSR to point there.
106F   082A           03287         movf    temp2,w         ; get group number
1070   0784           03288         addwf   FSR,f           ; add to address.
1071   1383           03289         bcf     STATUS,IRP      ; set indirect back to page 0
1072   0829           03290         movf    temp,w          ; get mask
1073   0480           03291         iorwf   INDF,f          ; or byte with mask.
1074   1783           03292         bsf     STATUS,IRP      ; set indirect pointer into page 1
                      03293 
1075   082A           03294         movf    temp2,w         ; get index.
1076   3C05           03295         sublw   d'5'            ; check for group5
1077   1D03           03296         btfss   STATUS,Z        ; is it group5?
1078   2881           03297         goto    UlCm0ND         ; no.
1079   2093           03298         call    SetDig          ; set the digital outputs.
107A   0852           03299         movf    group5,w        ; get group 5.
107B   0551           03300         andwf   group4,w        ; and with pulsed flags.
107C   3903           03301         andlw   b'00000011'     ; mask only valid outputs.
107D   1903           03302         btfsc   STATUS,Z        ; is result non-zero?
107E   2882           03303         goto    UlCm011         ; no.
107F   3032           03304         movlw   PULS_TM         ; get pulsed output timer.
1080   00C3           03305         movwf   pulsTmr         ; start pulsed output timer.
                      03306 
1081                  03307 UlCm0ND
1081   2089           03308         call    FixSMsg         ; clear simplex message if there
                      03309         
1082                  03310 UlCm011                 
1082   300A           03311         movlw   CW_ON           ; get CW ON message.
                      03312         PAGE3                   ; select code page 3.
1083   158A               M         bsf     PCLATH,3
1084   160A               M         bsf     PCLATH,4
1085   2000           03313         call    PlayCW          ; send the announcement.
                      03314         PAGE2                   ; select code page 2.
1086   118A               M         bcf     PCLATH,3
1087   160A               M         bsf     PCLATH,4
1088   0008           03315         return                  ; no.
                      03316 
1089                  03317 FixSMsg
1089   1F4E           03318         btfss   group1,6        ; in simplex mode?
108A   0008           03319         return
                      03320         ;; erase simplex message location.
                      03321         PAGE0                   ; select code page 3
108B   118A               M         bcf     PCLATH,3
108C   120A               M         bcf     PCLATH,4
108D   3001           03322         movlw   VSIMPLX         ; get simplex message
108E   3880           03323         iorlw   ICMDDEL         ; make into erase command
108F   270F           03324         call    QISDCmd         ; enqueue the erase command.
                      03325         PAGE2                   ; select code page 2
1090   118A               M         bcf     PCLATH,3
1091   160A               M         bsf     PCLATH,4
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1092   0008           03326         return
1093                  03327 SetDig                          ; set digital output pins.
1093   1C52           03328         btfss   group5,0        ; is OUT1 supposed to be on?
1094   1306           03329         bcf     PORTB,OUT1      ; no
1095   1852           03330         btfsc   group5,0        ; is OUT1 supposed to be off?
1096   1706           03331         bsf     PORTB,OUT1      ; no
1097   1CD2           03332         btfss   group5,1        ; is OUT2 supposed to be on?
1098   1386           03333         bcf     PORTB,OUT2      ; no
1099   18D2           03334         btfsc   group5,1        ; is OUT2 supposed to be off?
109A   1786           03335         bsf     PORTB,OUT2      ; no
109B   0008           03336         return                  ; done
                      03337         
109C                  03338 UlCmd0I                         ; inquiry mode.
109C   304D           03339         movlw   low group0      ; get address of ist group.
109D   0084           03340         movwf   FSR             ; set FSR to point there.
109E   082A           03341         movf    temp2,w         ; get group number
109F   0784           03342         addwf   FSR,f           ; add to address.
10A0   1383           03343         bcf     STATUS,IRP      ; set indirect back to page 0
10A1   0829           03344         movf    temp,w          ; get mask
10A2   0500           03345         andwf   INDF,w          ; and the mask (in temp) with the field.
10A3   1783           03346         bsf     STATUS,IRP      ; set indirect pointer into page 1
                      03347 
10A4   300A           03348         movlw   CW_ON           ; get CW ON message.
10A5   1903           03349         btfsc   STATUS,Z        ; was result (from and) zero?
10A6   300D           03350         movlw   CW_OFF          ; get CW OFF message.
                      03351         PAGE3                   ; select code page 3.
10A7   158A               M         bsf     PCLATH,3
10A8   160A               M         bsf     PCLATH,4
10A9   2000           03352         call    PlayCW          ; send the announcement.
                      03353         PAGE2                   ; select code page 2.
10AA   118A               M         bcf     PCLATH,3
10AB   160A               M         bsf     PCLATH,4
10AC   0008           03354         return                  ; done.
                      03355                 
                      03356 ; ************
                      03357 ; ** UlCmd1 **
                      03358 ; ************
                      03359         ;; save control operator Group/Item/States to a specified setup.
10AD                  03360 UlCmd1                          ; save setups
10AD   1853           03361         btfsc   group6,0        ; is control groups write protected?
10AE   29D8           03362         goto    UlCmdNG         ; yes.
10AF   082F           03363         movf    cmdSize,w       ; get command size
10B0   3C01           03364         sublw   d'1'            ; subtract expected size
10B1   1D03           03365         btfss   STATUS,Z        ; was it the expected size?
10B2   29D8           03366         goto    UlCmdNG         ; nope.
10B3   0800           03367         movf    INDF,w          ; get setup number
10B4   3C04           03368         sublw   EENSS           ; subtract largest expected
10B5   1C03           03369         btfss   STATUS,C        ; is result not negative?
10B6   29D8           03370         goto    UlCmdNG         ; nope.
10B7   3010           03371         movlw   EE0B            ; get low part of address
10B8   00CB           03372         movwf   eeAddr          ; save low part of address
10B9   0E00           03373         swapf   INDF,w          ; magic! get command * 16
10BA   07CB           03374         addwf   eeAddr,f        ; now have ee address for saved state.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10BB   3008           03375         movlw   EESSC           ; get the number of bytes to save
10BC   00CC           03376         movwf   eeCount         ; set the number of bytes to write.
10BD   304D           03377         movlw   group0          ; get address of first group
10BE   0084           03378         movwf   FSR             ; set pointer
10BF   1383           03379         bcf     STATUS,IRP      ; to page 0.
                      03380         PAGE3                   ; select code page 3.
10C0   158A               M         bsf     PCLATH,3
10C1   160A               M         bsf     PCLATH,4
10C2   20BA           03381         call    WriteEE         ; save this stuff.
                      03382         PAGE2                   ; select code page 2.
10C3   118A               M         bcf     PCLATH,3
10C4   160A               M         bsf     PCLATH,4
10C5   1783           03383         bsf     STATUS,IRP      ; back to page 1.
10C6   29D4           03384         goto    UlCmdOK         ; OK.
                      03385         
                      03386 ; ************
                      03387 ; ** UlCmd2 **
                      03388 ; ************
                      03389         ;; set command prefixes...  
10C7                  03390 UlCmd2                          ; program prefixes
10C7   18D3           03391         btfsc   group6,1        ; are prefixes write protected?
10C8   29D8           03392         goto    UlCmdNG         ; yes.
10C9   3003           03393         movlw   d'3'            ; minimum command length
10CA   022F           03394         subwf   cmdSize,w       ; w = cmdSize - w
10CB   1C03           03395         btfss   STATUS,C        ; skip if result is non-negative (cmdsize >= 3)
10CC   29D8           03396         goto    UlCmdNG         ; not enough command digits.
10CD   082F           03397         movf    cmdSize,w       ; get command size
10CE   3C09           03398         sublw   d'9'            ; get max command length
10CF   1C03           03399         btfss   STATUS,C        ; skip if result is non-negative (cmdSize <= 9)
10D0   29D8           03400         goto    UlCmdNG         ; too many command digits.
                      03401 
                      03402         PAGE3                   ; select page 3
10D1   158A               M         bsf     PCLATH,3
10D2   160A               M         bsf     PCLATH,4
10D3   2617           03403         call    GetTens         ; get index tens digit.
                      03404         PAGE2                   ; select page 2
10D4   118A               M         bcf     PCLATH,3
10D5   160A               M         bsf     PCLATH,4
10D6   00A9           03405         movwf   temp            ; save to prefix index in temp.
10D7   0A84           03406         incf    FSR,f           ; move pointer to next address.
10D8   03AF           03407         decf    cmdSize,f       ; decrment count of remaining bytes.
10D9   0800           03408         movf    INDF,w          ; get index ones digit.
10DA   07A9           03409         addwf   temp,f          ; add to prefix index in temp.
10DB   0829           03410         movf    temp,w          ; get prefix index
10DC   3C07           03411         sublw   MAXPFX          ; w = MAXPFX - pfxnum
10DD   1C03           03412         btfss   STATUS,C        ; skip if result is non-negative
10DE   29D8           03413         goto    UlCmdNG         ; argument error
10DF   03AF           03414         decf    cmdSize,f       ; less bytes to process
10E0   0A84           03415         incf    FSR,f           ; point at next byte.
                      03416 
10E1   0829           03417         movf    temp,w          ; get index back.
10E2   3C07           03418         sublw   MAXPFX          ; subtract index of unlock command.
10E3   1D03           03419         btfss   STATUS,Z        ; is result zero?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10E4   28EB           03420         goto    UlCmd2P         ; no.
                      03421 
                      03422         ;; set the MUTE pin to an input...
10E5   30FF           03423         movlw   B'11111111'     ; na/na/in/out/in/in/in/in
10E6   0085           03424         movwf   TRISA           ; set port A data direction
                      03425 
10E7   1A05           03426         btfsc   PORTA,INIT      ; skip if init button pressed.
10E8   29D6           03427         goto    UlCmdNGx        ; bad command.
                      03428 
                      03429         ;; reset the state of the MUTE pin to an output
10E9   30EF           03430         movlw   B'11101111'     ; na/na/in/out/in/in/in/in
10EA   0085           03431         movwf   TRISA           ; set port A data direction
                      03432         
10EB                  03433 UlCmd2P                         ; program the new prefix.
10EB   082F           03434         movf    cmdSize,w       ; get command length
10EC   00CC           03435         movwf   eeCount         ; save # bytes to write.
10ED   0ACC           03436         incf    eeCount,f       ; add 1 so FF at end of buffer gets copied.
10EE   30B0           03437         movlw   low EEPFB       ; get low address of prefixes
10EF   00CB           03438         movwf   eeAddr          ; set eeprom address to base of prefixes
10F0   1003           03439         bcf     STATUS,C        ; clear carry
10F1   0DA9           03440         rlf     temp,f          ; multiply prefix by 2
10F2   0DA9           03441         rlf     temp,f          ; multiply prefix by 2 (x4 after)
10F3   0DA9           03442         rlf     temp,f          ; multiply prefix by 2 (x8 after)
10F4   0829           03443         movf    temp,w          ; get prefix offset
10F5   07CB           03444         addwf   eeAddr,f        ; add prefix to base
                      03445         PAGE3                   ; select code page 3.
10F6   158A               M         bsf     PCLATH,3
10F7   160A               M         bsf     PCLATH,4
10F8   20BA           03446         call    WriteEE         ; write the prefix.
                      03447         PAGE2                   ; select code page 2.
10F9   118A               M         bcf     PCLATH,3
10FA   160A               M         bsf     PCLATH,4
10FB   29D4           03448         goto    UlCmdOK         ; good command...
                      03449         
                      03450 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      03451 ;  *3                                                                         ;
                      03452 ;  Set Timers                                                                 ;
                      03453 ;    *3<nn> inquire timer nn                                                  ;
                      03454 ;    *3<nn><time> set timer nn to time                                        ;
                      03455 ;      00 <= nn <= 11  timer index                                            ;
                      03456 ;      0 <= time <= 255 timer preset. 0=disable                               ;
                      03457 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10FC                  03458 UlCmd3                          ; program timers
10FC   3002           03459         movlw   d'2'            ; minimum command length
10FD   022F           03460         subwf   cmdSize,w       ; w = cmdSize - w
10FE   1C03           03461         btfss   STATUS,C        ; skip if result is non-negative (cmdsize >= 2)
10FF   29D8           03462         goto    UlCmdNG         ; not enough command digits.
                      03463 
                      03464         PAGE3                   ; select page 3
1100   158A               M         bsf     PCLATH,3
1101   160A               M         bsf     PCLATH,4
1102   2617           03465         call    GetTens         ; get timer index tens digit.
                      03466         PAGE2                   ; select page 2
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1103   118A               M         bcf     PCLATH,3
1104   160A               M         bsf     PCLATH,4
1105   00AA           03467         movwf   temp2           ; save
1106   0A84           03468         incf    FSR,f           ; move pointer to next address
1107   03AF           03469         decf    cmdSize,f       ; decrment count of remaining bytes.
1108   0800           03470         movf    INDF,w          ; get timer index ones digit
1109   07AA           03471         addwf   temp2,f         ; add to timer index
110A   0A84           03472         incf    FSR,f           ; move pointer to next address
110B   03AF           03473         decf    cmdSize,f       ; decrment count of remaining bytes.
110C   082A           03474         movf    temp2,w         ; get timer index sum
110D   3C0A           03475         sublw   LASTTMR         ; subtract last timer index
110E   1C03           03476         btfss   STATUS,C        ; skip if result is non-negative
110F   29D8           03477         goto    UlCmdNG         ; argument error
1110   082A           03478         movf    temp2,w         ; get timer index
1111   00CB           03479         movwf   eeAddr          ; set EEPROM address low byte
1112   08AF           03480         movf    cmdSize,f       ; check for no more digits.
1113   1903           03481         btfsc   STATUS,Z        ; skip if not zero.
1114   29D8           03482         goto    UlCmdNG         ; no more digits -- bad command.
                      03483         ;; ready to get value then set timer.
1115   1953           03484         btfsc   group6,2        ; are timers write protected?
1116   29D8           03485         goto    UlCmdNG         ; yes.
                      03486         PAGE3                   ; select page 3
1117   158A               M         bsf     PCLATH,3
1118   160A               M         bsf     PCLATH,4
1119   20F3           03487         call    GetDNum         ; get decimal number to w. nukes temp3,temp4
111A   00AC           03488         movwf   temp4           ; save decimal number to temp4.
111B   20C4           03489         call    WriteEw         ; write w into EEPROM.
                      03490         PAGE2                   ; select page 2
111C   118A               M         bcf     PCLATH,3
111D   160A               M         bsf     PCLATH,4
111E   084B           03491         movf    eeAddr,w        ; get low byte of address
111F   3C07           03492         sublw   EETTAIL         ; subtract tail counter address
1120   1D03           03493         btfss   STATUS,Z        ; skip if result is zero.
1121   2925           03494         goto    UlCmd3a         ; result is non-zero.
1122   3001           03495         movlw   d'1'            ; one.
1123   00C1           03496         movwf   tailCtr         ; get tail message on next tail drop.
1124   29D4           03497         goto    UlCmdOK         ; good command
1125                  03498 UlCmd3a
                      03499         PAGE3                   ; select code page 3
1125   158A               M         bsf     PCLATH,3
1126   160A               M         bsf     PCLATH,4
1127   26BE           03500         call    CWParms         ; get CW parameters.
                      03501         PAGE2                   ; select code page 2
1128   118A               M         bcf     PCLATH,3
1129   160A               M         bsf     PCLATH,4
112A   29D4           03502         goto    UlCmdOK         ; good command.
                      03503         
112B                  03504 UlCmd4                          ; reserved
112B   29D8           03505         goto    UlCmdNG         ; bad command...
                      03506         
112C                  03507 UlCmd5                          ; reserved
112C   29D8           03508         goto    UlCmdNG         ; bad command...
                      03509 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

112D                  03510 UlCmd6                          ; reserved
112D   29D8           03511         goto    UlCmdNG         ; bad command...
                      03512 
                      03513 ; *****************************************************************************
                      03514 ; **   *7                                                                    **
                      03515 ; **   Record/Play CW and Courtesy Tones                                     **
                      03516 ; **    *70 play CW ID                                                       **
                      03517 ; **    *70 <dd..dd..dd..> program cw message n with CW data in dd.dd.dd     **
                      03518 ; **                       see CW encoding table.                            **
                      03519 ; **                                                                         **
                      03520 ; **    *71<n> play courtesy tone n, 0 <= n <= 7 (n is in range 0 to 7)      **
                      03521 ; **    *71<n><ddtt,ddtt...> record courtesy tone n, 0 <= n <= 7             **
                      03522 ; **          dd is duration in 10 ms increments. 01 <= dd <=99              **
                      03523 ; **          tt is tone.  See tone table.  00 <= tt <= 63                   **
                      03524 ; *****************************************************************************
112E                  03525 UlCmd7
112E   08AF           03526         movf    cmdSize,f       ; check command size.
112F   1903           03527         btfsc   STATUS,Z        ; is it zero?
1130   29D8           03528         goto    UlCmdNG         ; not enough command digits.
1131   0880           03529         movf    INDF,f          ; check command digit for zero.
1132   1903           03530         btfsc   STATUS,Z        ; is it zero?
1133   297B           03531         goto    UlCmd70         ; yes.
1134   0B00           03532         decfsz  INDF,w          ; decrement and test.
1135   29D8           03533         goto    UlCmdNG         ; was not 1 either.
1136                  03534 UlCmd71                         ; Courtesy Tone Command.
1136   0A84           03535         incf    FSR,f           ; move to next byte.
1137   03AF           03536         decf    cmdSize,f       ; decrement commandSize.
1138   1903           03537         btfsc   STATUS,Z        ; is result zero?
1139   29D8           03538         goto    UlCmdNG         ; yes. insufficient command digits.
113A   0800           03539         movf    INDF,w          ; get command digit.
113B   00AA           03540         movwf   temp2           ; save index.
113C   3C07           03541         sublw   d'7'            ; subtract biggest argument.
113D   1C03           03542         btfss   STATUS,C        ; is result non-negative?
113E   29D8           03543         goto    UlCmdNG         ; nope. bad command digit.
113F   0A84           03544         incf    FSR,f           ; move to next byte.
1140   03AF           03545         decf    cmdSize,f       ; decrement commandSize.
1141   1D03           03546         btfss   STATUS,Z        ; is result zero?
1142   294B           03547         goto    UC71R           ; record CT.
1143                  03548 UC71P                           ; play courtesy tone.
1143   082A           03549         movf    temp2,w         ; get index.
1144   00CA           03550         movwf   cTone           ; save CT index.
                      03551         PAGE3                   ; select code page 3.
1145   158A               M         bsf     PCLATH,3
1146   160A               M         bsf     PCLATH,4
1147   2029           03552         call    PlayCT          ; play courtesy tone #w
                      03553         PAGE2                   ; select code page 2.
1148   118A               M         bcf     PCLATH,3
1149   160A               M         bsf     PCLATH,4
114A   0008           03554         return                  ; done.
                      03555 
114B                  03556 UC71R                           ; record courtesy tone.
114B   1B53           03557         btfsc   group6,6        ; are courtesy tones write protected?
114C   29D8           03558         goto    UlCmdNG         ; yes.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

114D   3060           03559         movlw   low EECTB       ; get EEPROM ctsy tone table base address
114E   00CB           03560         movwf   eeAddr          ; move into EEPROM address low byte
114F   1003           03561         bcf     STATUS,C        ; clear carry bit.
1150   0DAA           03562         rlf     temp2,f         ; multiply msg # by 2
1151   0DAA           03563         rlf     temp2,f         ; multiply msg # by 2 (x4 after)
1152   0D2A           03564         rlf     temp2,w         ; multiply msg # by 2 (x8 after)
1153   07CB           03565         addwf   eeAddr,f        ; add offset of ctsy tone to ctsy base addr.
                      03566         ;; now have eeprom address of CT.
1154   3003           03567         movlw   b'00000011'     ; mask:  low 2 bits.
1155   052F           03568         andwf   cmdSize,w       ; check for multiple of 4 only.
1156   1D03           03569         btfss   STATUS,Z        ; is result zero?
1157   29D8           03570         goto    UlCmdNG         ; bad command argument.
1158   082F           03571         movf    cmdSize,w       ; get command size.
1159   3C10           03572         sublw   d'16'           ; 16 is 8 pairs or 4 tones.
115A   1C03           03573         btfss   STATUS,C        ; check for non-negative.
115B   29D8           03574         goto    UlCmdNG         ; too many command digits.
115C   3030           03575         movlw   low eebuf00     ; get address of eebuffer.
115D   00F6           03576         movwf   eebPtr          ; set eeprom buffer put pointer
115E   01CC           03577         clrf    eeCount         ; clear count.
115F                  03578 UC71RL  
                      03579         PAGE3                   ; select page 3
115F   158A               M         bsf     PCLATH,3
1160   160A               M         bsf     PCLATH,4
1161   210F           03580         call    GetCTen         ; get 2-digit argument.
1162   2119           03581         call    PutEEB          ; put into EEPROM write buffer.
1163   210F           03582         call    GetCTen         ; get 2-digit argument.
                      03583         PAGE2                   ; select code page 2.
1164   118A               M         bcf     PCLATH,3
1165   160A               M         bsf     PCLATH,4
1166   00A9           03584         movwf   temp            ; save it.
1167   08AF           03585         movf    cmdSize,f       ; test command size.
1168   1D03           03586         btfss   STATUS,Z        ; any digits left?
1169   17A9           03587         bsf     temp,7          ; yes, set high bit of tone.
116A   0829           03588         movf    temp,w          ; get temp back
                      03589         PAGE3                   ; select page 3
116B   158A               M         bsf     PCLATH,3
116C   160A               M         bsf     PCLATH,4
116D   2119           03590         call    PutEEB          ; put into EEPROM write buffer.
                      03591         PAGE2                   ; select code page 2.
116E   118A               M         bcf     PCLATH,3
116F   160A               M         bsf     PCLATH,4
1170   08AF           03592         movf    cmdSize,f       ; test command size.
1171   1D03           03593         btfss   STATUS,Z        ; any digits left?
1172   295F           03594         goto    UC71RL          ; yes. loop around and get the next 4.
                      03595         ;; now have whole segment in buffer.
1173   3030           03596         movlw   low eebuf00     ; get address of eebuffer.
1174   0084           03597         movwf   FSR             ; set address to write into EEPROM.
                      03598         PAGE3                   ; select code page 3.
1175   158A               M         bsf     PCLATH,3
1176   160A               M         bsf     PCLATH,4
1177   20BA           03599         call    WriteEE
                      03600         PAGE2                   ; back to code page 2.
1178   118A               M         bcf     PCLATH,3
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1179   160A               M         bsf     PCLATH,4
117A   29D4           03601         goto    UlCmdOK         ; OK.
                      03602 
117B                  03603 UlCmd70
117B   0A84           03604         incf    FSR,f           ; move to next byte.
117C   0BAF           03605         decfsz  cmdSize,f       ; decrement commandSize.
117D   2986           03606         goto    UC70R           ; record CW ID.
117E   30A0           03607         movlw   EECWID          ; address of CW ID message in EEPROM.
117F   00CB           03608         movwf   eeAddr          ; save CT base address
                      03609         PAGE3                   ; select code page 3.
1180   158A               M         bsf     PCLATH,3
1181   160A               M         bsf     PCLATH,4
1182   200D           03610         call    PlayCWe         ; kick off the CW playback.
                      03611         PAGE2                   ; select code page 2.
1183   118A               M         bcf     PCLATH,3
1184   160A               M         bsf     PCLATH,4
1185   0008           03612         return
1186                  03613 UC70R                           ; record CW ID.
1186   1B53           03614         btfsc   group6,6        ; are courtesy tones write protected?
1187   29D8           03615         goto    UlCmdNG         ; yes.
1188   182F           03616         btfsc   cmdSize,0       ; bit 0 should be clear for an even length.
1189   29D8           03617         goto    UlCmdNG         ; bad command argument.
118A   3030           03618         movlw   low eebuf00     ; get address of eebuffer.
118B   00F6           03619         movwf   eebPtr          ; set eeprom buffer put pointer
118C   01CC           03620         clrf    eeCount         ; clear count.
118D                  03621 UC70RL  
                      03622         PAGE3                   ; select page 3
118D   158A               M         bsf     PCLATH,3
118E   160A               M         bsf     PCLATH,4
118F   210F           03623         call    GetCTen         ; get 2-digit argument.
1190   2400           03624         call    GetCW           ; get CW code.
1191   2119           03625         call    PutEEB          ; put into EEPROM write buffer.
                      03626         PAGE2                   ; select code page 2.
1192   118A               M         bcf     PCLATH,3
1193   160A               M         bsf     PCLATH,4
1194   08AF           03627         movf    cmdSize,f       ; test cmdSize
1195   1D03           03628         btfss   STATUS,Z        ; skip if it's zero.
1196   298D           03629         goto    UC70RL          ; loop around.
                      03630         
1197   30FF           03631         movlw   h'ff'           ; mark EOM.
                      03632         PAGE3                   ; select page 3
1198   158A               M         bsf     PCLATH,3
1199   160A               M         bsf     PCLATH,4
119A   2119           03633         call    PutEEB          ; put into EEPROM write buffer.
                      03634         PAGE2                   ; select code page 2.
119B   118A               M         bcf     PCLATH,3
119C   160A               M         bsf     PCLATH,4
119D   30A0           03635         movlw   EECWID          ; get CW ID address...
119E   00CB           03636         movwf   eeAddr          ; set EEPROM address...
119F   3030           03637         movlw   low eebuf00     ; get address of eebuffer.
11A0   0084           03638         movwf   FSR             ; set address to write into EEPROM.
                      03639         PAGE3                   ; select code page 3.
11A1   158A               M         bsf     PCLATH,3
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11A2   160A               M         bsf     PCLATH,4
11A3   20BA           03640         call    WriteEE
                      03641         PAGE2                   ; back to code page 2.
11A4   118A               M         bcf     PCLATH,3
11A5   160A               M         bsf     PCLATH,4
11A6   29D4           03642         goto    UlCmdOK         ; OK.
                      03643         
                      03644 ; ************
                      03645 ; ** UlCmd8 **
                      03646 ; ************
                      03647         ;; play/record from ISD...  
11A7                  03648 UlCmd8                          ; play/record voice messages
11A7   0800           03649         movf    INDF,w          ; get 3rd byte..
11A8   1903           03650         btfsc   STATUS,Z        ; is it zero? (play cmd)
11A9   29C2           03651         goto    UlCmd8P         ; play...
11AA   3001           03652         movlw   h'01'           ; get record command
11AB   0200           03653         subwf   INDF,w          ; subtract record command
11AC   1D03           03654         btfss   STATUS,Z        ; is it zero?
11AD   29D8           03655         goto    UlCmdNG         ; argument error
                      03656         ;; 3rd digit was 1, record command
11AE   0A84           03657         incf    FSR,f           ; increment command pointer; now at 4th digit
11AF   03AF           03658         decf    cmdSize,f       ; decrease command size
11B0   1903           03659         btfsc   STATUS,Z        ; skip if result is not zero.
11B1   29D8           03660         goto    UlCmdNG         ; bad command.
11B2   0800           03661         movf    INDF,w          ; get message number.
11B3   3C03           03662         sublw   VLAST           ; subtract from max message number.
11B4   1C03           03663         btfss   STATUS,C        ; skip if result is non-negative.
11B5   29D8           03664         goto    UlCmdNG         ; bad command.
11B6   1BD3           03665         btfsc   group6,7        ; are voice messages write protected?
11B7   29D8           03666         goto    UlCmdNG         ; yes.
11B8   0800           03667         movf    INDF,w          ; get message number.
11B9   00D7           03668         movwf   isdRMsg         ; save message number.
                      03669 
                      03670         PAGE0                   ; select code page 3
11BA   118A               M         bcf     PCLATH,3
11BB   120A               M         bcf     PCLATH,4
11BC   3880           03671         iorlw   ICMDDEL         ; make into erase command
11BD   270F           03672         call    QISDCmd         ; enqueue the erase command.
                      03673         PAGE2                   ; select code page 2
11BE   118A               M         bcf     PCLATH,3
11BF   160A               M         bsf     PCLATH,4
                      03674         
11C0   1534           03675         bsf     isdFlag,ISDRECR ; set record mode flag
11C1   29D4           03676         goto    UlCmdOK         ; send OK confirmation.
                      03677         
11C2                  03678 UlCmd8P                         ; 3rd digit was 0, playback command
11C2   0A84           03679         incf    FSR,f           ; increment command pointer; now at 4th digit
11C3   03AF           03680         decf    cmdSize,f       ; decrease command size
11C4   1903           03681         btfsc   STATUS,Z        ; skip if result is not zero.
11C5   29D8           03682         goto    UlCmdNG         ; bad command.
11C6   0800           03683         movf    INDF,w          ; get message number.
11C7   3C03           03684         sublw   VLAST           ; subtract from max message number.
11C8   1C03           03685         btfss   STATUS,C        ; skip if result is non-negative.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11C9   29D8           03686         goto    UlCmdNG         ; bad command.
11CA   0800           03687         movf    INDF,w          ; get message number.
                      03688         PAGE0                   ; select page 3
11CB   118A               M         bcf     PCLATH,3
11CC   120A               M         bcf     PCLATH,4
11CD   2707           03689         call    NewPlay         ; start playback
                      03690         PAGE2                   ; select code page 2.
11CE   118A               M         bcf     PCLATH,3
11CF   160A               M         bsf     PCLATH,4
11D0   0008           03691         return                  ; don't play CW confirmation message, play ISD.
                      03692         
11D1                  03693 UlCmd9                          ; reserved.
11D1                  03694 UlCmdA                          ; devel cmd *A
11D1                  03695 UlCmdB                          ; devel cmd *B
11D1                  03696 UlCmdC                          ; devel cmd *C
11D1                  03697 UlCmdD                          ; devel cmd *D
11D1   29D8           03698         goto    UlCmdNG         ; bad command
                      03699         
11D2                  03700 UlCmdE                          ; devel cmd **, restart controller.
11D2   29D2           03701         goto    UlCmdE          ; Loop forever, until restart via wdt timeout.
                      03702 
11D3                  03703 UlCmdF                          ; devel cmd *
11D3   29D8           03704         goto    UlCmdNG         ; bad command
                      03705         
11D4                  03706 UlCmdOK                         ; "OK"
11D4   3000           03707         movlw   CW_OK           ; get CW OK message.
11D5   29D9           03708         goto    UlErr           ; finish message.
                      03709 
11D6                  03710 UlCmdNGx
                      03711         ;; reset the state of the MUTE pin to an output
11D6   30EF           03712         movlw   B'11101111'     ; na/na/in/out/in/in/in/in
11D7   0085           03713         movwf   TRISA           ; set port A data direction
                      03714 
11D8                  03715 UlCmdNG                         ; "BAD COMMAND"
11D8   3003           03716         movlw   CW_ERR          ; get ERR message.
                      03717 
11D9                  03718 UlErr
                      03719         PAGE3                   ; select code page 3.
11D9   158A               M         bsf     PCLATH,3
11DA   160A               M         bsf     PCLATH,4
11DB   2000           03720         call    PlayCW          ; play CW
                      03721         PAGE2                   ; select code page 2.
11DC   118A               M         bcf     PCLATH,3
11DD   160A               M         bsf     PCLATH,4
11DE   0008           03722         return                  ; done with all this.
                      03723         
                      03724 ; ************************************************************************
                      03725 ; ****************************** ROM PAGE 3 ******************************
                      03726 ; ************************************************************************
1800                  03727         org     1800            ; page 3
                      03728 
                      03729 ; ************
                      03730 ; ** PlayCW **
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03731 ; ************
                      03732         ;; play CW from ROM table.  Address in W.
1800                  03733 PlayCW
1800   00A9           03734         movwf   temp            ; save CW address.
                      03735         ;movf   beepCtl,w       ; get beep control flag.
                      03736         ;btfss  STATUS,Z        ; result will be zero if no.
                      03737         ;call   KillBeep        ; kill off beep sequence in progress.
1801   0829           03738         movf    temp,w          ; get back CW address.
1802   00B6           03739         movwf   beepAddr        ; set CW address.
1803   3089           03740         movlw   CW_ROM          ; CW from the ROM table
1804   00B7           03741         movwf   beepCtl         ; set control flags.
1805   2066           03742         call    GtBeep          ; get next character.
1806   00C6           03743         movwf   cwByte          ; save byte in CW bitmap
1807   3007           03744         movlw   CWIWSP          ; get startup delay
1808   00C5           03745         movwf   cwTmr           ; preset cw timer
1809   13A4           03746         bcf     tFlags,CWBEEP   ; make sure that beep is off
180A   17B2           03747         bsf     txFlag,CWPLAY   ; turn on CW sender
180B   2081           03748         call    PTTon           ; turn on PTT...
180C   0008           03749         return
                      03750 
                      03751 ; ************
                      03752 ; ** PlayCWe**
                      03753 ; ************
                      03754         ;; play CW from EEPROM addresses named by eeAddr
180D                  03755 PlayCWe
180D   0837           03756         movf    beepCtl,w       ; get beep control flag.
180E   391C           03757         andlw   b'00011100'     ; is the beeper already busy?
180F   1D03           03758         btfss   STATUS,Z        ; result will be zero if no.
1810   204D           03759         call    KillBeep        ; kill off beep sequence in progress.
1811   084B           03760         movf    eeAddr,w        ; get lo byte of address.
1812   00B6           03761         movwf   beepAddr        ; set lo byte of address of beep.
1813   3088           03762         movlw   CW_EE           ; select CW from EEPROM
1814   00B7           03763         movwf   beepCtl         ; set control flags.
1815   2066           03764         call    GtBeep          ; get next character.
1816   00C6           03765         movwf   cwByte          ; save byte in CW bitmap
1817   3007           03766         movlw   CWIWSP          ; get startup delay
1818   00C5           03767         movwf   cwTmr           ; preset cw timer
1819   13A4           03768         bcf     tFlags,CWBEEP   ; make sure that beep is off
181A   17B2           03769         bsf     txFlag,CWPLAY   ; turn on CW sender
181B   2081           03770         call    PTTon           ; turn on PTT...
181C   0008           03771         return
                      03772 
                      03773 ; *************
                      03774 ; ** PlayCTx **
                      03775 ; *************
                      03776         ;; play a courtesy tone from the ROM table.
                      03777         ;; courtesy tone offset in W.
181D                  03778 PlayCTx                         ; play a courtesy tone
181D   00A9           03779         movwf   temp            ; save the courtesy tone offset.
181E   08B7           03780         movf    beepCtl,f       ; already beeping?
181F   1D03           03781         btfss   STATUS,Z        ; result will be zero if no.
1820   0008           03782         return                  ; already beeping.
1821   0829           03783         movf    temp,w          ; get back courtesy tone offset.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1822   00B6           03784         movwf   beepAddr        ; set beep address lo byte.
1823   3085           03785         movlw   BEEP_CX         ; CT beep. (from table)
1824   00B7           03786         movwf   beepCtl         ; set control flags.
1825   3005           03787         movlw   CTPAUSE         ; initial delay.
1826   00B5           03788         movwf   beepTmr         ; set initial start
1827   1732           03789         bsf     txFlag,BEEPING  ; beeping is enabled!
1828   0008           03790         return                  ; done.
                      03791 
                      03792 ; ************
                      03793 ; ** PlayCT **
                      03794 ; ************
                      03795         ;; play courtesy tone # cTone from EEPROM.
1829                  03796 PlayCT                          ; play a courtesy tone.
1829   1BCA           03797         btfsc   cTone,7         ; sleazy easy check for no CT...
182A   0008           03798         return                  ; courtesy tone is suppressed.
182B   08B7           03799         movf    beepCtl,f       ; already beeping?
182C   1D03           03800         btfss   STATUS,Z        ; result will be zero if no.
182D   0008           03801         return                  ; already beeping.
182E   3060           03802         movlw   EECTB           ; get CT base.
182F   00B6           03803         movwf   beepAddr        ; save CT base address.
                      03804 
1830   084A           03805         movf    cTone,w         ; examine cTone.
1831   3907           03806         andlw   h'07'           ; force into reasonable range.
1832   00A9           03807         movwf   temp            ; copy to temp.
1833   1003           03808         bcf     STATUS,C        ; clear carry bit.
1834   0DA9           03809         rlf     temp,f          ; multiply msg # by 2
1835   0DA9           03810         rlf     temp,f          ; multiply msg # by 2 (x4 after)
1836   0D29           03811         rlf     temp,w          ; multiply msg # by 2 (x8 after)
1837   07B6           03812         addwf   beepAddr,f      ; add offset of ctsy tone to beep base addr.
                      03813         ;; now have EEPROM address of CT. reset courtesy tone indicator.
1838   30FF           03814         movlw   CTNONE          ; get no CT indicator.
1839   00CA           03815         movwf   cTone           ; save it.
183A   0836           03816         movf    beepAddr,w      ; get low byte of EEPROM address.
183B   00CB           03817         movwf   eeAddr          ; set low byte of EEPROM address.
                      03818 
183C   20AB           03819         call    ReadEEw         ; read 1 byte from EEPROM.
183D   00A9           03820         movwf   temp            ; save eeprom data.
183E   1D03           03821         btfss   STATUS,Z        ; is it zero?
183F   2847           03822         goto    PlayCT1         ; nope.
1840   3003           03823         movlw   VCTONE          ; get courtesy tone message.
                      03824         PAGE0
1841   118A               M         bcf     PCLATH,3
1842   120A               M         bcf     PCLATH,4
1843   2707           03825         call    NewPlay
                      03826         PAGE3
1844   158A               M         bsf     PCLATH,3
1845   160A               M         bsf     PCLATH,4
1846   0008           03827         return                  ; done.
1847                  03828 PlayCT1
1847   3084           03829         movlw   BEEP_CT         ; CT beep.
1848   00B7           03830         movwf   beepCtl         ; set control flags.
1849   3005           03831         movlw   CTPAUSE         ; initial delay.
184A   00B5           03832         movwf   beepTmr         ; set initial start
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

184B   1732           03833         bsf     txFlag,BEEPING  ; beeping is enabled!
184C   0008           03834         return                  ; done.
                      03835 
                      03836 ; ************** 
                      03837 ; ** KillBeep **
                      03838 ; ************** 
                      03839         ;; kill off whatever is beeping now.
184D                  03840 KillBeep
184D   01B5           03841         clrf    beepTmr         ; clear beep timer
184E   01B7           03842         clrf    beepCtl         ; clear beep control flags
184F   0103           03843         clrw                    ; select no tone.
1850   262C           03844         call    SetTone         ; set the beep tone up.
1851   0008           03845         return
                      03846         
                      03847 ; *************
                      03848 ; ** GetBeep **
                      03849 ; *************
                      03850         ;; get the next beep tone from whereever.
                      03851         ;; select the tone, etc.
                      03852         ;; uses temp.
1852                  03853 GetBeep                         ; get the next beep character
1852   1B37           03854         btfsc   beepCtl,B_LAST  ; was the last segment just sent?
1853   285D           03855         goto    BeepDone        ; yes.  stop beeping.
1854   2066           03856         call    GtBeep          ; get length byte
1855   00B5           03857         movwf   beepTmr         ; save length
1856   2066           03858         call    GtBeep          ; get tone byte
1857   00A9           03859         movwf   temp            ; save tone byte
1858   1FA9           03860         btfss   temp,7          ; is the continue bit set?
1859   1737           03861         bsf     beepCtl,B_LAST  ; no. mark this segment last.
185A   303F           03862         movlw   b'00111111'     ; mask
185B   05A9           03863         andwf   temp,f          ; mask out control bits.
185C   2863           03864         goto    SetBeep         ; set the beep tone
                      03865 
185D                  03866 BeepDone                        ; stop that confounded beeping...
185D   01A9           03867         clrf    temp            ; set quiet beep
185E   1332           03868         bcf     txFlag,BEEPING  ; beeping is done...
185F   1AB2           03869         btfsc   txFlag,TALKING  ; don't turn off audio gate if talking.
1860   2863           03870         goto    SetBeep         ; talking, don't turn off audio gate.
1861   01B7           03871         clrf    beepCtl         ; clear beep control flags
1862   01B5           03872         clrf    beepTmr         ; clear beep timer
                      03873 
1863                  03874 SetBeep
1863   0829           03875         movf    temp,w          ; get beep tone.
1864   262C           03876         call    SetTone         ; set the beep tone up.
1865   0008           03877         return
                      03878 
1866                  03879 GtBeep                          ; get the next character for the beep message
1866   0837           03880         movf    beepCtl,w       ; get control flag bits
1867   3903           03881         andlw   b'00000011'     ; mask significant control flag bits.
1868   00A9           03882         movwf   temp            ; save w
1869   3018           03883         movlw   high GtBpTbl    ; set page 
186A   008A           03884         movwf   PCLATH          ; select page
186B   0829           03885         movf    temp,w          ; get tone into w
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

186C   0782           03886         addwf   PCL,f           ; add w to PCL
                      03887         
186D                  03888 GtBpTbl
186D   2871           03889         goto    GtBEE           ; get beep char from EEPROM
186E   2876           03890         goto    GtBROM          ; get beep char from hardcoded ROM table
186F   287A           03891         goto    GtBRAM          ; get beep char from RAM address
1870   287F           03892         goto    GtBDT           ; get beep from address in DTMF receive buffer
                      03893         
1871                  03894 GtBEE                           ; get beep char from EEPROM
1871   0836           03895         movf    beepAddr,w      ; get lo byte of EEPROM address
1872   00CB           03896         movwf   eeAddr          ; store to EEPROM address lo byte
1873   0AB6           03897         incf    beepAddr,f      ; increment pointer
1874   20AB           03898         call    ReadEEw         ; read 1 byte from EEPROM
1875   0008           03899         return                  ;
1876                  03900 GtBROM                          ; get beep char from ROM table
1876   0836           03901         movf    beepAddr,w      ; get address low byte (hi is not used here)
1877   0AB6           03902         incf    beepAddr,f      ; increment pointer
1878   2683           03903         call    MesgTabl        ; get char from table
1879   0008           03904         return                  ;
187A                  03905 GtBRAM                          ; get beep char from RAM
187A   0836           03906         movf    beepAddr,w      ; get address low byte (hi is not used here)
187B   0084           03907         movwf   FSR             ; set indirect register pointer
187C   0AB6           03908         incf    beepAddr,f      ; increment pointer
187D   0800           03909         movf    INDF,w          ; get data byte from RAM
187E   0008           03910         return                  ; 
                      03911 
187F                  03912 GtBDT                           ; get beep char from DTMF rx buffer address
                      03913         ;; currently not implemented.
187F   30FF           03914         movlw   h'ff'           ; immediate end of message!
1880   0008           03915         return
                      03916 
                      03917 ; ***********
                      03918 ; ** PTTon **
                      03919 ; ***********
                      03920         ;; turn on PTT & set up ID timer, etc., if needed.
1881                  03921 PTTon                           ; key the transmitter
1881   19B0           03922         btfsc   flags,TXONFLG   ; is transmitter already on?
1882   0008           03923         return                  ; yep.
1883   1407           03924         bsf     PORTC,TX0PTT    ; tx was not on, turn it on
1884   15B0           03925         bsf     flags,TXONFLG   ; set last tx state flag
1885   08BB           03926         movf    idTmr,f         ; check ID timer
1886   1903           03927         btfsc   STATUS,Z        ; is it zero?
1887   288B           03928         goto    PTTinit         ; yes.  use initial ID.
1888   18B0           03929         btfsc   flags,needID    ; is needID already set?
1889   2891           03930         goto    PTTfan          ; yes...
188A   288C           03931         goto    PTTset          ; no, set ID timer and needID
188B                  03932 PTTinit                         ;
                      03933         ;; this would be a good spot to defeat the initial ID logic
188B   1430           03934         bsf     flags,initID    ; ID timer was zero, set initial ID flag
188C                  03935 PTTset  
188C   14B0           03936         bsf     flags,needID    ; need to ID...
188D   3002           03937         movlw   EETID           ; get address of ID timer
188E   00CB           03938         movwf   eeAddr          ; set address of ID timer
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

188F   20AB           03939         call    ReadEEw         ; get byte from EEPROM
1890   00BB           03940         movwf   idTmr           ; store to down-counter
1891                  03941 PTTfan  
1891   1ECF           03942         btfss   group2,5        ; is fan control enabled?
1892   0008           03943         return                  ; no.
1893   01C0           03944         clrf    fanTmr          ; disable fan timer, fan stays on.
1894   1406           03945         bsf     PORTB,FANCTL    ; turn on fan
1895   0008           03946         return                  ; done here
                      03947 
                      03948 ; ************
                      03949 ; ** PTToff **
                      03950 ; ************
1896                  03951 PTToff
                      03952         ;; don't care if already off, turn off again. (can't hurt)
1896   1007           03953         bcf     PORTC,TX0PTT    ; turn off main PTT!
1897   11B0           03954         bcf     flags,TXONFLG   ; clear last tx state flag
1898   1ECF           03955         btfss   group2,5        ; is fan control enabled?
1899   0008           03956         return                  ; no.
189A   3006           03957         movlw   EETFAN          ; get EEPROM address of ID timer preset.
189B   00CB           03958         movwf   eeAddr          ; set EEPROM address low byte.
189C   20AB           03959         call    ReadEEw         ; read EEPROM.
189D   00C0           03960         movwf   fanTmr          ; set fan timer
189E   1903           03961         btfsc   STATUS,Z        ; is fan timer zero?
189F   1006           03962         bcf     PORTB,FANCTL    ; yes, turn off fan now.
18A0   0008           03963         return
                      03964 
                      03965 ; ************
                      03966 ; ** ReadEE **
                      03967 ; ************
                      03968         ;; read eeCount bytes from the EEPROM 
                      03969         ;; starting at location in eeAddr.
                      03970         ;; starting at FSR.
18A1                  03971 ReadEE                          ; read EEPROM.
18A1   08CC           03972         movf    eeCount,f       ; check this for zero
18A2   1903           03973         btfsc   STATUS,Z        ; is it zero?
18A3   0008           03974         return                  ; yes, do nothing here!
18A4                  03975 ReadEEd
18A4   20AB           03976         call    ReadEEw         ; read EEPROM.
18A5   0080           03977         movwf   INDF            ; save read byte.
18A6   0ACB           03978         incf    eeAddr,f        ; increment EEPROM address.
18A7   0A84           03979         incf    FSR,f           ; increment memory address.
18A8   0BCC           03980         decfsz  eeCount,f       ; decrement count of bytes to read.
18A9   28A4           03981         goto    ReadEEd         ; loop around and read another byte.
18AA   0008           03982         return                  ; read the requested bytes, return
                      03983 
                      03984 ; *************
                      03985 ; ** ReadEEw **
                      03986 ; *************
                      03987         ;; read 1 bytes from the EEPROM 
                      03988         ;; from location in eeAddr into W
18AB                  03989 ReadEEw                         ; read EEPROM.
18AB   138B           03990         bcf     INTCON,GIE      ; disable interrupts
18AC   1B8B           03991         btfsc   INTCON,GIE      ; interrupts successfully disabled?
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18AD   28AB           03992         goto    ReadEEw         ; no,  try again.
18AE   084B           03993         movf    eeAddr,w        ; get eeprom address.
18AF   1703           03994         bsf     STATUS,RP1      ; select register page.
18B0   1283           03995         bcf     STATUS,RP0      ; select register page.
18B1   008D           03996         movwf   EEADR           ; write EEADR.
18B2   1683           03997         bsf     STATUS,RP0      ; select register page.
18B3   138C           03998         bcf     EECON1,EEPGD    ; select DATA memory.
18B4   140C           03999         bsf     EECON1,RD       ; read EEPROM.
18B5   1283           04000         bcf     STATUS,RP0      ; select register page.
18B6   080C           04001         movf    EEDATA,w        ; get EEPROM data.
18B7   1303           04002         bcf     STATUS,RP1      ; select register page.
18B8   178B           04003         bsf     INTCON,GIE      ; enable interrupts
18B9   0008           04004         return                  ; read the requested bytes, return
                      04005 
                      04006 ; *************
                      04007 ; ** WriteEE **
                      04008 ; *************
                      04009         ;; write eeCount bytes to the EEPROM 
                      04010         ;; starting at location in eeAddr from location
                      04011         ;; starting at FSR.
                      04012         ;; cannot write more than 32 bytes.  cannot cross 32 byte paragraphs.
18BA                  04013 WriteEE                         ; write EEPROM.
18BA   08CC           04014         movf    eeCount,f       ; check this for zero
18BB   1903           04015         btfsc   STATUS,Z        ; is it zero?
18BC   0008           04016         return                  ; yes, do nothing here!
                      04017 
18BD                  04018 WrEELp
18BD   0800           04019         movf    INDF,w          ; get data byte to write.
18BE   20C4           04020         call    WriteEw         ; write the byte.
18BF   0A84           04021         incf    FSR,f           ; increment RAM address in FSR.
18C0   0ACB           04022         incf    eeAddr,f        ; increment EEPROM address.
18C1   0BCC           04023         decfsz  eeCount,f       ; decrement count of bytes to write, test for 0
18C2   28BD           04024         goto    WrEELp          ; not zero, keep looping.
18C3   0008           04025         return                  ; wrote the requested bytes, done, so return
                      04026 
                      04027 ; *************
                      04028 ; ** WriteEw **
                      04029 ; *************
                      04030         ;; write 1 byte from w into the EEPROM 
                      04031         ;; at location in eeAddr
                      04032         ;; stomps on temp3.
18C4                  04033 WriteEw                         ; write EEPROM.
18C4   00AB           04034         movwf   temp3           ; save the value to write.
18C5                  04035 WritEd
18C5   138B           04036         bcf     INTCON,GIE      ; disable interrupts
18C6   1B8B           04037         btfsc   INTCON,GIE      ; interrupts successfully disabled?
18C7   28C5           04038         goto    WritEd          ; nope.  Try again.
18C8   084B           04039         movf    eeAddr,w        ; get address.
18C9   1703           04040         bsf     STATUS,RP1      ; select register page.
18CA   1283           04041         bcf     STATUS,RP0      ; select register page.
18CB   008D           04042         movwf   EEADR           ; set address.
18CC   1303           04043         bcf     STATUS,RP1      ; select register page.
18CD   082B           04044         movf    temp3,w         ; get data.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18CE   1703           04045         bsf     STATUS,RP1      ; select register page.
18CF   008C           04046         movwf   EEDATA          ; set data.
18D0   1683           04047         bsf     STATUS,RP0      ; select register page.
18D1   138C           04048         bcf     EECON1,EEPGD    ; select data EEPROM.
18D2   150C           04049         bsf     EECON1,WREN     ; enable writes.
18D3   3055           04050         movlw   h'55'           ; magic value.
18D4   008D           04051         movwf   EECON2          ; write magic value.
18D5   30AA           04052         movlw   h'AA'           ; magic value.
18D6   008D           04053         movwf   EECON2          ; write magic value.
18D7   148C           04054         bsf     EECON1,WR       ; start write cycle.
18D8   0064           04055         clrwdt                  ; clear watchdog.
18D9   150C           04056         bsf     EECON1,WREN     ; disable writes.
18DA                  04057 WriteEl                         ; loop until EEPROM written.
18DA   188C           04058         btfsc   EECON1,WR       ; done writing?
18DB   28DA           04059         goto    WriteEl         ; nope. keep waiting.
18DC   1283           04060         bcf     STATUS,RP0      ; select register page.
18DD   1303           04061         bcf     STATUS,RP1      ; select register page.
18DE   178B           04062         bsf     INTCON,GIE      ; enable interrupts
18DF   0008           04063         return                  ; wrote the requested bytes, done, so return
                      04064 
                      04065         
                      04066 ; ************************************************
                      04067 ; ** Load control operator settings from EEPROM **
                      04068 ; ************************************************
18E0                  04069 LoadCtl                         ; load the control operator saved groups
                      04070                                 ; from "macro" set contained in w.
18E0   00A9           04071         movwf   temp            ; save group number
18E1   3010           04072         movlw   EE0B            ; yes, get address of set zero.
18E2   00CB           04073         movwf   eeAddr          ; save address.
18E3   0E29           04074         swapf   temp,w          ; magic multiply by 16!
18E4   07CB           04075         addwf   eeAddr,f        ; add computed offset to eeAddr.
18E5   3008           04076         movlw   EESSC           ; get the number of bytes to read.
18E6   00CC           04077         movwf   eeCount         ; set the number of bytes to read.
18E7   304D           04078         movlw   group0          ; get address of first group
18E8   0084           04079         movwf   FSR             ; set pointer
18E9   1383           04080         bcf     STATUS,IRP      ; to page 0.
18EA   20A1           04081         call    ReadEE          ; read bytes from EEPROM.
18EB   1783           04082         bsf     STATUS,IRP      ; back to page 1.
                      04083         PAGE2                   ; select page 2
18EC   118A               M         bcf     PCLATH,3
18ED   160A               M         bsf     PCLATH,4
18EE   2093           04084         call    SetDig          ; set the digital outputs themselves
18EF   2089           04085         call    FixSMsg         ; clear the simplex message, if need be.
                      04086         PAGE3                   ; select code page 0.
18F0   158A               M         bsf     PCLATH,3
18F1   160A               M         bsf     PCLATH,4
18F2   0008           04087         return                  ; done.
                      04088         
                      04089 ; *************
                      04090 ; ** GetDNum **
                      04091 ; *************
                      04092         ;; get a decimal number from the bytes pointed at by fsr.
                      04093         ;; there can be 1, 2, or 3 bytes.  The bytes will always be
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04094         ;; terminated by FF.  return result in w.
                      04095         ;; this routine destroys the values in temp3 and temp4
18F3                  04096 GetDNum
18F3   01AB           04097         clrf    temp3           ; clear temp resul.
18F4   082F           04098         movf    cmdSize,w       ; get command length
18F5   00AC           04099         movwf   temp4           ; save it.
18F6   1903           04100         btfsc   STATUS,Z        ; no digits to parse?
18F7   290D           04101         goto    GetDN99         ; yes.
18F8   03AC           04102         decf    temp4,f         ; decrement it
18F9   1903           04103         btfsc   STATUS,Z        ; was it 1?
18FA   2909           04104         goto    GetDN1          ; yep.
18FB   03AC           04105         decf    temp4,f         ; decrement it
18FC   1903           04106         btfsc   STATUS,Z        ; was it 2?
18FD   2905           04107         goto    GetDN2          ; yep.
18FE   03AC           04108         decf    temp4,f         ; decrement it
18FF   1D03           04109         btfss   STATUS,Z        ; was it 3?
1900   290D           04110         goto    GetDN99         ; no.
                      04111         ;; get hundreds digit
1901   260E           04112         call    Get100s         ; get hundreds
1902   07AB           04113         addwf   temp3,f         ; add it.
1903   0A84           04114         incf    FSR,f           ; move pointer to next command byte.
1904   03AF           04115         decf    cmdSize,f       ; decrement command size.
1905                  04116 GetDN2  ;; get tens digit
1905   2617           04117         call    GetTens         ; get the value of the tens
1906   07AB           04118         addwf   temp3,f         ; add the tens to the running count
1907   0A84           04119         incf    FSR,f           ; move pointer to next command byte.
1908   03AF           04120         decf    cmdSize,f       ; decrement command size.
1909                  04121 GetDN1  ;; get ones digit
1909   0800           04122         movf    INDF,w          ; get last digit...
190A   07AB           04123         addwf   temp3,f         ; add it.
190B   0A84           04124         incf    FSR,f           ; move pointer to next command byte.
190C   03AF           04125         decf    cmdSize,f       ; decrement command size.
190D                  04126 GetDN99 ;; no digits left
190D   082B           04127         movf    temp3,w         ; get temp result.
190E   0008           04128         return                  ; really done.
                      04129 
                      04130 
190F                  04131 GetCTen
190F   2617           04132         call    GetTens         ; get tens digit.
1910   00AE           04133         movwf   temp6           ; save
1911   0A84           04134         incf    FSR,f           ; move pointer to next address
1912   03AF           04135         decf    cmdSize,f       ; decrement count of remaining bytes.
1913   0800           04136         movf    INDF,w          ; get ones digit
1914   07AE           04137         addwf   temp6,f         ; add to timer index
1915   0A84           04138         incf    FSR,f           ; move pointer to next address
1916   03AF           04139         decf    cmdSize,f       ; decrement count of remaining bytes.
1917   082E           04140         movf    temp6,w         ; get result.
1918   0008           04141         return                  ; done.
                      04142 
                      04143 ; ************
                      04144 ; ** PutEEB **
                      04145 ; ************
1919                  04146 PutEEB                          ; put byte in w into EEPROM buffer.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1919   00AD           04147         movwf   temp5           ; save byte.
191A   0804           04148         movf    FSR,w           ; get FSR.
191B   00AE           04149         movwf   temp6           ; save it.
191C   0876           04150         movf    eebPtr,w        ; get address of eebuffer.
191D   0084           04151         movwf   FSR             ; set FSR.
191E   082D           04152         movf    temp5,w         ; get value.
191F   0080           04153         movwf   INDF            ; write into eebuffer.
1920   0AF6           04154         incf    eebPtr,f        ; increment eebuffer pointer.
1921   0ACC           04155         incf    eeCount,f       ; increment count to write.
1922   082E           04156         movf    temp6,w         ; get saved FSR.
1923   0084           04157         movwf   FSR             ; restore FSR.
1924   0008           04158         return
                      04159 
                      04160 
                      04161 ; ************
                      04162 ; ** Mult10 **
                      04163 ; ************
1925                  04164 Mult10
                      04165         ;; multiply w by 10, return in w
1925   00AD           04166         movwf   temp5           ; save it.
1926   00AE           04167         movwf   temp6           ; save it.
1927   3E00           04168         addlw   h'0'            ; clear carry.
1928   0DAE           04169         rlf     temp6,f         ; temp6 = temp6 * 2
1929   0DAE           04170         rlf     temp6,f         ; temp6 = temp6 * 4
192A   0D2E           04171         rlf     temp6,w         ; w = temp * 8
192B   072D           04172         addwf   temp5,w         ; w = w + temp5
192C   072D           04173         addwf   temp5,w         ; w = w + temp5 (really now temp3 * 10)
192D   0008           04174         return                  ; returns with w*10 in w.
                      04175 
                      04176 ; ************
                      04177 ; ** MsgNum **
                      04178 ; ************
192E                  04179 MsgNum                          ; set up message addresses
                      04180         IFDEF NHRC3_1
                      04181         andlw   b'00000111'     ; mask to only 0-7 valid
                      04182         ELSE
192E   3903           04183         andlw   b'00000011'     ; mask to only 0-3 valid
                      04184         ENDIF
192F   00D6           04185         movwf   isdMsg          ; save message number.
1930   24AC           04186         call    GetIS1          ; get ISD message start address byte 1
1931   00DC           04187         movwf   isdS1           ; save it
1932   24B5           04188         call    GetIS2          ; get ISD message start address byte 2
1933   00DD           04189         movwf   isdS2           ; save it
                      04190 
1934   1F4E           04191         btfss   group1,6        ; in simplex mode?
1935   2938           04192         goto    MsgNumN         ; no.
1936   3003           04193         movlw   VLAST           ; use last message slot for simplex end
1937   00D6           04194         movwf   isdMsg          ; use this as the last slot number
                      04195 
1938                  04196 MsgNumN
1938   24BE           04197         call    GetIE1          ; get ISD message  end  address byte 1
1939   00DE           04198         movwf   isdE1           ; save it
193A   24C7           04199         call    GetIE2          ; get ISD message  end  address byte 2
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

193B   00DF           04200         movwf   isdE2           ; save it
193C   0008           04201         return
                      04202                 
                      04203 ; *************
                      04204 ; ** ISDCmd2 **
                      04205 ; *************
                      04206         ;;  send 2 byte command to ISD.
                      04207         ;; 1st byte is in W
                      04208         ;; 2nd byte is always zero
193D                  04209 ISDCmd2 
193D   1106           04210         bcf     PORTB,ISDSEL    ; select the ISD
193E   2168           04211         call    SendSPI         ; send & receive from the SPI
193F   00D8           04212         movwf   sr0lo           ; save ISD status register 0
1940   3000           04213         movlw   H'00'           ; 2nd byte of ISD command
1941   2168           04214         call    SendSPI         ; send & receive from the SPI
1942   00D9           04215         movwf   sr0hi           ; save ISD status register 0
1943   1506           04216         bsf     PORTB,ISDSEL    ; deselect the ISD
1944   0008           04217         return                  ; done.
                      04218 
                      04219 ; *************
                      04220 ; ** ISDCmd3 **
                      04221 ; *************
                      04222         ;; send 3 byte command to ISD.
                      04223         ;; used only for WR_APC2 command
                      04224         ;; 1st byte is in W
                      04225         ;; 2nd byte is in isdS1
                      04226         ;; 3rd byte is in isdS2
1945                  04227 ISDCmd3
1945   1106           04228         bcf     PORTB,ISDSEL    ; select the ISD
1946   2168           04229         call    SendSPI         ; send & receive from the SPI
1947   00D8           04230         movwf   sr0lo           ; save ISD status register 0
1948   085C           04231         movf    isdS1,w         ; 1st byte of APC payload
1949   2168           04232         call    SendSPI         ; send & receive from the SPI
194A   00D9           04233         movwf   sr0hi           ; save ISD status register 0
194B   085D           04234         movf    isdS2,w         ; 2nd byte of APC payload
194C   2168           04235         call    SendSPI         ; send & receive from the SPI
194D   00DA           04236         movwf   sr1lo           ; save ISD status register 0
194E   1506           04237         bsf     PORTB,ISDSEL    ; deselect the ISD
194F   0008           04238         return                  ; done.
                      04239 
                      04240 ; *************
                      04241 ; ** ISDCmd7 **
                      04242 ; *************
                      04243         ;; send 7 byte command to ISD.
                      04244         ;; used for SET_PLAY and SET_REC commands.
                      04245         ;; 1st byte is in isdCmd
                      04246         ;; 2nd byte is always zero
                      04247         ;; 3rd byte is in isdS1
                      04248         ;; 4th byte is in isdS2
                      04249         ;; 5th byte is in isdE1
                      04250         ;; 6th byte is in isdE2
                      04251         ;; 7th byte is always zero
1950                  04252 ISDCmd7
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04253         ;; select ISD
1950   1106           04254         bcf     PORTB,ISDSEL    ; select the ISD
                      04255         ;; byte 1
1951   0860           04256         movf    isdCmd,w        ; get byte 1, the command byte
1952   2168           04257         call    SendSPI         ; send & receive from the SPI
1953   00D8           04258         movwf   sr0lo           ; save ISD status register 0 lo byte
                      04259         ;; byte 2
1954   0103           04260         clrw                    ; byte 2 is zero
1955   2168           04261         call    SendSPI         ; send & receive from the SPI
1956   00D9           04262         movwf   sr0hi           ; save ISD status register 0 hi byte
                      04263         ;; byte 3
1957   085C           04264         movf    isdS1,w         ; get byte 3, 1st start address byte
1958   2168           04265         call    SendSPI         ; send & receive from the SPI
1959   00D8           04266         movwf   sr0lo           ; save ISD status register 0 lo byte
                      04267         ;; byte 4
195A   085D           04268         movf    isdS2,w         ; get byte 4, 2nd start address byte
195B   2168           04269         call    SendSPI         ; send & receive from the SPI
195C   00D9           04270         movwf   sr0hi           ; save ISD status register 0 hi byte
                      04271         ;; byte 5
195D   085E           04272         movf    isdE1,w         ; get byte 3, 1st  end  address byte
195E   2168           04273         call    SendSPI         ; send & receive from the SPI
195F   00D8           04274         movwf   sr0lo           ; save ISD status register 0 lo byte
                      04275         ;; byte 6
1960   085F           04276         movf    isdE2,w         ; get byte 4, 2nd  end  address byte
1961   2168           04277         call    SendSPI         ; send & receive from the SPI
1962   00D9           04278         movwf   sr0hi           ; save ISD status register 0 hi byte
                      04279         ;; byte 7
1963   0103           04280         clrw                    ; byte 7 is always zero
1964   2168           04281         call    SendSPI         ; send & receive from the SPI
1965   00D8           04282         movwf   sr0lo           ; save ISD status register 0
                      04283         ;; deselect ISD
1966   1506           04284         bsf     PORTB,ISDSEL    ; deselect the ISD
1967   0008           04285         return                  ; done.
                      04286 
                      04287 ; *************
                      04288 ; ** SendSPI **
                      04289 ; *************
                      04290         ;; send the byte in W out the SPI.
                      04291         ;; wait for the transmission to complete.
                      04292         ;; return byte received from SPI in W.
1968                  04293 SendSPI                         ; send a byte out the SPI
1968   0093           04294         movwf   SSPBUF          ; output the byte in the W register
1969   1683           04295         bsf     STATUS,RP0      ; select page 1
196A                  04296 WaitSPI          
196A   1C14           04297         btfss   SSPSTAT,BF      ; is byte transmission complete?
196B   296A           04298         goto    WaitSPI         ; nope
196C   1283           04299         bcf     STATUS,RP0      ; select page 0
196D   0813           04300         movf    SSPBUF,w        ; save received byte in W
196E   0008           04301         return
                      04302 
                      04303 ; ******************************
                      04304 ; ** ROM Table Fetches follow **
                      04305 ; ******************************
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04306 
1C00                  04307         org     h'1c00'
                      04308 ; ***********
                      04309 ; ** GetCW **
                      04310 ; ***********
                      04311         ;; get a cw bitmask from a phone pad letter number.
1C00                  04312 GetCW                           ; get tone byte from table
1C00   00A9           04313         movwf   temp            ; save w
1C01   301C           04314         movlw   high CWTbl      ; set page 
1C02   008A           04315         movwf   PCLATH          ; select page
1C03   13A9           04316         bcf     temp,7          ; force into 0-127 range for safety.
1C04   0829           04317         movf    temp,w          ; get tone into w
1C05   0782           04318         addwf   PCL,f           ; add w to PCL
1C06                  04319 CWTbl
1C06   343F           04320         retlw   h'3f'           ; 00 0
1C07   343E           04321         retlw   h'3e'           ; 01 1
1C08   343C           04322         retlw   h'3c'           ; 02 2
1C09   3438           04323         retlw   h'38'           ; 03 3
1C0A   3430           04324         retlw   h'30'           ; 04 4
1C0B   3420           04325         retlw   h'20'           ; 05 5
1C0C   3421           04326         retlw   h'21'           ; 06 6
1C0D   3423           04327         retlw   h'23'           ; 07 7
1C0E   3427           04328         retlw   h'27'           ; 08 8
1C0F   342F           04329         retlw   h'2f'           ; 09 9
1C10   3400           04330         retlw   h'00'           ; 10
1C11   3400           04331         retlw   h'00'           ; 11 space
1C12   3429           04332         retlw   h'29'           ; 12 /
1C13   342A           04333         retlw   h'2a'           ; 13 ar
1C14   3431           04334         retlw   h'31'           ; 14 bt
1C15   3458           04335         retlw   h'58'           ; 15 sk
1C16   3400           04336         retlw   h'00'           ; 16
1C17   3400           04337         retlw   h'00'           ; 17
1C18   3400           04338         retlw   h'00'           ; 18
1C19   3400           04339         retlw   h'00'           ; 19
1C1A   3400           04340         retlw   h'00'           ; 20
1C1B   3406           04341         retlw   h'06'           ; 21 a
1C1C   3411           04342         retlw   h'11'           ; 22 b 
1C1D   3415           04343         retlw   h'15'           ; 23 c
1C1E   3400           04344         retlw   h'00'           ; 24
1C1F   3400           04345         retlw   h'00'           ; 25 
1C20   3400           04346         retlw   h'00'           ; 26
1C21   3400           04347         retlw   h'00'           ; 27
1C22   3400           04348         retlw   h'00'           ; 28
1C23   3400           04349         retlw   h'00'           ; 29
1C24   3400           04350         retlw   h'00'           ; 30
1C25   3409           04351         retlw   h'09'           ; 31 d
1C26   3402           04352         retlw   h'02'           ; 32 e
1C27   3414           04353         retlw   h'14'           ; 33 f
1C28   3400           04354         retlw   h'00'           ; 34
1C29   3400           04355         retlw   h'00'           ; 35
1C2A   3400           04356         retlw   h'00'           ; 36
1C2B   3400           04357         retlw   h'00'           ; 37
1C2C   3400           04358         retlw   h'00'           ; 38
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C2D   3400           04359         retlw   h'00'           ; 39
1C2E   3400           04360         retlw   h'00'           ; 40
1C2F   340B           04361         retlw   h'0b'           ; 41 g
1C30   3410           04362         retlw   h'10'           ; 42 h
1C31   3404           04363         retlw   h'04'           ; 43 i
1C32   3400           04364         retlw   h'00'           ; 44
1C33   3400           04365         retlw   h'00'           ; 45
1C34   3400           04366         retlw   h'00'           ; 46
1C35   3400           04367         retlw   h'00'           ; 47
1C36   3400           04368         retlw   h'00'           ; 48
1C37   3400           04369         retlw   h'00'           ; 49
1C38   3400           04370         retlw   h'00'           ; 50
1C39   341E           04371         retlw   h'1e'           ; 51 j
1C3A   340D           04372         retlw   h'0d'           ; 52 k
1C3B   3412           04373         retlw   h'12'           ; 53 l
1C3C   3400           04374         retlw   h'00'           ; 54
1C3D   3400           04375         retlw   h'00'           ; 55
1C3E   3400           04376         retlw   h'00'           ; 56
1C3F   3400           04377         retlw   h'00'           ; 57
1C40   3400           04378         retlw   h'00'           ; 58
1C41   3400           04379         retlw   h'00'           ; 59
1C42   3400           04380         retlw   h'00'           ; 60
1C43   3407           04381         retlw   h'07'           ; 61 m
1C44   3405           04382         retlw   h'05'           ; 62 n
1C45   340F           04383         retlw   h'0f'           ; 63 o
1C46   3400           04384         retlw   h'00'           ; 64
1C47   3400           04385         retlw   h'00'           ; 65
1C48   3400           04386         retlw   h'00'           ; 66
1C49   3400           04387         retlw   h'00'           ; 67
1C4A   3400           04388         retlw   h'00'           ; 68
1C4B   3400           04389         retlw   h'00'           ; 69
1C4C   341B           04390         retlw   h'1b'           ; 70 q
1C4D   3416           04391         retlw   h'16'           ; 71 p
1C4E   340A           04392         retlw   h'0a'           ; 72 r
1C4F   3408           04393         retlw   h'08'           ; 73 s
1C50   3400           04394         retlw   h'00'           ; 74
1C51   3400           04395         retlw   h'00'           ; 75
1C52   3400           04396         retlw   h'00'           ; 76
1C53   3400           04397         retlw   h'00'           ; 77
1C54   3400           04398         retlw   h'00'           ; 78
1C55   3400           04399         retlw   h'00'           ; 79
1C56   3400           04400         retlw   h'00'           ; 80
1C57   3403           04401         retlw   h'03'           ; 81 t
1C58   340C           04402         retlw   h'0c'           ; 82 u
1C59   3418           04403         retlw   h'18'           ; 83 v
1C5A   3400           04404         retlw   h'00'           ; 84
1C5B   3400           04405         retlw   h'00'           ; 85
1C5C   3400           04406         retlw   h'00'           ; 86
1C5D   3400           04407         retlw   h'00'           ; 87
1C5E   3400           04408         retlw   h'00'           ; 88
1C5F   3400           04409         retlw   h'00'           ; 89
1C60   3413           04410         retlw   h'13'           ; 90 z
1C61   340E           04411         retlw   h'0e'           ; 91 w
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C62   3419           04412         retlw   h'19'           ; 92 x
1C63   341D           04413         retlw   h'1d'           ; 93 y
1C64   3400           04414         retlw   h'00'           ; 94
1C65   3400           04415         retlw   h'00'           ; 95
1C66   3400           04416         retlw   h'00'           ; 96
1C67   3400           04417         retlw   h'00'           ; 97
1C68   3400           04418         retlw   h'00'           ; 98
1C69   3400           04419         retlw   h'00'           ; 99
1C6A   3400           04420         retlw   h'00'           ; 100 -- all after 99 are a result of laziness.
1C6B   3400           04421         retlw   h'00'           ; 101
1C6C   3400           04422         retlw   h'00'           ; 102
1C6D   3400           04423         retlw   h'00'           ; 103
1C6E   3400           04424         retlw   h'00'           ; 104
1C6F   3400           04425         retlw   h'00'           ; 105
1C70   3400           04426         retlw   h'00'           ; 106
1C71   3400           04427         retlw   h'00'           ; 107
1C72   3400           04428         retlw   h'00'           ; 108
1C73   3400           04429         retlw   h'00'           ; 109
1C74   3400           04430         retlw   h'00'           ; 110
1C75   3400           04431         retlw   h'00'           ; 111
1C76   3400           04432         retlw   h'00'           ; 112
1C77   3400           04433         retlw   h'00'           ; 113
1C78   3400           04434         retlw   h'00'           ; 114
1C79   3400           04435         retlw   h'00'           ; 115
1C7A   3400           04436         retlw   h'00'           ; 116
1C7B   3400           04437         retlw   h'00'           ; 117
1C7C   3400           04438         retlw   h'00'           ; 118
1C7D   3400           04439         retlw   h'00'           ; 119
1C7E   3400           04440         retlw   h'00'           ; 120
1C7F   3400           04441         retlw   h'00'           ; 121
1C80   3400           04442         retlw   h'00'           ; 122
1C81   3400           04443         retlw   h'00'           ; 123
1C82   3400           04444         retlw   h'00'           ; 124
1C83   3400           04445         retlw   h'00'           ; 125
1C84   3400           04446         retlw   h'00'           ; 126
1C85   3400           04447         retlw   h'00'           ; 127
                      04448 
                      04449 ; *************
                      04450 ; ** GetCWD  **
                      04451 ; *************
                      04452         ;; get CW Delay 
1C86                  04453 GetCWD                          ; get cw delay from table
1C86   00A9           04454         movwf   temp            ; save addr.
1C87   301C           04455         movlw   high CWDTbl     ; set page 
1C88   008A           04456         movwf   PCLATH          ; select page
1C89   0829           04457         movf    temp,w          ; get speed into w
1C8A   391F           04458         andlw   h'1f'           ; force into valid range
1C8B   0782           04459         addwf   PCL,f           ; add w to PCL
1C8C                  04460 CWDTbl
1C8C   34F0           04461         retlw   d'240'          ;  0 -- use 5 WPM
1C8D   34F0           04462         retlw   d'240'          ;  1 -- use 5 WPM
1C8E   34F0           04463         retlw   d'240'          ;  2 -- use 5 WPM
1C8F   34F0           04464         retlw   d'240'          ;  3 -- use 5 WPM
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C90   34F0           04465         retlw   d'240'          ;  4 -- use 5 WPM
1C91   34F0           04466         retlw   d'240'          ;  5 WPM
1C92   34C8           04467         retlw   d'200'          ;  6
1C93   34AB           04468         retlw   d'171'          ;  7
1C94   3496           04469         retlw   d'150'          ;  8
1C95   3485           04470         retlw   d'133'          ;  9
1C96   3478           04471         retlw   d'120'          ; 10
1C97   346D           04472         retlw   d'109'          ; 11
1C98   3464           04473         retlw   d'100'          ; 12
1C99   345C           04474         retlw   d'92'           ; 13
1C9A   3456           04475         retlw   d'86'           ; 14
1C9B   3450           04476         retlw   d'80'           ; 15
1C9C   344B           04477         retlw   d'75'           ; 16
1C9D   3447           04478         retlw   d'71'           ; 17
1C9E   3443           04479         retlw   d'67'           ; 18
1C9F   343F           04480         retlw   d'63'           ; 19
1CA0   343C           04481         retlw   d'60'           ; 20
1CA1   3439           04482         retlw   d'57'           ; 21
1CA2   3437           04483         retlw   d'55'           ; 22
1CA3   3434           04484         retlw   d'52'           ; 23
1CA4   3432           04485         retlw   d'50'           ; 24
1CA5   3430           04486         retlw   d'48'           ; 25
1CA6   342E           04487         retlw   d'46'           ; 26
1CA7   342C           04488         retlw   d'44'           ; 27
1CA8   342B           04489         retlw   d'43'           ; 28
1CA9   3429           04490         retlw   d'41'           ; 29
1CAA   3428           04491         retlw   d'40'           ; 30
1CAB   3428           04492         retlw   d'40'           ; 31 - use 30 WPM
                      04493 
                      04494         IFDEF NHRC3_1
                      04495 
                      04496 ; *************************************************
                      04497 ; ** GetIS1 -- get 1st byte of ISD start address **
                      04498 ; *************************************************
                      04499 GetIS1
                      04500         movlw   high GetIS1t    ; set page 
                      04501         movwf   PCLATH          ; select page
                      04502         movf    isdMsg,w        ; get ISD message number
                      04503         andlw   b'00000111'     ; mask to only 0-7 valid
                      04504         addwf   PCL,f           ; add w to PCL
                      04505 GetIS1t
                      04506         retlw   h'08'
                      04507         retlw   h'00'
                      04508         retlw   h'0f'
                      04509         retlw   h'07'
                      04510         retlw   h'0b'
                      04511         retlw   h'03'
                      04512         retlw   h'0d'
                      04513         retlw   h'05'
                      04514 
                      04515 ; *************************************************
                      04516 ; ** GetIS2 -- get 2nd byte of ISD start address **
                      04517 ; *************************************************
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04518 GetIS2
                      04519         movlw   high GetIS2t    ; set page 
                      04520         movwf   PCLATH          ; select page
                      04521         movf    isdMsg,w        ; get ISD message number
                      04522         andlw   b'00000111'     ; mask to only 0-7 valid
                      04523         addwf   PCL,f           ; add w to PCL
                      04524 GetIS2t
                      04525         retlw   h'00'
                      04526         retlw   h'80'
                      04527         retlw   h'80'
                      04528         retlw   h'40'
                      04529         retlw   h'c0'
                      04530         retlw   h'20'
                      04531         retlw   h'a0'
                      04532         retlw   h'60'
                      04533 
                      04534 ; *************************************************
                      04535 ; ** GetIE1 -- get 1st byte of ISD  end  address **
                      04536 ; *************************************************
                      04537 GetIE1
                      04538         movlw   high GetIE1t    ; set page 
                      04539         movwf   PCLATH          ; select page
                      04540         movf    isdMsg,w        ; get ISD message number
                      04541         andlw   b'00000111'     ; mask to only 0-7 valid
                      04542         addwf   PCL,f           ; add w to PCL
                      04543 GetIE1t
                      04544         retlw   h'ff'
                      04545         retlw   h'f7'
                      04546         retlw   h'fb'
                      04547         retlw   h'f3'
                      04548         retlw   h'fd'
                      04549         retlw   h'f5'
                      04550         retlw   h'f9'
                      04551         retlw   h'f1'
                      04552 
                      04553 ; *************************************************
                      04554 ; ** GetIE2 -- get 2nd byte of ISD  end  address **
                      04555 ; *************************************************
                      04556 GetIE2
                      04557         movlw   high GetIE2t    ; set page 
                      04558         movwf   PCLATH          ; select page
                      04559         movf    isdMsg,w        ; get ISD message number
                      04560         andlw   b'00000111'     ; mask to only 0-7 valid
                      04561         addwf   PCL,f           ; add w to PCL
                      04562 GetIE2t
                      04563         retlw   h'00'
                      04564         retlw   h'80'
                      04565         retlw   h'40'
                      04566         retlw   h'c0'
                      04567         retlw   h'20'
                      04568         retlw   h'a0'
                      04569         retlw   h'60'
                      04570         retlw   h'e0'
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04571 
                      04572         ELSE
                      04573 
                      04574 ; *************************************************
                      04575 ; ** GetIS1 -- get 1st byte of ISD start address **
                      04576 ; *************************************************
1CAC                  04577 GetIS1
1CAC   301C           04578         movlw   high GetIS1t    ; set page 
1CAD   008A           04579         movwf   PCLATH          ; select page
1CAE   0856           04580         movf    isdMsg,w        ; get ISD message number
1CAF   3903           04581         andlw   b'00000011'     ; mask to only 0-3 valid
1CB0   0782           04582         addwf   PCL,f           ; add w to PCL
1CB1                  04583 GetIS1t
1CB1   3408           04584         retlw   h'08'
1CB2   340A           04585         retlw   h'0a'
1CB3   3409           04586         retlw   h'09'
1CB4   340B           04587         retlw   h'0b'
                      04588 
                      04589 ; *************************************************
                      04590 ; ** GetIS2 -- get 2nd byte of ISD start address **
                      04591 ; *************************************************
1CB5                  04592 GetIS2
1CB5   301C           04593         movlw   high GetIS2t    ; set page 
1CB6   008A           04594         movwf   PCLATH          ; select page
1CB7   0856           04595         movf    isdMsg,w        ; get ISD message number
1CB8   3903           04596         andlw   b'00000011'     ; mask to only 0-3 valid
1CB9   0782           04597         addwf   PCL,f           ; add w to PCL
1CBA                  04598 GetIS2t
1CBA   3400           04599         retlw   h'00'
1CBB   3400           04600         retlw   h'00'
1CBC   3400           04601         retlw   h'00'
1CBD   3400           04602         retlw   h'00'
                      04603 
                      04604 ; *************************************************
                      04605 ; ** GetIE1 -- get 1st byte of ISD  end  address **
                      04606 ; *************************************************
1CBE                  04607 GetIE1
1CBE   301C           04608         movlw   high GetIE1t    ; set page 
1CBF   008A           04609         movwf   PCLATH          ; select page
1CC0   0856           04610         movf    isdMsg,w        ; get ISD message number
1CC1   3903           04611         andlw   b'00000011'     ; mask to only 0-3 valid
1CC2   0782           04612         addwf   PCL,f           ; add w to PCL
1CC3                  04613 GetIE1t
1CC3   34F2           04614         retlw   h'f2'
1CC4   34F1           04615         retlw   h'f1'
1CC5   34F3           04616         retlw   h'f3'
1CC6   34F0           04617         retlw   h'f0'
                      04618 
                      04619 ; *************************************************
                      04620 ; ** GetIE2 -- get 2nd byte of ISD  end  address **
                      04621 ; *************************************************
1CC7                  04622 GetIE2
1CC7   301C           04623         movlw   high GetIE2t    ; set page 
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CC8   008A           04624         movwf   PCLATH          ; select page
1CC9   0856           04625         movf    isdMsg,w        ; get ISD message number
1CCA   3903           04626         andlw   b'00000011'     ; mask to only 0-3 valid
1CCB   0782           04627         addwf   PCL,f           ; add w to PCL
1CCC                  04628 GetIE2t
1CCC   3400           04629         retlw   h'00'
1CCD   3400           04630         retlw   h'00'
1CCE   3400           04631         retlw   h'00'
1CCF   3480           04632         retlw   h'80'
                      04633 
                      04634         ENDIF
                      04635 
1D00                  04636         org     h'1d00'
1D00                  04637 InitDat
1D00   00A9           04638         movwf   temp            ; save addr.
1D01   301D           04639         movlw   high InitTbl    ; set page
1D02   008A           04640         movwf   PCLATH          ; select page
1D03   0829           04641         movf    temp,w          ; get address back
1D04   0782           04642         addwf   PCL,f           ; add w to PCL
1D05                  04643 InitTbl
                      04644         ;; timer initial defaults
1D05   3464           04645         retlw   d'100'          ; 0000 hang timer long 10.0 sec
1D06   3432           04646         retlw   d'50'           ; 0001 hang timer short 5.0 sec
1D07   3436           04647         retlw   d'54'           ; 0002 ID timer 9.0 min
1D08   343C           04648         retlw   d'60'           ; 0003 DTMF access timer 60 sec
1D09   34B4           04649         retlw   d'180'          ; 0004 timeout timer long 180 sec
1D0A   341E           04650         retlw   d'30'           ; 0005 timeout timer short 30 sec
1D0B   340C           04651         retlw   d'12'           ; 0006 fan timer 120 sec
1D0C   3400           04652         retlw   d'0'            ; 0007 tail message counter - units
1D0D   340C           04653         retlw   d'12'           ; 0008 alarm announce timer - tens
1D0E   3414           04654         retlw   d'20'           ; 0009 cw pitch
1D0F   3414           04655         retlw   d'20'           ; 000a cw speed
1D10   3400           04656         retlw   d'0'            ; 000b spare
1D11   3400           04657         retlw   d'0'            ; 000c spare
1D12   3400           04658         retlw   d'0'            ; 000d spare
1D13   3400           04659         retlw   d'0'            ; 000e spare
1D14   3400           04660         retlw   d'0'            ; 000f spare
                      04661 
                      04662         ;; control operator switches, set 0
1D15   3448           04663         retlw   b'01001000'     ; 0010 control operator switches, group 0
1D16   340B           04664         retlw   b'00001011'     ; 0011 control operator switches, group 1
1D17   341F           04665         retlw   b'00011111'     ; 0012 control operator switches, group 2
1D18   3400           04666         retlw   b'00000000'     ; 0013 control operator switches, group 3
1D19   3400           04667         retlw   b'00000000'     ; 0014 control operator switches, group 4
1D1A   3400           04668         retlw   b'00000000'     ; 0015 control operator switches, group 5
1D1B   3400           04669         retlw   b'00000000'     ; 0016 control operator switches, group 6
1D1C   347F           04670         retlw   b'01111111'     ; 0017 control operator switches, group 7
1D1D   3400           04671         retlw   h'00'           ; 0018 spare
1D1E   3400           04672         retlw   h'00'           ; 0019 spare
1D1F   3400           04673         retlw   h'00'           ; 001a spare
1D20   3400           04674         retlw   h'00'           ; 001b spare
1D21   3400           04675         retlw   h'00'           ; 001c spare
1D22   3400           04676         retlw   h'00'           ; 001d spare
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D23   3400           04677         retlw   h'00'           ; 001e spare
1D24   3400           04678         retlw   h'00'           ; 001f spare
                      04679 
                      04680         ;; control operator switches, set 1
                      04681         ;; changed at 1.06 so set 1 will default to Euro operation.
1D25   344B           04682         retlw   b'01001011'     ; 0020 control operator switches, group 0
1D26   340F           04683         retlw   b'00001111'     ; 0021 control operator switches, group 1
1D27   340D           04684         retlw   b'00001101'     ; 0022 control operator switches, group 2
1D28   3401           04685         retlw   b'00000001'     ; 0023 control operator switches, group 3
1D29   3400           04686         retlw   b'00000000'     ; 0024 control operator switches, group 4
1D2A   3400           04687         retlw   b'00000000'     ; 0025 control operator switches, group 5
1D2B   3400           04688         retlw   b'00000000'     ; 0026 control operator switches, group 6
1D2C   343F           04689         retlw   b'00111111'     ; 0027 control operator switches, group 7
1D2D   3400           04690         retlw   h'00'           ; 0028 spare
1D2E   3400           04691         retlw   h'00'           ; 0029 spare
1D2F   3400           04692         retlw   h'00'           ; 002a spare
1D30   3400           04693         retlw   h'00'           ; 002b spare
1D31   3400           04694         retlw   h'00'           ; 002c spare
1D32   3400           04695         retlw   h'00'           ; 002d spare
1D33   3400           04696         retlw   h'00'           ; 002e spare
1D34   3400           04697         retlw   h'00'           ; 002f spare
                      04698 
                      04699         ;; control operator switches, set 2
1D35   3448           04700         retlw   b'01001000'     ; 0030 control operator switches, group 0
1D36   340B           04701         retlw   b'00001011'     ; 0031 control operator switches, group 1
1D37   341F           04702         retlw   b'00011111'     ; 0032 control operator switches, group 2
1D38   3400           04703         retlw   b'00000000'     ; 0033 control operator switches, group 3
1D39   3400           04704         retlw   b'00000000'     ; 0034 control operator switches, group 4
1D3A   3400           04705         retlw   b'00000000'     ; 0035 control operator switches, group 5
1D3B   3400           04706         retlw   b'00000000'     ; 0036 control operator switches, group 6
1D3C   347F           04707         retlw   b'01111111'     ; 0037 control operator switches, group 7
1D3D   3400           04708         retlw   h'00'           ; 0038 spare
1D3E   3400           04709         retlw   h'00'           ; 0039 spare
1D3F   3400           04710         retlw   h'00'           ; 003a spare
1D40   3400           04711         retlw   h'00'           ; 003b spare
1D41   3400           04712         retlw   h'00'           ; 003c spare
1D42   3400           04713         retlw   h'00'           ; 003d spare
1D43   3400           04714         retlw   h'00'           ; 003e spare
1D44   3400           04715         retlw   h'00'           ; 003f spare
                      04716 
                      04717         ;; control operator switches, set 3
1D45   3448           04718         retlw   b'01001000'     ; 0040 control operator switches, group 0
1D46   340B           04719         retlw   b'00001011'     ; 0041 control operator switches, group 1
1D47   341F           04720         retlw   b'00011111'     ; 0042 control operator switches, group 2
1D48   3400           04721         retlw   b'00000000'     ; 0043 control operator switches, group 3
1D49   3400           04722         retlw   b'00000000'     ; 0044 control operator switches, group 4
1D4A   3400           04723         retlw   b'00000000'     ; 0045 control operator switches, group 5
1D4B   3400           04724         retlw   b'00000000'     ; 0046 control operator switches, group 6
1D4C   347F           04725         retlw   b'01111111'     ; 0047 control operator switches, group 7
1D4D   3400           04726         retlw   h'00'           ; 0048 spare
1D4E   3400           04727         retlw   h'00'           ; 0049 spare
1D4F   3400           04728         retlw   h'00'           ; 004a spare
1D50   3400           04729         retlw   h'00'           ; 004b spare
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D51   3400           04730         retlw   h'00'           ; 004c spare
1D52   3400           04731         retlw   h'00'           ; 004d spare
1D53   3400           04732         retlw   h'00'           ; 004e spare
1D54   3400           04733         retlw   h'00'           ; 004f spare
                      04734 
                      04735         ;; control operator switches, set 4
1D55   3448           04736         retlw   b'01001000'     ; 0050 control operator switches, group 0
1D56   340B           04737         retlw   b'00001011'     ; 0051 control operator switches, group 1
1D57   341F           04738         retlw   b'00011111'     ; 0052 control operator switches, group 2
1D58   3400           04739         retlw   b'00000000'     ; 0053 control operator switches, group 3
1D59   3400           04740         retlw   b'00000000'     ; 0054 control operator switches, group 4
1D5A   3400           04741         retlw   b'00000000'     ; 0055 control operator switches, group 5
1D5B   3400           04742         retlw   b'00000000'     ; 0056 control operator switches, group 6
1D5C   347F           04743         retlw   b'01111111'     ; 0057 control operator switches, group 7
1D5D   3400           04744         retlw   h'00'           ; 0058 spare
1D5E   3400           04745         retlw   h'00'           ; 0059 spare
1D5F   3400           04746         retlw   h'00'           ; 005a spare
1D60   3400           04747         retlw   h'00'           ; 005b spare
1D61   3400           04748         retlw   h'00'           ; 005c spare
1D62   3400           04749         retlw   h'00'           ; 005d spare
1D63   3400           04750         retlw   h'00'           ; 005e spare
1D64   3400           04751         retlw   h'00'           ; 005f spare
                      04752         
                      04753         ;; courtesy tone initial defaults
                      04754         ;; Main Receiver Courtesy Tone
1D65   3405           04755         retlw   h'05'           ; 0060 Courtesy tone 0 00 length seg 1
1D66   348C           04756         retlw   h'8c'           ; 0061 Courtesy tone 0 01 tone seg 1
1D67   3405           04757         retlw   h'05'           ; 0062 Courtesy tone 0 02 length seg 2
1D68   348F           04758         retlw   h'8f'           ; 0063 Courtesy tone 0 03 tone seg 2
1D69   3405           04759         retlw   h'05'           ; 0064 Courtesy tone 0 04 length seg 3
1D6A   3493           04760         retlw   h'93'           ; 0065 Courtesy tone 0 05 tone seg 3
1D6B   3405           04761         retlw   h'05'           ; 0066 Courtesy tone 0 06 length seg 4
1D6C   3416           04762         retlw   h'16'           ; 0067 Courtesy tone 0 07 tone seg 4
                      04763         ;; Main Receiver Courtesy Tone, Link RX active, alert mode.
1D6D   340A           04764         retlw   h'0a'           ; 0068 Courtesy Tone 1 00 length seg 1
1D6E   348C           04765         retlw   h'8c'           ; 0069 Courtesy Tone 1 01 tone seg 1
1D6F   340A           04766         retlw   h'0a'           ; 006a Courtesy Tone 1 02 length seg 2
1D70   340F           04767         retlw   h'0f'           ; 006b Courtesy Tone 1 03 tone seg 2
1D71   3400           04768         retlw   h'00'           ; 006c Courtesy Tone 1 04 length seg 3
1D72   3400           04769         retlw   h'00'           ; 006d Courtesy Tone 1 05 tone seg 3
1D73   3400           04770         retlw   h'00'           ; 006e Courtesy Tone 1 06 length seg 4
1D74   3400           04771         retlw   h'00'           ; 006f Courtesy Tone 1 07 tone seg 4
                      04772         ;; Main Receiver Courtesy Tone, Link TX on
1D75   340A           04773         retlw   h'0a'           ; 0070 Courtesy tone 2 00 length seg 1
1D76   348C           04774         retlw   h'8c'           ; 0071 Courtesy tone 2 01 tone seg 1
1D77   340A           04775         retlw   h'0a'           ; 0072 Courtesy tone 2 02 length seg 2
1D78   348F           04776         retlw   h'8f'           ; 0073 Courtesy tone 2 03 tone seg 2
1D79   340A           04777         retlw   h'0a'           ; 0074 Courtesy tone 2 04 length seg 3
1D7A   3415           04778         retlw   h'15'           ; 0075 Courtesy tone 2 05 tone seg 3
1D7B   3400           04779         retlw   h'00'           ; 0076 Courtesy tone 2 06 length seg 4
1D7C   3400           04780         retlw   h'00'           ; 0077 Courtesy tone 2 07 tone seg 4
                      04781         ;; Link Receiver Courtesy Tone
1D7D   3405           04782         retlw   h'05'           ; 0078 Courtesy Tone 3 00 length seg 1
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D7E   3496           04783         retlw   h'96'           ; 0079 Courtesy Tone 3 01 tone seg 1
1D7F   3405           04784         retlw   h'05'           ; 007a Courtesy Tone 3 02 length seg 2
1D80   3493           04785         retlw   h'93'           ; 007b Courtesy Tone 3 03 tone seg 2
1D81   3405           04786         retlw   h'05'           ; 007c Courtesy Tone 3 04 length seg 3
1D82   348F           04787         retlw   h'8f'           ; 007d Courtesy Tone 3 05 tone seg 3
1D83   3405           04788         retlw   h'05'           ; 007e Courtesy Tone 3 06 length seg 4
1D84   340B           04789         retlw   h'0b'           ; 007f Courtesy Tone 3 07 tone seg 4
                      04790         ;; Link Receiver Courtesy Tone, Link TX on
1D85   340A           04791         retlw   h'0a'           ; 0080 Courtesy tone 4 00 length seg 1
1D86   3496           04792         retlw   h'96'           ; 0081 Courtesy tone 4 01 tone seg 1
1D87   340A           04793         retlw   h'0a'           ; 0082 Courtesy tone 4 02 length seg 2
1D88   3493           04794         retlw   h'93'           ; 0083 Courtesy tone 4 03 tone seg 2
1D89   340A           04795         retlw   h'0a'           ; 0084 Courtesy tone 4 04 length seg 3
1D8A   3410           04796         retlw   h'10'           ; 0085 Courtesy tone 4 05 tone seg 3
1D8B   3400           04797         retlw   h'00'           ; 0086 Courtesy tone 4 06 length seg 4
1D8C   3400           04798         retlw   h'00'           ; 0087 Courtesy tone 4 07 tone seg 4
                      04799         ;; Spare Courtesy Tone
1D8D   340A           04800         retlw   h'0a'           ; 0088 Courtesy Tone 5 00 length seg 1
1D8E   3408           04801         retlw   h'08'           ; 0089 Courtesy Tone 5 01 tone seg 1
1D8F   3400           04802         retlw   h'00'           ; 008a Courtesy Tone 5 02 length seg 2
1D90   3400           04803         retlw   h'00'           ; 008b Courtesy Tone 5 03 tone seg 2
1D91   3400           04804         retlw   h'00'           ; 008c Courtesy Tone 5 04 length seg 3
1D92   3400           04805         retlw   h'00'           ; 008d Courtesy Tone 5 05 tone seg 3
1D93   3400           04806         retlw   h'00'           ; 008e Courtesy Tone 5 06 length seg 4
1D94   3400           04807         retlw   h'00'           ; 008f Courtesy Tone 5 07 tone seg 4
                      04808         ;; Tune Mode Courtesy Tone
1D95   340A           04809         retlw   h'0a'           ; 0090 Courtesy tone 6 00 length seg 1
1D96   3413           04810         retlw   h'13'           ; 0091 Courtesy tone 6 01 tone seg 1
1D97   3400           04811         retlw   h'00'           ; 0092 Courtesy tone 6 02 length seg 2
1D98   3400           04812         retlw   h'00'           ; 0093 Courtesy tone 6 03 tone seg 2
1D99   3400           04813         retlw   h'00'           ; 0094 Courtesy tone 6 04 length seg 3
1D9A   3400           04814         retlw   h'00'           ; 0095 Courtesy tone 6 05 tone seg 3
1D9B   3400           04815         retlw   h'00'           ; 0096 Courtesy tone 6 06 length seg 4
1D9C   3400           04816         retlw   h'00'           ; 0097 Courtesy tone 6 07 tone seg 4
                      04817         ;; Unlocked Mode Courtesy Tone.
1D9D   340A           04818         retlw   h'0a'           ; 0098 Courtesy Tone 7 00 length seg 1
1D9E   349F           04819         retlw   h'9f'           ; 0099 Courtesy Tone 7 01 tone seg 1
1D9F   340A           04820         retlw   h'0a'           ; 009a Courtesy Tone 7 02 length seg 2
1DA0   3493           04821         retlw   h'93'           ; 009b Courtesy Tone 7 03 tone seg 2
1DA1   340A           04822         retlw   h'0a'           ; 009c Courtesy Tone 7 04 length seg 3
1DA2   349F           04823         retlw   h'9f'           ; 009d Courtesy Tone 7 05 tone seg 3
1DA3   340A           04824         retlw   h'0a'           ; 009e Courtesy Tone 7 06 length seg 4
1DA4   3413           04825         retlw   h'13'           ; 009f Courtesy Tone 7 07 tone seg 4
                      04826         
                      04827         ;; cw id initial defaults
1DA5   3405           04828         retlw   h'05'           ; 00a0 CW ID  1 'N'  CW ID
1DA6   3410           04829         retlw   h'10'           ; 00a1 CW ID  2 'H'
1DA7   340A           04830         retlw   h'0a'           ; 00a2 CW ID  3 'R'
1DA8   3415           04831         retlw   h'15'           ; 00a3 CW ID  4 'C'
1DA9   3400           04832         retlw   h'00'           ; 00a4 CW ID  5 ' '
1DAA   3438           04833         retlw   h'38'           ; 00a5 CW ID  6 '3'
1DAB   346A           04834         retlw   h'6a'           ; 00a6 CW ID  7 '.'
1DAC   343E           04835         retlw   h'3e'           ; 00a7 CW ID  8 '1'
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DAD   3400           04836         retlw   h'00'           ; 00a8 CW ID  9 ' '
1DAE   3418           04837         retlw   h'18'           ; 00a9 CW ID 10 'V'  VERSION DATA
1DAF   343E           04838         retlw   VERS1           ; 00aa CW ID 11 -- defined at file head
1DB0   346A           04839         retlw   h'6a'           ; 00ab CW ID 12 '.'
1DB1   343F           04840         retlw   VERS2           ; 00ac CW ID 13 -- defined at file head
1DB2   343C           04841         retlw   VERS3           ; 00ad CW ID 14 -- defined at file head
1DB3   34FF           04842         retlw   h'ff'           ; 00ae CW ID 15 eom
1DB4   34FF           04843         retlw   h'ff'           ; 00af CW ID 16 eom
                      04844         
                      04845         ;; control prefixes
1DB5   3400           04846         retlw   h'00'           ; 00b0 control prefix 0  00
1DB6   3400           04847         retlw   h'00'           ; 00b1 control prefix 0  01
1DB7   34FF           04848         retlw   h'ff'           ; 00b2 control prefix 0  02
1DB8   34FF           04849         retlw   h'ff'           ; 00b3 control prefix 0  03
1DB9   34FF           04850         retlw   h'ff'           ; 00b4 control prefix 0  04
1DBA   34FF           04851         retlw   h'ff'           ; 00b5 control prefix 0  05
1DBB   34FF           04852         retlw   h'ff'           ; 00b6 control prefix 0  06
1DBC   34FF           04853         retlw   h'ff'           ; 00b7 control prefix 0  07
1DBD   3400           04854         retlw   h'00'           ; 00b8 control prefix 1  00
1DBE   3401           04855         retlw   h'01'           ; 00b9 control prefix 1  01
1DBF   34FF           04856         retlw   h'ff'           ; 00ba control prefix 1  02
1DC0   34FF           04857         retlw   h'ff'           ; 00bb control prefix 1  03
1DC1   34FF           04858         retlw   h'ff'           ; 00bc control prefix 1  04
1DC2   34FF           04859         retlw   h'ff'           ; 00bd control prefix 1  05
1DC3   34FF           04860         retlw   h'ff'           ; 00be control prefix 1  06
1DC4   34FF           04861         retlw   h'ff'           ; 00bf control prefix 1  07
1DC5   3400           04862         retlw   h'00'           ; 00c0 control prefix 2  00
1DC6   3402           04863         retlw   h'02'           ; 00c1 control prefix 2  01
1DC7   34FF           04864         retlw   h'ff'           ; 00c2 control prefix 2  02
1DC8   34FF           04865         retlw   h'ff'           ; 00c3 control prefix 2  03
1DC9   34FF           04866         retlw   h'ff'           ; 00c4 control prefix 2  04
1DCA   34FF           04867         retlw   h'ff'           ; 00c5 control prefix 2  05
1DCB   34FF           04868         retlw   h'ff'           ; 00c6 control prefix 2  06
1DCC   34FF           04869         retlw   h'ff'           ; 00c7 control prefix 2  07
1DCD   3400           04870         retlw   h'00'           ; 00c8 control prefix 3  00
1DCE   3403           04871         retlw   h'03'           ; 00c9 control prefix 3  01
1DCF   34FF           04872         retlw   h'ff'           ; 00ca control prefix 3  02
1DD0   34FF           04873         retlw   h'ff'           ; 00cb control prefix 3  03
1DD1   34FF           04874         retlw   h'ff'           ; 00cc control prefix 3  04
1DD2   34FF           04875         retlw   h'ff'           ; 00cd control prefix 3  05
1DD3   34FF           04876         retlw   h'ff'           ; 00ce control prefix 3  06
1DD4   34FF           04877         retlw   h'ff'           ; 00cf control prefix 3  07
1DD5   3400           04878         retlw   h'00'           ; 00d0 control prefix 4  00
1DD6   3404           04879         retlw   h'04'           ; 00d1 control prefix 4  01
1DD7   34FF           04880         retlw   h'ff'           ; 00d2 control prefix 4  02
1DD8   34FF           04881         retlw   h'ff'           ; 00d3 control prefix 4  03
1DD9   34FF           04882         retlw   h'ff'           ; 00d4 control prefix 4  04
1DDA   34FF           04883         retlw   h'ff'           ; 00d5 control prefix 4  05
1DDB   34FF           04884         retlw   h'ff'           ; 00d6 control prefix 4  06
1DDC   34FF           04885         retlw   h'ff'           ; 00d7 control prefix 4  07
1DDD   3400           04886         retlw   h'00'           ; 00d8 control prefix 5  00
1DDE   3405           04887         retlw   h'05'           ; 00d9 control prefix 5  01
1DDF   34FF           04888         retlw   h'ff'           ; 00da control prefix 5  02
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DE0   34FF           04889         retlw   h'ff'           ; 00db control prefix 5  03
1DE1   34FF           04890         retlw   h'ff'           ; 00dc control prefix 5  04
1DE2   34FF           04891         retlw   h'ff'           ; 00dd control prefix 5  05
1DE3   34FF           04892         retlw   h'ff'           ; 00de control prefix 5  06
1DE4   34FF           04893         retlw   h'ff'           ; 00df control prefix 5  07
1DE5   3400           04894         retlw   h'00'           ; 00e0 control prefix 6  00
1DE6   3406           04895         retlw   h'06'           ; 00e1 control prefix 6  01
1DE7   34FF           04896         retlw   h'ff'           ; 00e2 control prefix 6  02
1DE8   34FF           04897         retlw   h'ff'           ; 00e3 control prefix 6  03
1DE9   34FF           04898         retlw   h'ff'           ; 00e4 control prefix 6  04
1DEA   34FF           04899         retlw   h'ff'           ; 00e5 control prefix 6  05
1DEB   34FF           04900         retlw   h'ff'           ; 00e6 control prefix 6  06
1DEC   34FF           04901         retlw   h'ff'           ; 00e7 control prefix 6  07
1DED   3400           04902         retlw   h'00'           ; 00e8 control prefix 7  00
1DEE   3407           04903         retlw   h'07'           ; 00e9 control prefix 7  01
1DEF   34FF           04904         retlw   h'ff'           ; 00ea control prefix 7  02
1DF0   34FF           04905         retlw   h'ff'           ; 00eb control prefix 7  03
1DF1   34FF           04906         retlw   h'ff'           ; 00ec control prefix 7  04
1DF2   34FF           04907         retlw   h'ff'           ; 00ee control prefix 7  05
1DF3   34FF           04908         retlw   h'ff'           ; 00ee control prefix 7  06
1DF4   34FF           04909         retlw   h'ff'           ; 00ef control prefix 7  07
                      04910 
1E00                  04911         org     1e00
                      04912 
                      04913 ; *************
                      04914 ; ** GetMask **
                      04915 ; *************
                      04916         ;; get the bitmask of the selected numbered bit.
1E00                  04917 GetMask                         ; get mask of selected bit number.
1E00   00A9           04918         movwf   temp            ; store 
1E01   301E           04919         movlw   high BitTbl     ; set page 
1E02   008A           04920         movwf   PCLATH          ; select page
1E03   0829           04921         movf    temp,w          ; get selected bit number into w
1E04   3907           04922         andlw   h'07'           ; force into valid range
1E05   0782           04923         addwf   PCL,f           ; add w to PCL
1E06                  04924 BitTbl
1E06   3401           04925         retlw   b'00000001'     ; 0 -- 0
1E07   3402           04926         retlw   b'00000010'     ; 1 -- 1
1E08   3404           04927         retlw   b'00000100'     ; 2 -- 2
1E09   3408           04928         retlw   b'00001000'     ; 3 -- 3
1E0A   3410           04929         retlw   b'00010000'     ; 4 -- 4
1E0B   3420           04930         retlw   b'00100000'     ; 5 -- 5
1E0C   3440           04931         retlw   b'01000000'     ; 6 -- 6
1E0D   3480           04932         retlw   b'10000000'     ; 7 -- 7
                      04933                 
                      04934 ; *************
                      04935 ; ** Get100s **
                      04936 ; *************
                      04937         ;; get the number of tens in INDF. return in w.
1E0E                  04938 Get100s                         ; get tone byte from table
1E0E   301E           04939         movlw   high HundTbl    ; set page 
1E0F   008A           04940         movwf   PCLATH          ; select page
1E10   0800           04941         movf    INDF,w          ; get tone into w
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E11   3903           04942         andlw   h'03'           ; force into valid range
1E12   0782           04943         addwf   PCL,f           ; add w to PCL
1E13                  04944 HundTbl
1E13   3400           04945         retlw   d'0'            ; 0 -- 0
1E14   3464           04946         retlw   d'100'          ; 1 -- 1
1E15   34C8           04947         retlw   d'200'          ; 2 -- 2
1E16   3400           04948         retlw   d'0'            ; 3 -- not valid
                      04949                 
                      04950 ; *************
                      04951 ; ** GetTens **
                      04952 ; *************
                      04953         ;; get the number of tens in INDF. return in w.
1E17                  04954 GetTens                         ; get tone byte from table
1E17   301E           04955         movlw   high TenTbl     ; set page 
1E18   008A           04956         movwf   PCLATH          ; select page
1E19   0800           04957         movf    INDF,w          ; get tone into w
1E1A   390F           04958         andlw   h'0f'           ; force into valid range
1E1B   0782           04959         addwf   PCL,f           ; add w to PCL
1E1C                  04960 TenTbl
1E1C   3400           04961         retlw   d'00'           ; 0 -- 0
1E1D   340A           04962         retlw   d'10'           ; 1 -- 1
1E1E   3414           04963         retlw   d'20'           ; 2 -- 2
1E1F   341E           04964         retlw   d'30'           ; 3 -- 3
1E20   3428           04965         retlw   d'40'           ; 4 -- 4
1E21   3432           04966         retlw   d'50'           ; 5 -- 5
1E22   343C           04967         retlw   d'60'           ; 6 -- 6
1E23   3446           04968         retlw   d'70'           ; 7 -- 7
1E24   3450           04969         retlw   d'80'           ; 8 -- 8
1E25   345A           04970         retlw   d'90'           ; 9 -- 9
1E26   3400           04971         retlw   d'00'           ; A -- not valid
1E27   3400           04972         retlw   d'00'           ; B -- not valid
1E28   3400           04973         retlw   d'00'           ; C -- not valid
1E29   3400           04974         retlw   d'00'           ; D -- not valid
1E2A   3400           04975         retlw   d'00'           ; * -- not valid
1E2B   3400           04976         retlw   d'00'           ; # -- not valid
                      04977                 
                      04978 ; *************
                      04979 ; ** SetTone **
                      04980 ; *************
                      04981         ;; get a tone 1/2 interval from the table.
                      04982         ;; tone 00 is NO tone (off).
                      04983         ;; start sending the tone.
1E2C                  04984 SetTone                         ; get tone bytes from table
1E2C   00A9           04985         movwf   temp            ; save w
1E2D   1903           04986         btfsc   STATUS,Z        ; is result zero?
1E2E   2E37           04987         goto    StopTone        ; yes. Stop that infernal beeping.
1E2F   265E           04988         call    GetToneH        ; get hi byte.
1E30   0096           04989         movwf   CCPR1H          ; save hi byte.
1E31   2639           04990         call    GetToneL        ; get lo byte.
1E32   0095           04991         movwf   CCPR1L          ; save lo byte.
1E33   018E           04992         clrf    TMR1L           ; clear lo byte of timer.
1E34   018F           04993         clrf    TMR1H           ; clear hi byte of timer.
1E35   1410           04994         bsf     T1CON, TMR1ON   ; turn on timer 1.  Start beeping.
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E36   0008           04995         return                  ; done.
                      04996 
1E37                  04997 StopTone                        ; stop the racket!
1E37   1010           04998         bcf     T1CON, TMR1ON   ; turn off timer 1.
1E38   0008           04999         return
                      05000         
                      05001 ; **************
                      05002 ; ** GetToneL **
                      05003 ; **************
                      05004         ;; get high byte for compare for tone.
                      05005         ;; tone 1f is NO tone (off).
1E39                  05006 GetToneL                        ; get tone hi byte from table
1E39   301E           05007         movlw   high TnTblL     ; set page 
1E3A   008A           05008         movwf   PCLATH          ; select page
1E3B   0829           05009         movf    temp,w          ; get tone into w
1E3C   391F           05010         andlw   h'1f'           ; force into valid range
1E3D   0782           05011         addwf   PCL,f           ; add w to PCL
1E3E                  05012 TnTblL
1E3E   34FF           05013         retlw   h'ff'           ; OFF -- 00
1E3F   3401           05014         retlw   h'01'           ; F4  -- 01
1E40   34B9           05015         retlw   h'b9'           ; F#4 -- 02
1E41   3475           05016         retlw   h'75'           ; G4  -- 03
1E42   3435           05017         retlw   h'35'           ; G#4 -- 04
1E43   34F8           05018         retlw   h'f8'           ; A4  -- 05
1E44   34BF           05019         retlw   h'bf'           ; A#4 -- 06
1E45   3489           05020         retlw   h'89'           ; B4  -- 07
1E46   3457           05021         retlw   h'57'           ; C5  -- 08
1E47   3427           05022         retlw   h'27'           ; C#5 -- 09
1E48   34F9           05023         retlw   h'f9'           ; D5  -- 0a
1E49   34CE           05024         retlw   h'ce'           ; D#5 -- 0b
1E4A   34A6           05025         retlw   h'a6'           ; E5  -- 0c
1E4B   3480           05026         retlw   h'80'           ; F5  -- 0d
1E4C   345C           05027         retlw   h'5c'           ; F#5 -- 0e
1E4D   343A           05028         retlw   h'3a'           ; G5  -- 0f
1E4E   341A           05029         retlw   h'1a'           ; G#5 -- 10
1E4F   34FC           05030         retlw   h'fc'           ; A5  -- 11
1E50   34DF           05031         retlw   h'df'           ; A#  -- 12
1E51   34C4           05032         retlw   h'c4'           ; B5  -- 13
1E52   34AB           05033         retlw   h'ab'           ; C6  -- 14
1E53   3493           05034         retlw   h'93'           ; C#6 -- 15
1E54   347C           05035         retlw   h'7c'           ; D6  -- 16
1E55   3467           05036         retlw   h'67'           ; D#6 -- 17
1E56   3453           05037         retlw   h'53'           ; E6  -- 18
1E57   3440           05038         retlw   h'40'           ; F6  -- 19
1E58   342E           05039         retlw   h'2e'           ; F#6 -- 1a
1E59   341D           05040         retlw   h'1d'           ; G6  -- 1b
1E5A   340D           05041         retlw   h'0d'           ; G#6 -- 1c
1E5B   34FE           05042         retlw   h'fe'           ; A6  -- 1d
1E5C   34EF           05043         retlw   h'ef'           ; A#6 -- 1e
1E5D   34E2           05044         retlw   h'e2'           ; B6  -- 1f
                      05045 
                      05046 ; **************
                      05047 ; ** GetToneH **
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05048 ; **************
                      05049         ;; get high byte for compare for tone.
                      05050         ;; tone 1f is NO tone (off).
1E5E                  05051 GetToneH                        ; get tone hi byte from table
1E5E   301E           05052         movlw   high TnTblH     ; set page 
1E5F   008A           05053         movwf   PCLATH          ; select page
1E60   0829           05054         movf    temp,w          ; get tone into w
1E61   391F           05055         andlw   h'1f'           ; force into valid range
1E62   0782           05056         addwf   PCL,f           ; add w to PCL
1E63                  05057 TnTblH
1E63   34FF           05058         retlw   h'ff'           ; OFF -- 00
1E64   3405           05059         retlw   h'05'           ; F4  -- 01
1E65   3404           05060         retlw   h'04'           ; F#4 -- 02
1E66   3404           05061         retlw   h'04'           ; G4  -- 03
1E67   3404           05062         retlw   h'04'           ; G#4 -- 04
1E68   3403           05063         retlw   h'03'           ; A4  -- 05
1E69   3403           05064         retlw   h'03'           ; A#4 -- 06
1E6A   3403           05065         retlw   h'03'           ; B4  -- 07
1E6B   3403           05066         retlw   h'03'           ; C5  -- 08
1E6C   3403           05067         retlw   h'03'           ; C#5 -- 09
1E6D   3402           05068         retlw   h'02'           ; D5  -- 0a
1E6E   3402           05069         retlw   h'02'           ; D#5 -- 0b
1E6F   3402           05070         retlw   h'02'           ; E5  -- 0c
1E70   3402           05071         retlw   h'02'           ; F5  -- 0d
1E71   3402           05072         retlw   h'02'           ; F#5 -- 0e
1E72   3402           05073         retlw   h'02'           ; G5  -- 0f
1E73   3402           05074         retlw   h'02'           ; G#5 -- 10
1E74   3401           05075         retlw   h'01'           ; A5  -- 11
1E75   3401           05076         retlw   h'01'           ; A#  -- 12
1E76   3401           05077         retlw   h'01'           ; B5  -- 13
1E77   3401           05078         retlw   h'01'           ; C6  -- 14
1E78   3401           05079         retlw   h'01'           ; C#6 -- 15
1E79   3401           05080         retlw   h'01'           ; D6  -- 16
1E7A   3401           05081         retlw   h'01'           ; D#6 -- 17
1E7B   3401           05082         retlw   h'01'           ; E6  -- 18
1E7C   3401           05083         retlw   h'01'           ; F6  -- 19
1E7D   3401           05084         retlw   h'01'           ; F#6 -- 1a
1E7E   3401           05085         retlw   h'01'           ; G6  -- 1b
1E7F   3401           05086         retlw   h'01'           ; G#6 -- 1c
1E80   3400           05087         retlw   h'00'           ; A6  -- 1d
1E81   3400           05088         retlw   h'00'           ; A#6 -- 1e
1E82   3400           05089         retlw   h'00'           ; B6  -- 1f
                      05090 
                      05091 ; **************
                      05092 ; ** MesgTabl **
                      05093 ; **************
                      05094         ;; play canned messages from ROM
                      05095         ;; byte offset is index param in w.
                      05096         ;; returns specified byte in w.
1E83                  05097 MesgTabl                        ; canned messages table (CW, beeps, DTMF, whatever)
1E83   00A9           05098         movwf   temp            ; save addr.
1E84   301E           05099         movlw   high MsgTbl     ; set page
1E85   008A           05100         movwf   PCLATH          ; select page
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1E86   0829           05101         movf    temp,w          ; get address back
1E87   393F           05102         andlw   h'3f'           ; restrict to reasonable range
1E88   0782           05103         addwf   PCL,f           ; add w to PCL
1E89                  05104 MsgTbl
1E89   340F           05105         retlw   h'0f'           ; 'O'     -- 00 CW_OK
1E8A   340D           05106         retlw   h'0d'           ; 'K'     -- 01
1E8B   34FF           05107         retlw   h'ff'           ; EOM     -- 02
1E8C   3402           05108         retlw   h'02'           ; 'E'     -- 03 CW_ERR
1E8D   340A           05109         retlw   h'0a'           ; 'R'     -- 04
1E8E   340A           05110         retlw   h'0a'           ; 'R'     -- 05
1E8F   34FF           05111         retlw   h'ff'           ; EOM     -- 06
1E90   3403           05112         retlw   h'03'           ; 'T'     -- 07 CW_TO
1E91   340F           05113         retlw   h'0f'           ; '0'     -- 08
1E92   34FF           05114         retlw   h'ff'           ; EOM     -- 09
1E93   340F           05115         retlw   h'0f'           ; 'O'     -- 0a CW_ON
1E94   3405           05116         retlw   h'05'           ; 'N'     -- 0b
1E95   34FF           05117         retlw   h'ff'           ; EOM     -- 0c
1E96   340F           05118         retlw   h'0f'           ; 'O'     -- 0d CW_OFF
1E97   3414           05119         retlw   h'14'           ; 'F'     -- 0e
1E98   3414           05120         retlw   h'14'           ; 'F'     -- 0f
1E99   34FF           05121         retlw   h'ff'           ; EOM     -- 10
1E9A   3405           05122         retlw   h'05'           ; 'N'     -- 11 CWHELLO
1E9B   3410           05123         retlw   h'10'           ; 'H'     -- 12
1E9C   340A           05124         retlw   h'0a'           ; 'R'     -- 13
1E9D   3415           05125         retlw   h'15'           ; 'C'     -- 14
1E9E   3400           05126         retlw   h'00'           ; ' '     -- 15
                      05127         IFDEF NHRC3_1
                      05128         retlw   h'38'           ; '3'     -- 16
                      05129         ELSE
1E9F   343C           05130         retlw   h'3c'           ; '2'     -- 16
                      05131         ENDIF
1EA0   346A           05132         retlw   h'6a'           ; '.'     -- 17
1EA1   343E           05133         retlw   h'3e'           ; '1'     -- 18
1EA2   3400           05134         retlw   h'00'           ; ' '     -- 19
1EA3   3418           05135         retlw   h'18'           ; 'V'     -- 1a
1EA4   343E           05136         retlw   VERS1           ; '%'     -- 1b 
1EA5   346A           05137         retlw   h'6a'           ; '.'     -- 1c
1EA6   343F           05138         retlw   VERS2           ; '%'     -- 1d
1EA7   343C           05139         retlw   VERS3           ; '%'     -- 1e
1EA8   34FF           05140         retlw   h'ff'           ; EOM     -- 1f
                      05141 
                      05142 ; ***********************
                      05143 ; * DTMF to HEX mapping *
                      05144 ; ***********************
                      05145 ;   ___ ___ ___ ___
                      05146 ;  |   |   |   |   |
                      05147 ;  | 1 | 2 | 3 | A |
                      05148 ;  |___|___|___|___|
                      05149 ;  |   |   |   |   |
                      05150 ;  | 4 | 5 | 6 | B |
                      05151 ;  |___|___|___|___|
                      05152 ;  |   |   |   |   |
                      05153 ;  | 7 | 8 | 9 | C |
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05154 ;  |___|___|___|___|
                      05155 ;  |   |   |   |   |
                      05156 ;  |*/E| 0 |#/F| D |
                      05157 ;  |___|___|___|___|
                      05158 ;
                      05159 
1EA9                  05160 MapDTMF
1EA9   00AE           05161         movwf   temp6           ; save tone.
1EAA   301E           05162         movlw   high DtTbl      ; set page.
1EAB   008A           05163         movwf   PCLATH          ; select page.
1EAC   082E           05164         movf    temp6,w         ; get tone back.
1EAD   0782           05165         addwf   PCL,f           ; add w to PCL
1EAE                  05166 DtTbl
1EAE   340D           05167         retlw   0d              ; 0 = D key
1EAF   3401           05168         retlw   01              ; 1 = 1 key
1EB0   3402           05169         retlw   02              ; 2 = 2 key
1EB1   3403           05170         retlw   03              ; 3 = 3 key
1EB2   3404           05171         retlw   04              ; 4 = 4 key
1EB3   3405           05172         retlw   05              ; 5 = 5 key
1EB4   3406           05173         retlw   06              ; 6 = 6 key
1EB5   3407           05174         retlw   07              ; 7 = 7 key
1EB6   3408           05175         retlw   08              ; 8 = 8 key
1EB7   3409           05176         retlw   09              ; 9 = 9 key
1EB8   3400           05177         retlw   00              ; A = 0 key
1EB9   340E           05178         retlw   0e              ; B = * key (e)
1EBA   340F           05179         retlw   0f              ; C = # key (f)
1EBB   340A           05180         retlw   0a              ; D = A key
1EBC   340B           05181         retlw   0b              ; E = B key
1EBD   340C           05182         retlw   0c              ; F = C key
                      05183         
                      05184 ; **************
                      05185 ; ** CWParms  **
                      05186 ; **************
1EBE                  05187 CWParms                         ; set CW parameters from timers.
1EBE   3009           05188         movlw   EETCWP          ; get EEPROM address of cw pitch preset.
1EBF   00CB           05189         movwf   eeAddr          ; set EEPROM address low byte.
1EC0   20AB           05190         call    ReadEEw         ; read EEPROM.
1EC1   00C8           05191         movwf   cwTone          ; save CW tone.
                      05192         
1EC2   300A           05193         movlw   EETCWS          ; get EEPROM address of cw speed preset.
1EC3   00CB           05194         movwf   eeAddr          ; set EEPROM address low byte.
1EC4   20AB           05195         call    ReadEEw         ; read EEPROM.
1EC5   2486           05196         call    GetCWD          ; get the CW delay for the indicated speed.
1EC6   00C9           05197         movwf   cwSpeed         ; save CW speed.
                      05198 
1EC7   0008           05199         return                  ; done here.
                      05200 
1F00                  05201         org     1f00
                      05202 
1F00   03FF           05203         FILL 0x3ff,0x0100       ; reserve this block for the ICD.
                      05204         
                      05205         IF LOAD_EE == 1 
2100                  05206         org     2100h
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

2100   0064           05207         de      d'100'          ; 0000 hang timer long 10.0 sec
2101   0032           05208         de      d'50'           ; 0001 hang timer short 5.0 sec
2102   0039           05209         de      d'57'           ; 0002 ID timer 120 sec for debug
2103   003C           05210         de      d'60'           ; 0003 DTMF access timer 60 sec
2104   00B4           05211         de      d'180'          ; 0004 timeout timer long 180 sec
2105   000F           05212         de      d'15'           ; 0005 timeout timer short 30 sec
2106   0006           05213         de      d'6'            ; 0006 fan timer 6 sec
2107   0000           05214         de      d'0'            ; 0007 tail message counter - units
2108   000C           05215         de      d'12'           ; 0008 alarm announce timer -- tens
2109   0014           05216         de      d'20'           ; 0009 cw pitch
210A   0014           05217         de      d'20'           ; 000a cw speed
210B   0000           05218         de      d'0'            ; 000b spare
210C   0000           05219         de      d'0'            ; 000c spare
210D   0000           05220         de      d'0'            ; 000d spare
210E   0000           05221         de      d'0'            ; 000e spare
210F   0000           05222         de      d'0'            ; 000f spare
                      05223 
                      05224         ;; control operator switches, set 0
2110   0049           05225         de      b'01001001'     ; 0010 control operator switches, group 0
2111   000B           05226         de      b'00001011'     ; 0011 control operator switches, group 1
2112   000F           05227         de      b'00001111'     ; 0012 control operator switches, group 2
2113   0000           05228         de      b'00000000'     ; 0013 control operator switches, group 3
2114   0000           05229         de      b'00000000'     ; 0014 control operator switches, group 4
2115   0000           05230         de      b'00000000'     ; 0015 control operator switches, group 5
2116   0000           05231         de      b'00000000'     ; 0016 control operator switches, group 6
2117   003F           05232         de      b'00111111'     ; 0017 control operator switches, group 7
2118   0000           05233         de      h'00'           ; 0018 spare
2119   0000           05234         de      h'00'           ; 0019 spare
211A   0000           05235         de      h'00'           ; 001a spare
211B   0000           05236         de      h'00'           ; 001b spare
211C   0000           05237         de      h'00'           ; 001c spare
211D   0000           05238         de      h'00'           ; 001d spare
211E   0000           05239         de      h'00'           ; 001e spare
211F   0000           05240         de      h'00'           ; 001f spare
                      05241 
                      05242         ;; control operator switches, set 1
                      05243 
2120   005B           05244         de      b'01011011'     ; 0020 control operator switches, group 0
2121   000F           05245         de      b'00001111'     ; 0021 control operator switches, group 1
2122   001F           05246         de      b'00011111'     ; 0022 control operator switches, group 2
2123   0001           05247         de      b'00000001'     ; 0023 control operator switches, group 3
2124   0000           05248         de      b'00000000'     ; 0024 control operator switches, group 4
2125   0000           05249         de      b'00000000'     ; 0025 control operator switches, group 5
2126   0000           05250         de      b'00000000'     ; 0026 control operator switches, group 6
2127   003F           05251         de      b'00111111'     ; 0027 control operator switches, group 7
2128   0000           05252         de      h'00'           ; 0028 spare
2129   0000           05253         de      h'00'           ; 0029 spare
212A   0000           05254         de      h'00'           ; 002a spare
212B   0000           05255         de      h'00'           ; 002b spare
212C   0000           05256         de      h'00'           ; 002c spare
212D   0000           05257         de      h'00'           ; 002d spare
212E   0000           05258         de      h'00'           ; 002e spare
212F   0000           05259         de      h'00'           ; 002f spare
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05260 
                      05261 
                      05262         ;; control operator switches, set 2
                      05263 
2130   0049           05264         de      b'01001001'     ; 0030 control operator switches, group 0
2131   000B           05265         de      b'00001011'     ; 0031 control operator switches, group 1
2132   000F           05266         de      b'00001111'     ; 0032 control operator switches, group 2
2133   0000           05267         de      b'00000000'     ; 0033 control operator switches, group 3
2134   0000           05268         de      b'00000000'     ; 0034 control operator switches, group 4
2135   0000           05269         de      b'00000000'     ; 0035 control operator switches, group 5
2136   0000           05270         de      b'00000000'     ; 0036 control operator switches, group 6
2137   003F           05271         de      b'00111111'     ; 0037 control operator switches, group 7
2138   0000           05272         de      h'00'           ; 0038 spare
2139   0000           05273         de      h'00'           ; 0039 spare
213A   0000           05274         de      h'00'           ; 003a spare
213B   0000           05275         de      h'00'           ; 003b spare
213C   0000           05276         de      h'00'           ; 003c spare
213D   0000           05277         de      h'00'           ; 003d spare
213E   0000           05278         de      h'00'           ; 003e spare
213F   0000           05279         de      h'00'           ; 003f spare
                      05280 
                      05281         ;; control operator switches, set 3
                      05282 
2140   0049           05283         de      b'01001001'     ; 0040 control operator switches, group 0
2141   000B           05284         de      b'00001011'     ; 0041 control operator switches, group 1
2142   000F           05285         de      b'00001111'     ; 0042 control operator switches, group 2
2143   0000           05286         de      b'00000000'     ; 0043 control operator switches, group 3
2144   0000           05287         de      b'00000000'     ; 0044 control operator switches, group 4
2145   0000           05288         de      b'00000000'     ; 0045 control operator switches, group 5
2146   0000           05289         de      b'00000000'     ; 0046 control operator switches, group 6
2147   003F           05290         de      b'00111111'     ; 0047 control operator switches, group 7
2148   0000           05291         de      h'00'           ; 0048 spare
2149   0000           05292         de      h'00'           ; 0049 spare
214A   0000           05293         de      h'00'           ; 004a spare
214B   0000           05294         de      h'00'           ; 004b spare
214C   0000           05295         de      h'00'           ; 004c spare
214D   0000           05296         de      h'00'           ; 004d spare
214E   0000           05297         de      h'00'           ; 004e spare
214F   0000           05298         de      h'00'           ; 004f spare
                      05299 
                      05300         ;; control operator switches, set 4
                      05301 
2150   0049           05302         de      b'01001001'     ; 0050 control operator switches, group 0
2151   0049           05303         de      b'01001001'     ; 0051 control operator switches, group 1
2152   000F           05304         de      b'00001111'     ; 0052 control operator switches, group 2
2153   0000           05305         de      b'00000000'     ; 0053 control operator switches, group 3
2154   0000           05306         de      b'00000000'     ; 0054 control operator switches, group 4
2155   0000           05307         de      b'00000000'     ; 0055 control operator switches, group 5
2156   0000           05308         de      b'00000000'     ; 0056 control operator switches, group 6
2157   003F           05309         de      b'00111111'     ; 0057 control operator switches, group 7
2158   0000           05310         de      h'00'           ; 0058 spare
2159   0000           05311         de      h'00'           ; 0059 spare
215A   0000           05312         de      h'00'           ; 005a spare
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

215B   0000           05313         de      h'00'           ; 005b spare
215C   0000           05314         de      h'00'           ; 005c spare
215D   0000           05315         de      h'00'           ; 005d spare
215E   0000           05316         de      h'00'           ; 005e spare
215F   0000           05317         de      h'00'           ; 005f spare
                      05318         
                      05319         ;; courtesy tone initial defaults
                      05320         ;; Main Receiver Courtesy Tone
2160   0005           05321         de      h'05'           ; 0060 Courtesy tone 0 00 length seg 1
2161   008C           05322         de      h'8c'           ; 0061 Courtesy tone 0 01 tone seg 1
2162   0005           05323         de      h'05'           ; 0062 Courtesy tone 0 02 length seg 2
2163   008F           05324         de      h'8f'           ; 0063 Courtesy tone 0 03 tone seg 2
2164   0005           05325         de      h'05'           ; 0064 Courtesy tone 0 04 length seg 3
2165   0093           05326         de      h'93'           ; 0065 Courtesy tone 0 05 tone seg 3
2166   0005           05327         de      h'05'           ; 0066 Courtesy tone 0 06 length seg 4
2167   0016           05328         de      h'16'           ; 0067 Courtesy tone 0 07 tone seg 4
                      05329         ;; Main Receiver Courtesy Tone, Link RX active, alert mode.
2168   000A           05330         de      h'0a'           ; 0068 Courtesy Tone 1 00 length seg 1
2169   008C           05331         de      h'8c'           ; 0069 Courtesy Tone 1 01 tone seg 1
216A   000A           05332         de      h'0a'           ; 006a Courtesy Tone 1 02 length seg 2
216B   000F           05333         de      h'0f'           ; 006b Courtesy Tone 1 03 tone seg 2
216C   0000           05334         de      h'00'           ; 006c Courtesy Tone 1 04 length seg 3
216D   0000           05335         de      h'00'           ; 006d Courtesy Tone 1 05 tone seg 3
216E   0000           05336         de      h'00'           ; 006e Courtesy Tone 1 06 length seg 4
216F   0000           05337         de      h'00'           ; 006f Courtesy Tone 1 07 tone seg 4
                      05338         ;; Main Receiver Courtesy Tone, Link TX on
2170   000A           05339         de      h'0a'           ; 0070 Courtesy tone 2 00 length seg 1
2171   008C           05340         de      h'8c'           ; 0071 Courtesy tone 2 01 tone seg 1
2172   000A           05341         de      h'0a'           ; 0072 Courtesy tone 2 02 length seg 2
2173   008F           05342         de      h'8f'           ; 0073 Courtesy tone 2 03 tone seg 2
2174   000A           05343         de      h'0a'           ; 0074 Courtesy tone 2 04 length seg 3
2175   0015           05344         de      h'15'           ; 0075 Courtesy tone 2 05 tone seg 3
2176   0000           05345         de      h'00'           ; 0076 Courtesy tone 2 06 length seg 4
2177   0000           05346         de      h'00'           ; 0077 Courtesy tone 2 07 tone seg 4
                      05347         ;; Link Receiver Courtesy Tone
2178   0005           05348         de      h'05'           ; 0078 Courtesy Tone 3 00 length seg 1
2179   0096           05349         de      h'96'           ; 0079 Courtesy Tone 3 01 tone seg 1
217A   0005           05350         de      h'05'           ; 007a Courtesy Tone 3 02 length seg 2
217B   0093           05351         de      h'93'           ; 007b Courtesy Tone 3 03 tone seg 2
217C   0005           05352         de      h'05'           ; 007c Courtesy Tone 3 04 length seg 3
217D   008F           05353         de      h'8f'           ; 007d Courtesy Tone 3 05 tone seg 3
217E   0005           05354         de      h'05'           ; 007e Courtesy Tone 3 06 length seg 4
217F   000B           05355         de      h'0b'           ; 007f Courtesy Tone 3 07 tone seg 4
                      05356         ;; Link Receiver Courtesy Tone, Link TX on
2180   000A           05357         de      h'0a'           ; 0080 Courtesy tone 4 00 length seg 1
2181   0096           05358         de      h'96'           ; 0081 Courtesy tone 4 01 tone seg 1
2182   000A           05359         de      h'0a'           ; 0082 Courtesy tone 4 02 length seg 2
2183   0093           05360         de      h'93'           ; 0083 Courtesy tone 4 03 tone seg 2
2184   000A           05361         de      h'0a'           ; 0084 Courtesy tone 4 04 length seg 3
2185   0010           05362         de      h'10'           ; 0085 Courtesy tone 4 05 tone seg 3
2186   0000           05363         de      h'00'           ; 0086 Courtesy tone 4 06 length seg 4
2187   0000           05364         de      h'00'           ; 0087 Courtesy tone 4 07 tone seg 4
                      05365         ;; Spare Courtesy Tone
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

2188   000A           05366         de      h'0a'           ; 0088 Courtesy Tone 5 00 length seg 1
2189   0008           05367         de      h'08'           ; 0089 Courtesy Tone 5 01 tone seg 1
218A   0000           05368         de      h'00'           ; 008a Courtesy Tone 5 02 length seg 2
218B   0000           05369         de      h'00'           ; 008b Courtesy Tone 5 03 tone seg 2
218C   0000           05370         de      h'00'           ; 008c Courtesy Tone 5 04 length seg 3
218D   0000           05371         de      h'00'           ; 008d Courtesy Tone 5 05 tone seg 3
218E   0000           05372         de      h'00'           ; 008e Courtesy Tone 5 06 length seg 4
218F   0000           05373         de      h'00'           ; 008f Courtesy Tone 5 07 tone seg 4
                      05374         ;; Tune Mode Courtesy Tone
2190   000A           05375         de      h'0a'           ; 0090 Courtesy tone 6 00 length seg 1
2191   0013           05376         de      h'13'           ; 0091 Courtesy tone 6 01 tone seg 1
2192   0000           05377         de      h'00'           ; 0092 Courtesy tone 6 02 length seg 2
2193   0000           05378         de      h'00'           ; 0093 Courtesy tone 6 03 tone seg 2
2194   0000           05379         de      h'00'           ; 0094 Courtesy tone 6 04 length seg 3
2195   0000           05380         de      h'00'           ; 0095 Courtesy tone 6 05 tone seg 3
2196   0000           05381         de      h'00'           ; 0096 Courtesy tone 6 06 length seg 4
2197   0000           05382         de      h'00'           ; 0097 Courtesy tone 6 07 tone seg 4
                      05383         ;; Unlocked Mode Courtesy Tone.
2198   000A           05384         de      h'0a'           ; 0098 Courtesy Tone 7 00 length seg 1
2199   009F           05385         de      h'9f'           ; 0099 Courtesy Tone 7 01 tone seg 1
219A   000A           05386         de      h'0a'           ; 009a Courtesy Tone 7 02 length seg 2
219B   0093           05387         de      h'93'           ; 009b Courtesy Tone 7 03 tone seg 2
219C   000A           05388         de      h'0a'           ; 009c Courtesy Tone 7 04 length seg 3
219D   009F           05389         de      h'9f'           ; 009d Courtesy Tone 7 05 tone seg 3
219E   000A           05390         de      h'0a'           ; 009e Courtesy Tone 7 06 length seg 4
219F   0013           05391         de      h'13'           ; 009f Courtesy Tone 7 07 tone seg 4
                      05392         
                      05393         ;; cw id initial defaults
21A0   0005           05394         de      h'05'           ; 00a0 CW ID  1 'n'   CW ID
21A1   0010           05395         de      h'10'           ; 00a1 CW ID  2 'h'
21A2   000A           05396         de      h'0a'           ; 00a2 CW ID  3 'r'
21A3   0015           05397         de      h'15'           ; 00a3 CW ID  4 'c'
21A4   0000           05398         de      h'00'           ; 00a4 CW ID  5 ' '
21A5   0038           05399         de      h'38'           ; 00a5 CW ID  6 '3'
21A6   006A           05400         de      h'6a'           ; 00a6 CW ID  7 '.'
21A7   003E           05401         de      h'3e'           ; 00a7 CW ID  8 '1'
21A8   0000           05402         de      h'00'           ; 00a8 CW ID  9 ' '
21A9   0018           05403         de      h'18'           ; 00a9 CW ID 10 'V'  VERSION DATA
21AA   003E           05404         de      VERS1           ; 00aa CW ID 11 -- defined at file head
21AB   006A           05405         de      h'6a'           ; 00ab CW ID 12 '.'
21AC   003F           05406         de      VERS2           ; 00ac CW ID 13 -- defined at file head
21AD   003C           05407         de      VERS3           ; 00ad CW ID 14 -- defined at file head
21AE   00FF           05408         de      h'ff'           ; 00ae CW ID 15 eom
21AF   00FF           05409         de      h'ff'           ; 00af CW ID 16 eom
                      05410         
                      05411         ;; control prefixes
21B0   0000           05412         de      h'00'           ; 00b0 control prefix 0  00
21B1   0000           05413         de      h'00'           ; 00b1 control prefix 0  01
21B2   00FF           05414         de      h'ff'           ; 00b2 control prefix 0  02
21B3   00FF           05415         de      h'ff'           ; 00b3 control prefix 0  03
21B4   00FF           05416         de      h'ff'           ; 00b4 control prefix 0  04
21B5   00FF           05417         de      h'ff'           ; 00b5 control prefix 0  05
21B6   00FF           05418         de      h'ff'           ; 00b6 control prefix 0  06
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

21B7   00FF           05419         de      h'ff'           ; 00b7 control prefix 0  07
21B8   0000           05420         de      h'00'           ; 00b8 control prefix 1  00
21B9   0001           05421         de      h'01'           ; 00b9 control prefix 1  01
21BA   00FF           05422         de      h'ff'           ; 00ba control prefix 1  02
21BB   00FF           05423         de      h'ff'           ; 00bb control prefix 1  03
21BC   00FF           05424         de      h'ff'           ; 00bc control prefix 1  04
21BD   00FF           05425         de      h'ff'           ; 00bd control prefix 1  05
21BE   00FF           05426         de      h'ff'           ; 00be control prefix 1  06
21BF   00FF           05427         de      h'ff'           ; 00bf control prefix 1  07
21C0   0000           05428         de      h'00'           ; 00c0 control prefix 2  00
21C1   0002           05429         de      h'02'           ; 00c1 control prefix 2  01
21C2   00FF           05430         de      h'ff'           ; 00c2 control prefix 2  02
21C3   00FF           05431         de      h'ff'           ; 00c3 control prefix 2  03
21C4   00FF           05432         de      h'ff'           ; 00c4 control prefix 2  04
21C5   00FF           05433         de      h'ff'           ; 00c5 control prefix 2  05
21C6   00FF           05434         de      h'ff'           ; 00c6 control prefix 2  06
21C7   00FF           05435         de      h'ff'           ; 00c7 control prefix 2  07
21C8   0000           05436         de      h'00'           ; 00c8 control prefix 3  00
21C9   0003           05437         de      h'03'           ; 00c9 control prefix 3  01
21CA   00FF           05438         de      h'ff'           ; 00ca control prefix 3  02
21CB   00FF           05439         de      h'ff'           ; 00cb control prefix 3  03
21CC   00FF           05440         de      h'ff'           ; 00cc control prefix 3  04
21CD   00FF           05441         de      h'ff'           ; 00cd control prefix 3  05
21CE   00FF           05442         de      h'ff'           ; 00ce control prefix 3  06
21CF   00FF           05443         de      h'ff'           ; 00cf control prefix 3  07
21D0   0000           05444         de      h'00'           ; 00d0 control prefix 4  00
21D1   0004           05445         de      h'04'           ; 00d1 control prefix 4  01
21D2   00FF           05446         de      h'ff'           ; 00d2 control prefix 4  02
21D3   00FF           05447         de      h'ff'           ; 00d3 control prefix 4  03
21D4   00FF           05448         de      h'ff'           ; 00d4 control prefix 4  04
21D5   00FF           05449         de      h'ff'           ; 00d5 control prefix 4  05
21D6   00FF           05450         de      h'ff'           ; 00d6 control prefix 4  06
21D7   00FF           05451         de      h'ff'           ; 00d7 control prefix 4  07
21D8   0000           05452         de      h'00'           ; 00d8 control prefix 5  00
21D9   0005           05453         de      h'05'           ; 00d9 control prefix 5  01
21DA   00FF           05454         de      h'ff'           ; 00da control prefix 5  02
21DB   00FF           05455         de      h'ff'           ; 00db control prefix 5  03
21DC   00FF           05456         de      h'ff'           ; 00dc control prefix 5  04
21DD   00FF           05457         de      h'ff'           ; 00dd control prefix 5  05
21DE   00FF           05458         de      h'ff'           ; 00de control prefix 5  06
21DF   00FF           05459         de      h'ff'           ; 00df control prefix 5  07
21E0   0000           05460         de      h'00'           ; 00e0 control prefix 6  00
21E1   0006           05461         de      h'06'           ; 00e1 control prefix 6  01
21E2   00FF           05462         de      h'ff'           ; 00e2 control prefix 6  02
21E3   00FF           05463         de      h'ff'           ; 00e3 control prefix 6  03
21E4   00FF           05464         de      h'ff'           ; 00e4 control prefix 6  04
21E5   00FF           05465         de      h'ff'           ; 00e5 control prefix 6  05
21E6   00FF           05466         de      h'ff'           ; 00e6 control prefix 6  06
21E7   00FF           05467         de      h'ff'           ; 00e7 control prefix 6  07
21E8   0000           05468         de      h'00'           ; 00e8 control prefix 7  00
21E9   0007           05469         de      h'07'           ; 00e9 control prefix 7  01
21EA   00FF           05470         de      h'ff'           ; 00ea control prefix 7  02
21EB   00FF           05471         de      h'ff'           ; 00eb control prefix 7  03
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

21EC   00FF           05472         de      h'ff'           ; 00ec control prefix 7  04
21ED   00FF           05473         de      h'ff'           ; 00ed control prefix 7  05
21EE   00FF           05474         de      h'ff'           ; 00ee control prefix 7  06
21EF   00FF           05475         de      h'ff'           ; 00ef control prefix 7  07
21F0   0001           05476         de      h'01'           ; 00f0 spare
21F1   0001           05477         de      h'01'           ; 00f1 spare
21F2   0001           05478         de      h'01'           ; 00f2 spare
21F3   0001           05479         de      h'01'           ; 00f3 spare
21F4   0000           05480         de      h'00'           ; 00f4 spare
21F5   0000           05481         de      h'00'           ; 00f5 spare
21F6   0000           05482         de      h'00'           ; 00f6 spare
21F7   0000           05483         de      h'00'           ; 00f7 spare
21F8   0000           05484         de      h'00'           ; 00f8 spare
21F9   0000           05485         de      h'00'           ; 00f9 spare
21FA   0000           05486         de      h'00'           ; 00fa spare
21FB   0000           05487         de      h'00'           ; 00fb spare
21FC   0000           05488         de      h'00'           ; 00fc spare
21FD   0000           05489         de      h'00'           ; 00fd spare
21FE   0000           05490         de      h'00'           ; 00fe spare
21FF   0000           05491         de      h'00'           ; 00ff spare
                      05492 
                      05493         ENDIF   
                      05494         
                      05495         end
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 112


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALARMED                           00000005
ALARMIN                           00000005
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
APC07                             0000001F
APC811                            000000B0
AlmDone                           000002FB
AlmOff                            000002F9
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BEEP                              00000001
BEEPING                           00000006
BEEP_CT                           00000084
BEEP_CX                           00000085
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 113


SYMBOL TABLE
  LABEL                             VALUE 

BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
B_ADR0                            00000000
B_ADR1                            00000001
B_BEEP                            00000002
B_CW                              00000003
B_LAST                            00000006
BeepDone                          0000185D
BeepTic                           000005CC
BitTbl                            00001E06
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 114


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHNKDEB                           000000FA
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIVGetB                           000006B8
CIVPutB                           000006E5
CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CMD_NIB                           00000004
COR0DBS                           00000050
COR0DEB                           00000005
COR1DEB                           00000005
CREN                              00000004
CSRC                              00000007
CT0                               00000000
CT1                               00000001
CT2                               00000002
CT3                               00000003
CTCSS0                            00000006
CTLOPS                            00000008
CTNONE                            000000FF
CTPAUSE                           00000005
CTSEL1                            00000004
CTSEL2                            00000005
CTSP1                             00000004
CTSP2                             00000005
CTSP3                             00000006
CTUNLOK                           00000007
CWBEEP                            00000007
CWDAH                             00000003
CWDIT                             00000001
CWDTbl                            00001C8C
CWDone                            000005B8
CWDone1                           000005BE
CWHELLO                           00000011
CWIESP                            00000001
CWILSP                            00000003
CWIWSP                            00000007
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 115


SYMBOL TABLE
  LABEL                             VALUE 

CWKeyUp                           000005A3
CWNext                            00000592
CWPLAY                            00000007
CWParms                           00001EBE
CWSendr                           00000579
CWTBDLY                           0000003C
CWTbl                             00001C06
CWTest                            000005AA
CWWord                            000005A0
CW_EE                             00000088
CW_ERR                            00000003
CW_OFF                            0000000D
CW_OK                             00000000
CW_ON                             0000000A
CW_ROM                            00000089
CW_TO                             00000007
CasEnd                            000005BF
Check1                            0000029F
Check10                           00000297
Check100                          0000028F
CheckTic                          000002A7
Chek1000                          00000287
ChkID                             000000B6
ChkID1                            000000BF
ChkRec                            0000046B
ChkTmrs                           000004FB
ChkTx                             00000567
ChkTx0                            00000572
ChkTxE                            00000579
Ck100mS                           0000050E
Ck10S                             00000552
Ck10mS                            000004FE
Ck1S                              00000549
CkDT0L                            00000328
CkDT0LZ                           00000333
CkDTDone                          00000336
CkDt0                             000005C1
CkI2                              0000033F
CkI3                              0000034C
CkRx0                             000002AE
CkTone                            000005BF
ClrMem                            00000234
CompInL                           0000001D
CompInt                           00000014
CpyDBth                           0000064F
CpyDLow                           0000064C
CpyDTMF                           0000063C
CpyDtLp                           00000641
CtlOpC                            00001048
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 116


SYMBOL TABLE
  LABEL                             VALUE 

DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DEF_CT                            00000005
DEF_ID                            00000006
DLY0DEB                           00000032
DLY1DEB                           00000064
DT0CMD                            00000005
DT0Done                           00000324
DT0Odd                            00000323
DT0RDY                            00000000
DT0UNLK                           00000005
DT0ZERO                           00000000
DT1CMD                            00000006
DT1RDY                            00000001
DT1UNLK                           00000006
DT2CMD                            00000007
DT2RDY                            00000002
DT2UNLK                           00000007
DTEdone                           00000630
DTEnext                           00000617
DTEval                            000005F6
DTEval1                           00000607
DTEvalN                           0000061A
DTEvalU                           0000062A
DTEvalY                           00000621
DTMFDLY                           00000032
DTMFQ1                            00000000
DTMFQ2                            00000001
DTMFQ3                            00000002
DTMFQ4                            00000003
DTMF_DV                           00000005
DTSEVAL                           00000004
DTUL                              00000003
D_A                               00000005
D_NOT_A                           00000005
DeHex                             000006C5
DeHexL                            000006CB
DebRx                             000002AC
DoID                              00000050
DoIDCW                            00000086
DoIDEu                            0000005A
DoIDI1                            0000007D
DoIDInt                           00000079
DoIDNCW                           0000006C
DoIDNor                           00000066
DoIDQ                             00000062
DoIDS                             00000075
DoIDSpc                           0000007F
DoIDrst                           00000092
DoTail                            000000C1
DtTbl                             00001EAE
ECCPAS                            0000009C
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 117


SYMBOL TABLE
  LABEL                             VALUE 

ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EE0B                              00000010
EE1B                              00000020
EE2B                              00000030
EE3B                              00000040
EE4B                              00000050
EEADR                             0000010D
EEADRH                            0000010F
EEALARM                           00000008
EECON1                            0000018C
EECON2                            0000018D
EECTB                             00000060
EECWID                            000000A0
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EELAST                            000000EF
EENSS                             00000004
EEPFB                             000000B0
EEPFC                             00000008
EEPFL                             00000008
EEPGD                             00000007
EESETSZ                           00000008
EESSC                             00000008
EETCWP                            00000009
EETCWS                            0000000A
EETDTA                            00000003
EETFAN                            00000006
EETHTL                            00000000
EETHTS                            00000001
EETID                             00000002
EETMRB                            00000000
EETTAIL                           00000007
EETTML                            00000004
EETTMS                            00000005
EEWrInt                           0000001E
F                                 00000001
FANCTL                            00000000
FERR                              00000002
FSR                               00000004
FVREN                             00000000
FanCtl                            00000635
FixSMsg                           00001089
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 118


SYMBOL TABLE
  LABEL                             VALUE 

Get100s                           00001E0E
GetBeep                           00001852
GetCTen                           0000190F
GetCW                             00001C00
GetCWD                            00001C86
GetDN1                            00001909
GetDN2                            00001905
GetDN99                           0000190D
GetDNum                           000018F3
GetHex                            000006DB
GetHex1                           000006E2
GetIE1                            00001CBE
GetIE1t                           00001CC3
GetIE2                            00001CC7
GetIE2t                           00001CCC
GetIS1                            00001CAC
GetIS1t                           00001CB1
GetIS2                            00001CB5
GetIS2t                           00001CBA
GetMask                           00001E00
GetTens                           00001E17
GetToneH                          00001E5E
GetToneL                          00001E39
GtBDT                             0000187F
GtBEE                             00001871
GtBRAM                            0000187A
GtBROM                            00001876
GtBeep                            00001866
GtBpTbl                           0000186D
HTS                               00000002
HUNDMS                            00000003
HangCT                            00000522
HangNob                           0000052F
HundTbl                           00001E13
I256a                             000000D2
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
ICMDBAD                           00000000
ICMDCLI                           00000003
ICMDDEL                           00000080
ICMDDID                           00000005
ICMDGER                           00000006
ICMDPL                            00000040
ICMDPU                            00000008
ICMDRDS                           00000004
ICMDREC                           000000C0
ICMDRST                           00000002
ICMDST                            00000001
ICMDWAP                           00000007
ICP2B                             000003C0
ICP7                              000003DF
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 119


SYMBOL TABLE
  LABEL                             VALUE 

ICPWINT                           000003FB
ICPcmd                            00000371
ICPcmd0                           00000387
ICPcmd1                           00000388
ICPcmd2                           00000397
ICPcmd3                           00000399
ICPcmd4                           0000039B
ICPcmd5                           000003A4
ICPcmd6                           000003AF
ICPcmd7                           000003B3
ICPcmd8                           000003BE
ICPdelay                          000003C6
ICPerase                          000003EE
ICPplay                           000003D1
ICPrec                            000003E1
ICPtbl                            00000377
IDLY100                           0000002A
IDLY200                           00000034
IDLY250                           00000039
IDLY50                            00000025
IDLY60                            00000026
IDNOW                             00000002
IDSOON                            00000006
IDTOGL                            00000003
IIDone                            00000354
INDF                              00000000
INIT                              00000004
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IQDone                            000003FD
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISDCINT                           00000020
ISDCmd2                           0000193D
ISDCmd3                           00001945
ISDCmd7                           00001950
ISDDID                            00000090
ISDERAS                           00000049
ISDERS                            00000003
ISDGER                            000000CA
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 120


SYMBOL TABLE
  LABEL                             VALUE 

ISDINT                            00000003
ISDPD                             000000E0
ISDPLAY                           00000009
ISDPU                             00000080
ISDREC                            00000089
ISDRECE                           00000007
ISDRECF                           00000001
ISDRECR                           00000002
ISDRST                            000000C0
ISDRUNF                           00000000
ISDSEL                            00000002
ISDSTOP                           00000040
ISDSTS                            000000A0
ISDTEST                           00000005
ISDWAPC                           000000A6
ISDZAPS                           00000006
ISMERAS                           00000007
ISMWAIT                           00000000
ISMWINT                           00000001
IdNoAlt                           00000070
IdNoTog                           00000073
Init256                           000000CE
InitDat                           00001D00
InitDl2                           000000E6
InitDly                           000000E5
InitDun                           0000025E
InitLp                            0000024F
InitPos                           000000E0
InitTbl                           00001D05
IntExit                           00000047
IntHndlr                          00000002
KillBeep                          0000184D
LASTTMR                           0000000A
LAST_DV                           00000007
LCmd                              00000800
LCmd0                             0000080D
LCmd0x                            00000811
LCmd1                             00000833
LCmd10                            00000845
LCmd2                             0000084A
LCmd3                             0000085C
LCmd4                             00000869
LCmd5                             0000086A
LCmd6                             0000086B
LCmd7                             0000086C
LCmdErr                           00000875
LCmdOK                            0000087C
LITZDT0                           00000002
LITZTIM                           00000014
LOAD_EE                           00000001
LTS                               00000001
LTable                            00000805
LoadCtl                           000018E0
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 121


SYMBOL TABLE
  LABEL                             VALUE 

Loop0                             00000285
Loop1                             000002AC
LoopE1                            0000063B
LoopEnd                           00000633
M0ORec                            00000427
MAXPFX                            00000007
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MUTEDLY                           00000014
Main0                             00000409
Main00                            0000043B
Main00a                           0000044A
Main00e                           00000443
Main01                            00000479
Main0R                            0000041F
Main0on                           0000042E
Main1                             00000486
Main10                            000004AA
Main10X                           000004B7
Main10a                           000004C4
Main10h                           000004CB
Main10m                           000004B3
Main10s                           000004CD
Main1Off                          000004A9
Main1TO                           000004A6
Main1X                            0000049C
Main2                             000004CE
Main2Off                          000004D2
Main2Py                           000004E2
Main2Sx                           000004DF
Main2TO                           000004E1
Main3                             000004E4
Main3OK                           000004EE
Main3Off                          000004E7
Main4                             000004F5
MainLp                            00000400
MainUM                            00000479
MapDTMF                           00001EA9
MesgTabl                          00001E83
MlTbl                             00000404
MsgNum                            0000192E
MsgNumN                           00001938
MsgTbl                            00001E89
Mult10                            00001925
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 122


SYMBOL TABLE
  LABEL                             VALUE 

NBeep                             000005D4
NIsdTmr                           0000035A
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NewPlay                           00000707
NoAlTmr                           00000567
NoAlm                             000002F4
NoCW                              000005BF
NoDTATm                           00000567
NoDeb                             000002FB
NoFanTm                           00000562
NoHang                            00000542
NoIDTmr                           0000055A
NoMutTm                           00000549
NoTime                            000005DF
NoTimr                            00000567
NoULTmr                           00000552
NormRec                           00000470
OERR                              00000001
ONEMS                             00000001
ONESEC                            00000004
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
OUT1                              00000006
OUT2                              00000007
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PAGE0                             
PAGE1                             
PAGE2                             
PAGE3                             
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 123


SYMBOL TABLE
  LABEL                             VALUE 

PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PTTfan                            00001891
PTTinit                           0000188B
PTToff                            00001896
PTTon                             00001881
PTTset                            0000188C
PULSR                             00000002
PULSS                             00000003
PULS_TM                           00000032
PWM1CON                           0000009B
PfxDT0                            000005E2
PlayCT                            00001829
PlayCT1                           00001847
PlayCTx                           0000181D
PlayCW                            00001800
PlayCWe                           0000180D
PlayTl                            000000C4
PulsEnd                           0000050E
PutEEB                            00001919
QISDC2                            00000718
QISDCmd                           0000070F
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 124


SYMBOL TABLE
  LABEL                             VALUE 

RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RE3                               00000003
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX0AUD                            00000004
RX0COR                            00000001
RX0OPEN                           00000000
RX0PL                             00000002
RX9                               00000006
RX9D                              00000000
RXSOFF                            00000000
RXSOFON                           00000004
RXSON                             00000001
RXSREC                            00000003
RXSTMO                            00000002
R_NOT_W                           00000002
R_W                               00000002
Rcv0Off                           000000A0
RdDT0                             00000305
RdDT0m                            0000030A
ReadEE                            000018A1
ReadEEd                           000018A4
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 125


SYMBOL TABLE
  LABEL                             VALUE 

ReadEEw                           000018AB
RecEnd1                           000004BB
ResetTC                           000000C5
Rx00Dbc                           000002E0
Rx01Dbc                           000002D0
Rx0COR1                           000002B5
Rx0CkPL                           000002BF
Rx0Done                           000002EA
Rx0NC                             000002E9
Rx0Off                            000002D4
Rx0On                             000002C1
Rx0SDeb                           000002CE
S                                 00000003
SBOREN                            00000004
SCACK                             0000004B
SCATTN                            0000003A
SCCR                              0000000D
SCEnd                             000006B5
SCKP                              00000004
SCLF                              0000000A
SCNAK                             0000004E
SCProc                            00000658
SCREAD                            00000052
SCRead                            00000691
SCReadL                           000006A6
SCS                               00000000
SCSNAK                            00000688
SCTERM                            0000000D
SCWLoop                           0000066C
SCWRITE                           00000057
SCWrite                           00000665
SC_RDY                            00000007
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SRcvInt                           00000021
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 126


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SXmtInt                           00000034
SYNC                              00000004
SendSPI                           00001968
SerOut                            000006F1
SetBeep                           00001863
SetDig                            00001093
SetHang                           000000A6
SetTone                           00001E2C
SimRec                            00000475
SndByte                           000006CF
Start                             00000200
Start1                            00000261
Start2                            00000269
Stomp                             00000453
Stomp1                            00000463
StompNS                           0000045C
StopTone                          00001E37
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PRE                             00000025
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TAIL2F                            00000004
TALKING                           00000005
TEN                               0000000A
TENMS                             00000002
TENSEC                            00000005
TICK                              00000000
TMR0                              00000001
TMR0IE                            00000005
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 127


SYMBOL TABLE
  LABEL                             VALUE 

TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISE                             00000089
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX0PTT                            00000000
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 128


SYMBOL TABLE
  LABEL                             VALUE 

TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXHANG                            00000002
TXIE                              00000004
TXIF                              00000004
TXONFLG                           00000003
TXREG                             00000019
TXSTA                             00000098
TenTbl                            00001E1C
TimrInt                           0000000E
TnTblH                            00001E63
TnTblL                            00001E3E
TonDone                           000005C7
UA                                00000001
UC70R                             00001186
UC70RL                            0000118D
UC71P                             00001143
UC71R                             0000114B
UC71RL                            0000115F
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
ULTable                           00001022
UNLKDLY                           00000078
USMode                            00000539
UTIntD                            00000044
UlCm011                           00001082
UlCm0ND                           00001081
UlCmd                             00001000
UlCmd0                            00001032
UlCmd01                           0000106D
UlCmd0I                           0000109C
UlCmd1                            000010AD
UlCmd2                            000010C7
UlCmd2P                           000010EB
UlCmd3                            000010FC
UlCmd3a                           00001125
UlCmd4                            0000112B
UlCmd5                            0000112C
UlCmd6                            0000112D
UlCmd7                            0000112E
UlCmd70                           0000117B
UlCmd71                           00001136
UlCmd8                            000011A7
UlCmd8P                           000011C2
UlCmd9                            000011D1
UlCmdA                            000011D1
UlCmdB                            000011D1
UlCmdC                            000011D1
UlCmdD                            000011D1
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 129


SYMBOL TABLE
  LABEL                             VALUE 

UlCmdE                            000011D2
UlCmdF                            000011D3
UlCmdNG                           000011D8
UlCmdNGx                          000011D6
UlCmdOK                           000011D4
UlErr                             000011D9
UlStar                            00001017
VCFG0                             00000004
VCFG1                             00000005
VCTONE                            00000003
VERS1                             0000003E
VERS2                             0000003F
VERS3                             0000003C
VINITID                           00000000
VLAST                             00000003
VNORMID                           00000001
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
VSIMPLX                           00000001
VTAIL                             00000003
VTIMOUT                           00000002
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WaitSPI                           0000196A
WrEELp                            000018BD
WritEd                            000018C5
WriteEE                           000018BA
WriteEl                           000018DA
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 130


SYMBOL TABLE
  LABEL                             VALUE 

WriteEw                           000018C4
XPfxDT                            000005F5
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 131


SYMBOL TABLE
  LABEL                             VALUE 

_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F886                          00000001
alrmTmr                           00000062
beepAddr                          00000036
beepCtl                           00000037
beepTmr                           00000035
cTone                             0000004A
cmdSize                           0000002F
cmdbf00                           000001A0
cmdbf01                           000001A1
cmdbf02                           000001A2
cmdbf03                           000001A3
cmdbf04                           000001A4
cmdbf05                           000001A5
cmdbf06                           000001A6
cmdbf07                           000001A7
cmdbf08                           000001A8
cmdbf09                           000001A9
cmdbf0a                           000001AA
cmdbf0b                           000001AB
cmdbf0c                           000001AC
cmdbf0d                           000001AD
cmdbf0e                           000001AE
cmdbf0f                           000001AF
cmdbf10                           000001B0
cmdbf11                           000001B1
cmdbf12                           000001B2
cmdbf13                           000001B3
cmdbf14                           000001B4
cmdbf15                           000001B5
cmdbf16                           000001B6
cmdbf17                           000001B7
cmdbf18                           000001B8
cmdbf19                           000001B9
cmdbf1a                           000001BA
cmdbf1b                           000001BB
cmdbf1c                           000001BC
cmdbf1d                           000001BD
cmdbf1e                           000001BE
cmdbf1f                           000001BF
cwByte                            00000046
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 132


SYMBOL TABLE
  LABEL                             VALUE 

cwSpeed                           00000049
cwTbTmr                           00000047
cwTmr                             00000045
cwTone                            00000048
dt0Ptr                            00000072
dt0Tmr                            00000073
dt0buf0                           00000120
dt0buf1                           00000121
dt0buf2                           00000122
dt0buf3                           00000123
dt0buf4                           00000124
dt0buf5                           00000125
dt0buf6                           00000126
dt0buf7                           00000127
dt0buf8                           00000128
dt0buf9                           00000129
dt0bufa                           0000012A
dt0bufb                           0000012B
dt0bufc                           0000012C
dt0bufd                           0000012D
dt0bufe                           0000012E
dt0buff                           0000012F
dtATmr                            0000003F
dtEFlag                           00000075
dtRFlag                           00000074
eeAddr                            0000004B
eeCount                           0000004C
eebPtr                            00000076
eebuf00                           00000130
eebuf01                           00000131
eebuf02                           00000132
eebuf03                           00000133
eebuf04                           00000134
eebuf05                           00000135
eebuf06                           00000136
eebuf07                           00000137
eebuf08                           00000138
eebuf09                           00000139
eebuf0a                           0000013A
eebuf0b                           0000013B
eebuf0c                           0000013C
eebuf0d                           0000013D
eebuf0e                           0000013E
eebuf0f                           0000013F
f_copy                            00000022
fanTmr                            00000040
flags                             00000030
group0                            0000004D
group1                            0000004E
group2                            0000004F
group3                            00000050
group4                            00000051
group5                            00000052
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 133


SYMBOL TABLE
  LABEL                             VALUE 

group6                            00000053
group7                            00000054
hangDly                           00000044
hangTmr                           0000003C
hundMsC                           00000027
i_temp                            00000023
idTmr                             0000003B
initID                            00000000
isdCmd                            00000060
isdDly                            00000055
isdDvId                           0000005B
isdE1                             0000005E
isdE2                             0000005F
isdFlag                           00000034
isdMsg                            00000056
isdRMsg                           00000057
isdS1                             0000005C
isdS2                             0000005D
isdcb00                           000000E0
isdcb01                           000000E1
isdcb02                           000000E2
isdcb03                           000000E3
isdcb04                           000000E4
isdcb05                           000000E5
isdcb06                           000000E6
isdcb07                           000000E7
isdcbh                            0000007C
isdcbt                            0000007D
ismpcf                            00000061
lMutTmr                           0000003E
mscFlag                           00000031
muteTmr                           0000003D
needID                            00000001
oneMsC                            00000025
p_copy                            00000021
pulsTmr                           00000043
rICD165                           00000165
rICD166                           00000166
rICD167                           00000167
rICD168                           00000168
rICD169                           00000169
rICD16a                           0000016A
rICD16b                           0000016B
rICD16c                           0000016C
rICD16d                           0000016D
rICD16e                           0000016E
rICD16f                           0000016F
rICD70                            00000070
rsvd170                           00000170
rsvd171                           00000171
rsvd172                           00000172
rsvd173                           00000173
rsvd174                           00000174
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 134


SYMBOL TABLE
  LABEL                             VALUE 

rsvd175                           00000175
rsvd176                           00000176
rsvd177                           00000177
rsvd178                           00000178
rsvd179                           00000179
rsvd17a                           0000017A
rsvd17b                           0000017B
rsvd17c                           0000017C
rsvd17d                           0000017D
rsvd17e                           0000017E
rsvd17f                           0000017F
rsvd1f0                           000001F0
rsvd1f1                           000001F1
rsvd1f2                           000001F2
rsvd1f3                           000001F3
rsvd1f4                           000001F4
rsvd1f5                           000001F5
rsvd1f6                           000001F6
rsvd1f7                           000001F7
rsvd1f8                           000001F8
rsvd1f9                           000001F9
rsvd1fa                           000001FA
rsvd1fb                           000001FB
rsvd1fc                           000001FC
rsvd1fd                           000001FD
rsvd1fe                           000001FE
rsvd1ff                           000001FF
rsvdf0                            000000F0
rsvdf1                            000000F1
rsvdf2                            000000F2
rsvdf3                            000000F3
rsvdf4                            000000F4
rsvdf5                            000000F5
rsvdf6                            000000F6
rsvdf7                            000000F7
rsvdf8                            000000F8
rsvdf9                            000000F9
rsvdfa                            000000FA
rsvdfb                            000000FB
rsvdfc                            000000FC
rsvdfd                            000000FD
rsvdfe                            000000FE
rsvdff                            000000FF
rx0Dbc                            00000038
rx0Stat                           00000039
rx0TOut                           0000003A
rxBuf00                           000000C0
rxBuf01                           000000C1
rxBuf02                           000000C2
rxBuf03                           000000C3
rxBuf04                           000000C4
rxBuf05                           000000C5
rxBuf06                           000000C6
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 135


SYMBOL TABLE
  LABEL                             VALUE 

rxBuf07                           000000C7
rxBuf08                           000000C8
rxBuf09                           000000C9
rxBuf0a                           000000CA
rxBuf0b                           000000CB
rxBuf0c                           000000CC
rxBuf0d                           000000CD
rxBuf0e                           000000CE
rxBuf0f                           000000CF
rxBuf10                           000000D0
rxBuf11                           000000D1
rxBuf12                           000000D2
rxBuf13                           000000D3
rxBuf14                           000000D4
rxBuf15                           000000D5
rxBuf16                           000000D6
rxBuf17                           000000D7
rxBuf18                           000000D8
rxBuf19                           000000D9
rxBuf1a                           000000DA
rxBuf1b                           000000DB
rxBuf1c                           000000DC
rxBuf1d                           000000DD
rxBuf1e                           000000DE
rxBuf1f                           000000DF
rxFlag                            00000033
rxHead                            0000007A
rxTail                            0000007B
s_copy                            00000020
scratch                           00000077
sr0hi                             00000059
sr0lo                             00000058
sr1lo                             0000005A
tFlags                            00000024
tailCtr                           00000041
temp                              00000029
temp2                             0000002A
temp3                             0000002B
temp4                             0000002C
temp5                             0000002D
temp6                             0000002E
tenMsC                            00000026
thouMsC                           00000028
txBuf00                           000000A0
txBuf01                           000000A1
txBuf02                           000000A2
txBuf03                           000000A3
txBuf04                           000000A4
txBuf05                           000000A5
txBuf06                           000000A6
txBuf07                           000000A7
txBuf08                           000000A8
txBuf09                           000000A9
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 136


SYMBOL TABLE
  LABEL                             VALUE 

txBuf0a                           000000AA
txBuf0b                           000000AB
txBuf0c                           000000AC
txBuf0d                           000000AD
txBuf0e                           000000AE
txBuf0f                           000000AF
txBuf10                           000000B0
txBuf11                           000000B1
txBuf12                           000000B2
txBuf13                           000000B3
txBuf14                           000000B4
txBuf15                           000000B5
txBuf16                           000000B6
txBuf17                           000000B7
txBuf18                           000000B8
txBuf19                           000000B9
txBuf1a                           000000BA
txBuf1b                           000000BB
txBuf1c                           000000BC
txBuf1d                           000000BD
txBuf1e                           000000BE
txBuf1f                           000000BF
txFlag                            00000032
txHead                            00000078
txTail                            00000079
unlkTmr                           00000042
w_copy                            00000071
xPC07                             00000015


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XX--XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXX--- ----------------
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXX--
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 137


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX---------- ----------------
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXX------------- ---------------- ---------------- ----------------
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXX- ---------------- ----------------
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXX- ----------------
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX ---------------- ---------------- ----------------
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXX-----------
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXX-------- ---------------- ---------------- ----------------
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : -------X-------- ---------------- ---------------- ----------------
2100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.51                      NHRC-3_1.ASM   1-23-2022  11:45:10         PAGE 138


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


2140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
21C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX

All other memory blocks unused.

Program Memory Words Used:  3437
Program Memory Words Free:  4755


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   118 suppressed

